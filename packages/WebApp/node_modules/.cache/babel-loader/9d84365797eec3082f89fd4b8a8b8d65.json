{"ast":null,"code":"var _jsxFileName = \"/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/packages/WebApp/src/Components/Pages/MainPage.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles, createStyles } from \"@imploy/common-themes\";\nimport AboutDrawer from \"../../Modules/AboutDrawer\";\nimport ChangeNetworkDrawer from \"../../Modules/ChangeNetworkDrawer\";\nimport NetworkUnsupportedModal from \"../../Modules/NetworkUnsupportedModal\";\nimport PreflightModal from \"../../Modules/PreflightModal\";\nimport { Button, Typography, FormikSelectInput, FormikTextInput, QuestionCircleSvg } from \"@imploy/common-components\";\nimport { Form, Formik } from \"formik\";\nimport AddressInput from \"../Custom/AddressInput\";\nimport { useWallet } from \"use-wallet\";\nimport clsx from \"clsx\";\nimport TransactionActiveModal from \"../../Modules/TransactionActiveModal\";\nconst useStyles = makeStyles(({\n  constants,\n  palette\n}) => createStyles({\n  root: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    maxWidth: 460,\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: constants.generalUnit * 6,\n    border: `1px solid ${palette.additional[\"gray\"][7]}`,\n    borderRadius: 4,\n    color: palette.additional[\"gray\"][8],\n    overflow: \"hidden\"\n  },\n  walletArea: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n  connectButton: {\n    margin: `${constants.generalUnit * 3}px 0 ${constants.generalUnit * 6}px`\n  },\n  connecting: {\n    textAlign: \"center\",\n    marginBottom: constants.generalUnit * 2\n  },\n  connected: {\n    width: \"100%\",\n    \"& > *:first-child\": {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      width: \"100%\"\n    }\n  },\n  changeButton: {\n    cursor: \"pointer\"\n  },\n  networkName: {\n    padding: `${constants.generalUnit * 2}px ${constants.generalUnit * 1.5}px`,\n    border: `1px solid ${palette.additional[\"gray\"][6]}`,\n    borderRadius: 2,\n    color: palette.additional[\"gray\"][9],\n    marginTop: constants.generalUnit,\n    marginBottom: constants.generalUnit * 3\n  },\n  formArea: {\n    \"&.disabled\": {\n      opacity: 0.4\n    }\n  },\n  currencySection: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n    margin: `${constants.generalUnit * 3}px 0`\n  },\n  tokenInputArea: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"flex-end\",\n    justifyContent: \"space-around\",\n    paddingRight: constants.generalUnit\n  },\n  tokenInput: {\n    margin: 0,\n    \"& > *:last-child\": {\n      height: 32,\n      \"& input\": {\n        borderBottomRightRadius: 0,\n        borderTopRightRadius: 0,\n        borderRight: 0\n      }\n    }\n  },\n  maxButton: {\n    height: 32,\n    borderBottomLeftRadius: 0,\n    borderTopLeftRadius: 0,\n    left: -1,\n    color: palette.additional[\"gray\"][8],\n    backgroundColor: palette.additional[\"gray\"][3],\n    borderColor: palette.additional[\"gray\"][6],\n    \"&:hover\": {\n      borderColor: palette.additional[\"gray\"][6],\n      backgroundColor: palette.additional[\"gray\"][7],\n      color: palette.common.white.main\n    }\n  },\n  currencySelector: {\n    width: 120\n  },\n  token: {},\n  address: {\n    margin: 0,\n    marginBottom: constants.generalUnit * 3\n  },\n  addressInput: {},\n  generalInput: {\n    \"& > span\": {\n      marginBottom: constants.generalUnit\n    }\n  },\n  faqButton: {\n    cursor: \"pointer\",\n    height: 20,\n    width: 20,\n    marginTop: constants.generalUnit * 5\n  }\n}));\nvar WALLET_STATE;\n\n(function (WALLET_STATE) {\n  WALLET_STATE[\"Disconnected\"] = \"disconnected\";\n  WALLET_STATE[\"Connecting\"] = \"connecting\";\n  WALLET_STATE[\"Connected\"] = \"connected\";\n})(WALLET_STATE || (WALLET_STATE = {}));\n\nconst MainPage = () => {\n  const classes = useStyles();\n  const [walletState, setWalletState] = useState(WALLET_STATE.Disconnected);\n  const [aboutOpen, setAboutOpen] = useState(false);\n  const [changeNetworkOpen, setChangeNetworkOpen] = useState(false);\n  const [networkUnsupportedOpen, setnetworkUnsupportedOpen] = useState(false);\n  const [preflightModalOpen, setPreflightModalOpen] = useState(false);\n  const [transactionActiveModalOpen, setTransactionActiveModalOpen] = useState(false);\n  const [sendingAddress, setSendingAddress] = useState(\"\");\n  const evmWallet = useWallet();\n  useEffect(() => {\n    if (evmWallet.account && walletState !== WALLET_STATE.Connected) {\n      setWalletState(WALLET_STATE.Connected);\n      setSendingAddress(evmWallet.account);\n    }\n  }, [evmWallet, walletState]);\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.walletArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, walletState === WALLET_STATE.Disconnected ? /*#__PURE__*/React.createElement(Button, {\n    className: classes.connectButton,\n    fullsize: true,\n    onClick: () => {\n      evmWallet.connect(\"injected\");\n      setWalletState(WALLET_STATE.Connecting);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, \"Connect Metamask\") : walletState === WALLET_STATE.Connecting ? /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.connecting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"p\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, \"This app requires access to your wallet, \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 56\n    }\n  }), \"please login and authorize access to continue.\")) : /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.connected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, \"Home network\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.changeButton,\n    variant: \"body1\",\n    onClick: () => setChangeNetworkOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, \"Change\")), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h2\",\n    className: classes.networkName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, `Ethereum - ${evmWallet.networkName}`))), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      tokenAmount: 0,\n      token: {},\n      receiver: \"\",\n      destinationNetwork: \"\"\n    },\n    onSubmit: values => {\n      console.log(\"Transfer\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: clsx(classes.formArea, {\n      disabled: walletState !== WALLET_STATE.Connected\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormikSelectInput, {\n    label: \"Destination Network\",\n    name: \"destinationNetwork\",\n    className: classes.generalInput,\n    disabled: walletState !== WALLET_STATE.Connected,\n    options: [{\n      label: \"a\",\n      value: \"a\"\n    }, {\n      label: \"b\",\n      value: \"b\"\n    }, {\n      label: \"c\",\n      value: \"c\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.currencySection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.tokenInputArea, classes.generalInput),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormikTextInput, {\n    className: clsx(classes.tokenInput, classes.generalInput),\n    disabled: walletState !== WALLET_STATE.Connected,\n    name: \"tokenAmount\",\n    label: \"I want to send\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: walletState !== WALLET_STATE.Connected,\n    className: classes.maxButton,\n    variant: \"outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, \"MAX\"))), /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.currencySelector,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormikSelectInput, {\n    name: \"token\",\n    disabled: walletState !== WALLET_STATE.Connected,\n    value: \"ETH\",\n    label: `Balance: 0.00 ETH`,\n    className: classes.generalInput,\n    options: [{\n      label: /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.token,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 28\n        }\n      }, \"ETH\"),\n      value: \"ETH\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AddressInput, {\n    disabled: walletState !== WALLET_STATE.Connected,\n    name: \"receiver\",\n    label: \"Destination Address\",\n    placeholder: \"Please enter the receiving address\",\n    className: classes.address,\n    classNames: {\n      input: classes.addressInput\n    },\n    senderAddress: `${sendingAddress}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: walletState !== WALLET_STATE.Connected,\n    type: \"submit\",\n    fullsize: true,\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, \"Start transfer\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(QuestionCircleSvg, {\n    onClick: () => setAboutOpen(true),\n    className: classes.faqButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(AboutDrawer, {\n    open: aboutOpen,\n    close: () => setAboutOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ChangeNetworkDrawer, {\n    open: changeNetworkOpen,\n    close: () => setChangeNetworkOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NetworkUnsupportedModal, {\n    open: networkUnsupportedOpen,\n    close: () => setnetworkUnsupportedOpen(false),\n    network: `Ropsten`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PreflightModal, {\n    open: preflightModalOpen,\n    close: () => setPreflightModalOpen(false),\n    receiver: \"0xDC6fFC3f404D9dA507735c294f023373079D2B8b\",\n    sender: `0xDC6fFC3f404D9dA507735c294f023373079D2B8b` // sender={`${evmWallet.account}`}\n    ,\n    start: () => {\n      console.log(\"start\");\n      setPreflightModalOpen(false);\n    },\n    sourceNetwork: \"Ethereum\",\n    targetNetwork: \"Celo\",\n    token: \"ETH\",\n    value: 0.02,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TransactionActiveModal, {\n    open: transactionActiveModalOpen,\n    close: () => setTransactionActiveModalOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default MainPage;","map":{"version":3,"sources":["/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/packages/WebApp/src/Components/Pages/MainPage.tsx"],"names":["React","useEffect","useState","makeStyles","createStyles","AboutDrawer","ChangeNetworkDrawer","NetworkUnsupportedModal","PreflightModal","Button","Typography","FormikSelectInput","FormikTextInput","QuestionCircleSvg","Form","Formik","AddressInput","useWallet","clsx","TransactionActiveModal","useStyles","constants","palette","root","position","top","left","transform","maxWidth","display","flexDirection","padding","generalUnit","border","additional","borderRadius","color","overflow","walletArea","alignItems","justifyContent","width","connectButton","margin","connecting","textAlign","marginBottom","connected","changeButton","cursor","networkName","marginTop","formArea","opacity","currencySection","tokenInputArea","paddingRight","tokenInput","height","borderBottomRightRadius","borderTopRightRadius","borderRight","maxButton","borderBottomLeftRadius","borderTopLeftRadius","backgroundColor","borderColor","common","white","main","currencySelector","token","address","addressInput","generalInput","faqButton","WALLET_STATE","MainPage","classes","walletState","setWalletState","Disconnected","aboutOpen","setAboutOpen","changeNetworkOpen","setChangeNetworkOpen","networkUnsupportedOpen","setnetworkUnsupportedOpen","preflightModalOpen","setPreflightModalOpen","transactionActiveModalOpen","setTransactionActiveModalOpen","sendingAddress","setSendingAddress","evmWallet","account","Connected","connect","Connecting","tokenAmount","receiver","destinationNetwork","values","console","log","disabled","label","value","input"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@imploy/common-themes\";\nimport AboutDrawer from \"../../Modules/AboutDrawer\";\nimport ChangeNetworkDrawer from \"../../Modules/ChangeNetworkDrawer\";\nimport NetworkUnsupportedModal from \"../../Modules/NetworkUnsupportedModal\";\nimport PreflightModal from \"../../Modules/PreflightModal\";\nimport {\n  Button,\n  Typography,\n  FormikSelectInput,\n  FormikTextInput,\n  QuestionCircleSvg,\n} from \"@imploy/common-components\";\nimport { Form, Formik } from \"formik\";\nimport AddressInput from \"../Custom/AddressInput\";\nimport { useWallet } from \"use-wallet\";\nimport clsx from \"clsx\";\nimport TransactionActiveModal from \"../../Modules/TransactionActiveModal\";\n\nconst useStyles = makeStyles(({ constants, palette }: ITheme) =>\n  createStyles({\n    root: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      maxWidth: 460,\n      display: \"flex\",\n      flexDirection: \"column\",\n      padding: constants.generalUnit * 6,\n      border: `1px solid ${palette.additional[\"gray\"][7]}`,\n      borderRadius: 4,\n      color: palette.additional[\"gray\"][8],\n      overflow: \"hidden\",\n    },\n    walletArea: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n    },\n    connectButton: {\n      margin: `${constants.generalUnit * 3}px 0 ${constants.generalUnit * 6}px`,\n    },\n    connecting: {\n      textAlign: \"center\",\n      marginBottom: constants.generalUnit * 2,\n    },\n    connected: {\n      width: \"100%\",\n      \"& > *:first-child\": {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n      },\n    },\n    changeButton: {\n      cursor: \"pointer\",\n    },\n    networkName: {\n      padding: `${constants.generalUnit * 2}px ${\n        constants.generalUnit * 1.5\n      }px`,\n      border: `1px solid ${palette.additional[\"gray\"][6]}`,\n      borderRadius: 2,\n      color: palette.additional[\"gray\"][9],\n      marginTop: constants.generalUnit,\n      marginBottom: constants.generalUnit * 3,\n    },\n    formArea: {\n      \"&.disabled\": {\n        opacity: 0.4,\n      },\n    },\n    currencySection: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"flex-end\",\n      margin: `${constants.generalUnit * 3}px 0`,\n    },\n    tokenInputArea: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"flex-end\",\n      justifyContent: \"space-around\",\n      paddingRight: constants.generalUnit,\n    },\n    tokenInput: {\n      margin: 0,\n      \"& > *:last-child\": {\n        height: 32,\n        \"& input\": {\n          borderBottomRightRadius: 0,\n          borderTopRightRadius: 0,\n          borderRight: 0,\n        },\n      },\n    },\n    maxButton: {\n      height: 32,\n      borderBottomLeftRadius: 0,\n      borderTopLeftRadius: 0,\n      left: -1,\n      color: palette.additional[\"gray\"][8],\n      backgroundColor: palette.additional[\"gray\"][3],\n      borderColor: palette.additional[\"gray\"][6],\n      \"&:hover\": {\n        borderColor: palette.additional[\"gray\"][6],\n        backgroundColor: palette.additional[\"gray\"][7],\n        color: palette.common.white.main,\n      },\n    },\n    currencySelector: {\n      width: 120,\n    },\n    token: {},\n    address: {\n      margin: 0,\n      marginBottom: constants.generalUnit * 3,\n    },\n    addressInput: {},\n    generalInput: {\n      \"& > span\": {\n        marginBottom: constants.generalUnit,\n      },\n    },\n    faqButton: {\n      cursor: \"pointer\",\n      height: 20,\n      width: 20,\n      marginTop: constants.generalUnit * 5,\n    },\n  })\n);\n\nenum WALLET_STATE {\n  Disconnected = \"disconnected\",\n  Connecting = \"connecting\",\n  Connected = \"connected\",\n}\n\nconst MainPage = () => {\n  const classes = useStyles();\n\n  const [walletState, setWalletState] = useState<WALLET_STATE>(\n    WALLET_STATE.Disconnected\n  );\n\n  const [aboutOpen, setAboutOpen] = useState<boolean>(false);\n  const [changeNetworkOpen, setChangeNetworkOpen] = useState<boolean>(false);\n  const [networkUnsupportedOpen, setnetworkUnsupportedOpen] = useState<boolean>(\n    false\n  );\n  const [preflightModalOpen, setPreflightModalOpen] = useState<boolean>(false);\n  const [transactionActiveModalOpen, setTransactionActiveModalOpen] = useState<\n    boolean\n  >(false);\n\n  const [sendingAddress, setSendingAddress] = useState(\"\");\n  const evmWallet = useWallet();\n\n  useEffect(() => {\n    if (evmWallet.account && walletState !== WALLET_STATE.Connected) {\n      setWalletState(WALLET_STATE.Connected);\n      setSendingAddress(evmWallet.account);\n    }\n  }, [evmWallet, walletState]);\n\n  return (\n    <article className={classes.root}>\n      <div className={classes.walletArea}>\n        {walletState === WALLET_STATE.Disconnected ? (\n          <Button\n            className={classes.connectButton}\n            fullsize\n            onClick={() => {\n              evmWallet.connect(\"injected\");\n              setWalletState(WALLET_STATE.Connecting);\n            }}\n          >\n            Connect Metamask\n          </Button>\n        ) : walletState === WALLET_STATE.Connecting ? (\n          <section className={classes.connecting}>\n            <Typography component=\"p\" variant=\"h5\">\n              This app requires access to your wallet, <br />\n              please login and authorize access to continue.\n            </Typography>\n          </section>\n        ) : (\n          <section className={classes.connected}>\n            <div>\n              <Typography variant=\"body1\">Home network</Typography>\n              <Typography\n                className={classes.changeButton}\n                variant=\"body1\"\n                onClick={() => setChangeNetworkOpen(true)}\n              >\n                Change\n              </Typography>\n            </div>\n            <Typography\n              component=\"h2\"\n              variant=\"h2\"\n              className={classes.networkName}\n            >\n              {`Ethereum - ${evmWallet.networkName}`}\n            </Typography>\n          </section>\n        )}\n      </div>\n      <Formik\n        initialValues={{\n          tokenAmount: 0,\n          token: {},\n          receiver: \"\",\n          destinationNetwork: \"\",\n        }}\n        onSubmit={(values: any) => {\n          console.log(\"Transfer\");\n        }}\n      >\n        <Form\n          className={clsx(classes.formArea, {\n            disabled: walletState !== WALLET_STATE.Connected,\n          })}\n        >\n          <section>\n            <FormikSelectInput\n              label=\"Destination Network\"\n              name=\"destinationNetwork\"\n              className={classes.generalInput}\n              disabled={walletState !== WALLET_STATE.Connected}\n              options={[\n                { label: \"a\", value: \"a\" },\n                { label: \"b\", value: \"b\" },\n                { label: \"c\", value: \"c\" },\n              ]}\n            />\n          </section>\n          <section className={classes.currencySection}>\n            <section>\n              <div\n                className={clsx(classes.tokenInputArea, classes.generalInput)}\n              >\n                <FormikTextInput\n                  className={clsx(classes.tokenInput, classes.generalInput)}\n                  disabled={walletState !== WALLET_STATE.Connected}\n                  name=\"tokenAmount\"\n                  label=\"I want to send\"\n                  type=\"number\"\n                />\n                <Button\n                  disabled={walletState !== WALLET_STATE.Connected}\n                  className={classes.maxButton}\n                  variant=\"outline\"\n                >\n                  MAX\n                </Button>\n              </div>\n            </section>\n            <section className={classes.currencySelector}>\n              {/* TODO Wire up to approved tokens */}\n              <FormikSelectInput\n                name=\"token\"\n                disabled={walletState !== WALLET_STATE.Connected}\n                value={\"ETH\"}\n                label={`Balance: 0.00 ETH`}\n                className={classes.generalInput}\n                options={[\n                  {\n                    label: <div className={classes.token}>ETH</div>,\n                    value: \"ETH\",\n                  },\n                ]}\n              />\n            </section>\n          </section>\n          <section>\n            <AddressInput\n              disabled={walletState !== WALLET_STATE.Connected}\n              name=\"receiver\"\n              label=\"Destination Address\"\n              placeholder=\"Please enter the receiving address\"\n              className={classes.address}\n              classNames={{\n                input: classes.addressInput,\n              }}\n              senderAddress={`${sendingAddress}`}\n            />\n          </section>\n          <section>\n            <Button\n              disabled={walletState !== WALLET_STATE.Connected}\n              type=\"submit\"\n              fullsize\n              variant=\"primary\"\n            >\n              Start transfer\n            </Button>\n          </section>\n          <section>\n            <QuestionCircleSvg\n              onClick={() => setAboutOpen(true)}\n              className={classes.faqButton}\n            />\n          </section>\n        </Form>\n      </Formik>\n      <AboutDrawer open={aboutOpen} close={() => setAboutOpen(false)} />\n      <ChangeNetworkDrawer\n        open={changeNetworkOpen}\n        close={() => setChangeNetworkOpen(false)}\n      />\n      <NetworkUnsupportedModal\n        open={networkUnsupportedOpen}\n        close={() => setnetworkUnsupportedOpen(false)}\n        network={`Ropsten`}\n      />\n      <PreflightModal\n        open={preflightModalOpen}\n        close={() => setPreflightModalOpen(false)}\n        receiver={\"0xDC6fFC3f404D9dA507735c294f023373079D2B8b\"}\n        sender={`0xDC6fFC3f404D9dA507735c294f023373079D2B8b`}\n        // sender={`${evmWallet.account}`}\n        start={() => {\n          console.log(\"start\");\n          setPreflightModalOpen(false);\n        }}\n        sourceNetwork={\"Ethereum\"}\n        targetNetwork={\"Celo\"}\n        token=\"ETH\"\n        value={0.02}\n      />\n      <TransactionActiveModal\n        open={transactionActiveModalOpen}\n        close={() => setTransactionActiveModalOpen(false)}\n      />\n    </article>\n  );\n};\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}