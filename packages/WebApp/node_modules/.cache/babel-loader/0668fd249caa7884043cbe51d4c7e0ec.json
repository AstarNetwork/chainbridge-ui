{"ast":null,"code":"import _regeneratorRuntime from \"/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nimport { n as networkName } from './onboard-c11b1ecb.js';\nimport 'bignumber.js';\nimport 'bnc-sdk';\nimport 'bowser';\nvar torusIcon = \"<svg width=\\\"257\\\" height=\\\"277\\\" viewBox=\\\"0 0 257 277\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<rect width=\\\"153.889\\\" height=\\\"82.0741\\\" fill=\\\"#0364FF\\\" />\\n<rect x=\\\"71.8135\\\" width=\\\"82.0741\\\" height=\\\"277\\\" fill=\\\"#0364FF\\\" />\\n<path d=\\\"M215.443 82.0741C238.107 82.0741 256.48 63.7012 256.48 41.037C256.48 18.3729 238.107 0 215.443 \\n0C192.779 0 174.406 18.3729 174.406 41.037C174.406 63.7012 192.779 82.0741 215.443 82.0741Z\\\" fill=\\\"#0364FF\\\" />\\n</svg>\";\n\nfunction torus(options) {\n  var networkId = options.networkId,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg,\n      buttonPosition = options.buttonPosition,\n      modalZIndex = options.modalZIndex,\n      apiKey = options.apiKey,\n      buildEnv = options.buildEnv,\n      enableLogging = options.enableLogging,\n      enabledVerifiers = options.enabledVerifiers,\n      loginConfig = options.loginConfig,\n      showTorusButton = options.showTorusButton,\n      integrity = options.integrity,\n      whiteLabel = options.whiteLabel,\n      loginMethod = options.loginMethod;\n  return {\n    name: label || 'Torus',\n    svg: svg || torusIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _yield$import, Torus, instance, provider;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return import('@toruslabs/torus-embed');\n\n              case 2:\n                _yield$import = _context3.sent;\n                Torus = _yield$import[\"default\"];\n                instance = new Torus({\n                  buttonPosition: buttonPosition,\n                  modalZIndex: modalZIndex,\n                  apiKey: apiKey\n                });\n                _context3.next = 7;\n                return instance.init({\n                  buildEnv: buildEnv,\n                  enableLogging: enableLogging,\n                  network: {\n                    host: networkName(networkId),\n                    chainId: networkId,\n                    networkName: \"\".concat(networkName(networkId), \" Network\") // default: Main Ethereum Network\n\n                  },\n                  showTorusButton: showTorusButton,\n                  enabledVerifiers: enabledVerifiers,\n                  loginConfig: loginConfig,\n                  integrity: integrity,\n                  whiteLabel: whiteLabel\n                });\n\n              case 7:\n                provider = instance.provider;\n                return _context3.abrupt(\"return\", {\n                  provider: provider,\n                  instance: instance,\n                  \"interface\": {\n                    name: 'Torus',\n                    connect: function () {\n                      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                        var result;\n                        return _regeneratorRuntime.wrap(function _callee$(_context) {\n                          while (1) {\n                            switch (_context.prev = _context.next) {\n                              case 0:\n                                _context.next = 2;\n                                return instance.login({\n                                  verifier: loginMethod\n                                });\n\n                              case 2:\n                                result = _context.sent;\n                                return _context.abrupt(\"return\", {\n                                  message: result[0]\n                                });\n\n                              case 4:\n                              case \"end\":\n                                return _context.stop();\n                            }\n                          }\n                        }, _callee);\n                      }));\n\n                      function connect() {\n                        return _connect.apply(this, arguments);\n                      }\n\n                      return connect;\n                    }(),\n                    disconnect: function disconnect() {\n                      return instance.cleanUp();\n                    },\n                    address: {\n                      get: function get() {\n                        return Promise.resolve(instance.web3.eth.accounts[0]);\n                      }\n                    },\n                    network: {\n                      get: function get() {\n                        return Promise.resolve(Number(instance.web3.version.network));\n                      }\n                    },\n                    balance: {\n                      get: function get() {\n                        return new Promise( /*#__PURE__*/function () {\n                          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(resolve, reject) {\n                            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                              while (1) {\n                                switch (_context2.prev = _context2.next) {\n                                  case 0:\n                                    instance.web3.eth.getBalance(instance.web3.eth.accounts[0], function (err, data) {\n                                      if (err) {\n                                        reject(\"Error while checking Balance: \".concat(err));\n                                      } else {\n                                        resolve(data.toString(10));\n                                      }\n                                    });\n\n                                  case 1:\n                                  case \"end\":\n                                    return _context2.stop();\n                                }\n                              }\n                            }, _callee2);\n                          }));\n\n                          return function (_x, _x2) {\n                            return _ref.apply(this, arguments);\n                          };\n                        }());\n                      }\n                    },\n                    dashboard: function dashboard() {\n                      return instance.showWallet('home');\n                    }\n                  }\n                });\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function wallet() {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'sdk',\n    desktop: true,\n    mobile: true,\n    preferred: preferred\n  };\n}\n\nexport default torus;","map":{"version":3,"sources":["/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/node_modules/bnc-onboard/dist/esm/torus-49f2a671.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","n","networkName","torusIcon","torus","options","networkId","preferred","label","iconSrc","svg","buttonPosition","modalZIndex","apiKey","buildEnv","enableLogging","enabledVerifiers","loginConfig","showTorusButton","integrity","whiteLabel","loginMethod","name","wallet","_wallet","mark","_callee3","_yield$import","Torus","instance","provider","wrap","_callee3$","_context3","prev","next","sent","init","network","host","chainId","concat","abrupt","connect","_connect","_callee","result","_callee$","_context","login","verifier","message","stop","disconnect","cleanUp","address","get","web3","eth","accounts","Number","version","balance","_ref","_callee2","_callee2$","_context2","getBalance","data","toString","_x","_x2","dashboard","showWallet","type","desktop","mobile"],"mappings":"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","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport 'regenerator-runtime/runtime';\nimport { n as networkName } from './onboard-c11b1ecb.js';\nimport 'bignumber.js';\nimport 'bnc-sdk';\nimport 'bowser';\nvar torusIcon = \"<svg width=\\\"257\\\" height=\\\"277\\\" viewBox=\\\"0 0 257 277\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<rect width=\\\"153.889\\\" height=\\\"82.0741\\\" fill=\\\"#0364FF\\\" />\\n<rect x=\\\"71.8135\\\" width=\\\"82.0741\\\" height=\\\"277\\\" fill=\\\"#0364FF\\\" />\\n<path d=\\\"M215.443 82.0741C238.107 82.0741 256.48 63.7012 256.48 41.037C256.48 18.3729 238.107 0 215.443 \\n0C192.779 0 174.406 18.3729 174.406 41.037C174.406 63.7012 192.779 82.0741 215.443 82.0741Z\\\" fill=\\\"#0364FF\\\" />\\n</svg>\";\n\nfunction torus(options) {\n  var networkId = options.networkId,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg,\n      buttonPosition = options.buttonPosition,\n      modalZIndex = options.modalZIndex,\n      apiKey = options.apiKey,\n      buildEnv = options.buildEnv,\n      enableLogging = options.enableLogging,\n      enabledVerifiers = options.enabledVerifiers,\n      loginConfig = options.loginConfig,\n      showTorusButton = options.showTorusButton,\n      integrity = options.integrity,\n      whiteLabel = options.whiteLabel,\n      loginMethod = options.loginMethod;\n  return {\n    name: label || 'Torus',\n    svg: svg || torusIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _yield$import, Torus, instance, provider;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return import('@toruslabs/torus-embed');\n\n              case 2:\n                _yield$import = _context3.sent;\n                Torus = _yield$import[\"default\"];\n                instance = new Torus({\n                  buttonPosition: buttonPosition,\n                  modalZIndex: modalZIndex,\n                  apiKey: apiKey\n                });\n                _context3.next = 7;\n                return instance.init({\n                  buildEnv: buildEnv,\n                  enableLogging: enableLogging,\n                  network: {\n                    host: networkName(networkId),\n                    chainId: networkId,\n                    networkName: \"\".concat(networkName(networkId), \" Network\") // default: Main Ethereum Network\n\n                  },\n                  showTorusButton: showTorusButton,\n                  enabledVerifiers: enabledVerifiers,\n                  loginConfig: loginConfig,\n                  integrity: integrity,\n                  whiteLabel: whiteLabel\n                });\n\n              case 7:\n                provider = instance.provider;\n                return _context3.abrupt(\"return\", {\n                  provider: provider,\n                  instance: instance,\n                  \"interface\": {\n                    name: 'Torus',\n                    connect: function () {\n                      var _connect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                        var result;\n                        return regeneratorRuntime.wrap(function _callee$(_context) {\n                          while (1) {\n                            switch (_context.prev = _context.next) {\n                              case 0:\n                                _context.next = 2;\n                                return instance.login({\n                                  verifier: loginMethod\n                                });\n\n                              case 2:\n                                result = _context.sent;\n                                return _context.abrupt(\"return\", {\n                                  message: result[0]\n                                });\n\n                              case 4:\n                              case \"end\":\n                                return _context.stop();\n                            }\n                          }\n                        }, _callee);\n                      }));\n\n                      function connect() {\n                        return _connect.apply(this, arguments);\n                      }\n\n                      return connect;\n                    }(),\n                    disconnect: function disconnect() {\n                      return instance.cleanUp();\n                    },\n                    address: {\n                      get: function get() {\n                        return Promise.resolve(instance.web3.eth.accounts[0]);\n                      }\n                    },\n                    network: {\n                      get: function get() {\n                        return Promise.resolve(Number(instance.web3.version.network));\n                      }\n                    },\n                    balance: {\n                      get: function get() {\n                        return new Promise( /*#__PURE__*/function () {\n                          var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(resolve, reject) {\n                            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                              while (1) {\n                                switch (_context2.prev = _context2.next) {\n                                  case 0:\n                                    instance.web3.eth.getBalance(instance.web3.eth.accounts[0], function (err, data) {\n                                      if (err) {\n                                        reject(\"Error while checking Balance: \".concat(err));\n                                      } else {\n                                        resolve(data.toString(10));\n                                      }\n                                    });\n\n                                  case 1:\n                                  case \"end\":\n                                    return _context2.stop();\n                                }\n                              }\n                            }, _callee2);\n                          }));\n\n                          return function (_x, _x2) {\n                            return _ref.apply(this, arguments);\n                          };\n                        }());\n                      }\n                    },\n                    dashboard: function dashboard() {\n                      return instance.showWallet('home');\n                    }\n                  }\n                });\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function wallet() {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'sdk',\n    desktop: true,\n    mobile: true,\n    preferred: preferred\n  };\n}\n\nexport default torus;"]},"metadata":{},"sourceType":"module"}