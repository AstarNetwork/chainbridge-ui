{"ast":null,"code":"var _jsxFileName = \"/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/packages/WebApp/src/Modules/TransactionModal.tsx\";\nimport React from \"react\";\nimport { makeStyles, createStyles } from \"@imploy/common-themes\";\nimport CustomDrawer from \"../Components/Custom/CustomDrawer\";\nimport { Button, Typography } from \"@imploy/common-components\";\nconst useStyles = makeStyles(() => createStyles({\n  root: {}\n}));\n\nconst TransactionModal = ({\n  open,\n  close,\n  receiver,\n  sender,\n  sourceNetwork,\n  targetNetwork,\n  token,\n  value\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(CustomDrawer, {\n    size: 430,\n    open: open,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Pre-flight check\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Please be advised this is an experimental application:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"You will not be able to cancel the transaction once you submit it.\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Your transaction could get stuck for an indefinite amount of time\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }, \"Funds cannot be returned if they are sent to the wrong address.\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"The transaction fee may be higher than expected.\"))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"I agree and want to send \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 34\n    }\n  }, value, \" \", token), \" from\\xA0\", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, sender), \" on \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 38\n    }\n  }, sourceNetwork), \" to\\xA0\", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, receiver), \" on \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 40\n    }\n  }, targetNetwork), \".\"), /*#__PURE__*/React.createElement(Button, {\n    fullsize: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Start Transfer\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: close,\n    variant: \"outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Back\"));\n};\n\nexport default TransactionModal;","map":{"version":3,"sources":["/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/packages/WebApp/src/Modules/TransactionModal.tsx"],"names":["React","makeStyles","createStyles","CustomDrawer","Button","Typography","useStyles","root","TransactionModal","open","close","receiver","sender","sourceNetwork","targetNetwork","token","value","classes"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { makeStyles, createStyles } from \"@imploy/common-themes\";\nimport CustomDrawer from \"../Components/Custom/CustomDrawer\";\nimport { Button, Typography } from \"@imploy/common-components\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {},\n  })\n);\n\ninterface ITransactionModalProps {\n  open: boolean\n  close: () => void,\n  sender: string\n  receiver: string\n  value: number\n  token: string\n  sourceNetwork: string\n  targetNetwork: string\n}\n\nconst TransactionModal: React.FC<ITransactionModalProps> = ({ \n  open,\n  close,\n  receiver,\n  sender,\n  sourceNetwork,\n  targetNetwork,\n  token,\n  value\n }: ITransactionModalProps) => {\n  const classes = useStyles();\n\n  return (\n    <CustomDrawer size={430} open={open} className={classes.root}>\n      <Typography variant=\"h3\" component=\"h2\">\n        Pre-flight check\n      </Typography>\n      <Typography variant=\"h5\" component=\"p\">\n        Please be advised this is an experimental application:\n      </Typography>\n      <ul>\n        <li>\n          <Typography variant=\"h5\">\n            You will not be able to cancel the transaction once you submit it.\n          </Typography>\n        </li>\n        <li>\n          <Typography variant=\"h5\">\n            Your transaction could get stuck for an indefinite amount of time\n          </Typography>\n        </li>\n        <li>\n         <Typography variant=\"h5\">\n          Funds cannot be returned if they are sent to the wrong address.\n         </Typography>\n        </li>\n        <li>\n          <Typography variant=\"h5\">\n            The transaction fee may be higher than expected.\n          </Typography>\n        </li>\n      </ul>\n      <Typography variant=\"h5\" component=\"p\">\n        I agree and want to send <strong>{value} {token}</strong> from&nbsp;\n        <strong>{sender}</strong> on <strong>{sourceNetwork}</strong> to&nbsp;\n        <strong>{receiver}</strong> on <strong>{targetNetwork}</strong>.\n      </Typography>\n      <Button fullsize>Start Transfer</Button>\n      <Button onClick={close} variant=\"outline\">Back</Button>\n    </CustomDrawer>\n  );\n};\n\nexport default TransactionModal;\n"]},"metadata":{},"sourceType":"module"}