{"ast":null,"code":"var _jsxFileName = \"/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/packages/WebApp/src/Contexts/ChainbridgeContext.tsx\";\nimport React, { useContext } from \"react\";\nconst ChainbridgeContext = React.createContext(undefined);\n\nconst ChainbridgeProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/React.createElement(ChainbridgeContext.Provider, {\n    value: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nconst useChainbridge = () => {\n  const context = useContext(ChainbridgeContext);\n\n  if (context === undefined) {\n    throw new Error(\"useChainbridge must be called within a DriveProvider\");\n  }\n};\n\nexport { ChainbridgeProvider, useChainbridge };","map":{"version":3,"sources":["/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/packages/WebApp/src/Contexts/ChainbridgeContext.tsx"],"names":["React","useContext","ChainbridgeContext","createContext","undefined","ChainbridgeProvider","children","useChainbridge","context","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAQA,MAAMC,kBAAkB,GAAGF,KAAK,CAACG,aAAN,CACzBC,SADyB,CAA3B;;AAIA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4C;AACtE,sBACE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QADH,CADF;AAKD,CAND;;AAQA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,OAAO,GAAGP,UAAU,CAACC,kBAAD,CAA1B;;AACA,MAAIM,OAAO,KAAKJ,SAAhB,EAA2B;AACzB,UAAM,IAAIK,KAAJ,CAAU,sDAAV,CAAN;AACD;AACF,CALD;;AAOA,SAASJ,mBAAT,EAA8BE,cAA9B","sourcesContent":["import React, { useContext } from \"react\";\n\ninterface IChainbridgeContextProps {\n  children: React.ReactNode | React.ReactNode[];\n}\n\ntype ChainbridgeContext = {};\n\nconst ChainbridgeContext = React.createContext<ChainbridgeContext | undefined>(\n  undefined\n);\n\nconst ChainbridgeProvider = ({ children }: IChainbridgeContextProps) => {\n  return (\n    <ChainbridgeContext.Provider value={{}}>\n      {children}\n    </ChainbridgeContext.Provider>\n  );\n};\n\nconst useChainbridge = () => {\n  const context = useContext(ChainbridgeContext);\n  if (context === undefined) {\n    throw new Error(\"useChainbridge must be called within a DriveProvider\");\n  }\n};\n\nexport { ChainbridgeProvider, useChainbridge };\n"]},"metadata":{},"sourceType":"module"}