{"ast":null,"code":"var _jsxFileName = \"/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/packages/WebApp/src/Modules/TransactionActiveModal.tsx\";\nimport React, { useState } from \"react\";\nimport { makeStyles, createStyles } from \"@imploy/common-themes\";\nimport { Button, Typography } from \"@imploy/common-components\";\nimport CustomModal from \"../Components/Custom/CustomModal\";\nimport { useWallet } from \"use-wallet\";\nconst useStyles = makeStyles(({\n  animation,\n  constants,\n  palette,\n  typography\n}) => createStyles({\n  root: {\n    width: \"100%\"\n  },\n  inner: {\n    width: \"100% !important\",\n    maxWidth: \"unset !important\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: `${constants.generalUnit * 5}px ${constants.generalUnit * 3.5}px`,\n    bottom: 0,\n    top: \"unset\",\n    transform: \"unset\",\n    left: 0,\n    border: \"none\",\n    borderRadius: 0,\n    transitionDuration: `${animation.transform}ms`,\n    borderTop: `6px solid ${palette.additional[\"geekblue\"][5]}`\n  },\n  heading: {\n    marginBottom: constants.generalUnit,\n    whiteSpace: \"nowrap\"\n  },\n  stepIndicator: { ...typography.h4,\n    height: 40,\n    width: 40,\n    marginRight: constants.generalUnit * 2,\n    borderRadius: \"50%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: palette.additional[\"geekblue\"][6],\n    border: `1px solid ${palette.additional[\"geekblue\"][4]}`\n  },\n  content: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  buttons: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: constants.generalUnit * 5,\n    \"& > *\": {\n      marginRight: constants.generalUnit\n    }\n  },\n  button: {\n    borderColor: palette.additional[\"gray\"][8],\n    color: palette.additional[\"gray\"][8],\n    \"&:hover\": {\n      borderColor: palette.additional[\"gray\"][8],\n      backgroundColor: palette.additional[\"gray\"][8],\n      color: palette.common.white.main\n    }\n  },\n  initCopy: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    \"& > *:first-child\": {\n      marginTop: constants.generalUnit * 3.5,\n      marginBottom: constants.generalUnit * 8\n    }\n  },\n  sendingCopy: {},\n  vote: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: constants.generalUnit,\n    \"& > *\": {\n      \"&:first-child\": {\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        maxWidth: 240\n      },\n      \"&:last-child\": {\n        marginLeft: constants.generalUnit * 3.5,\n        fontStyle: \"italic\"\n      }\n    }\n  },\n  warning: {\n    marginTop: constants.generalUnit * 3.5,\n    display: \"block\"\n  },\n  receipt: {\n    marginTop: constants.generalUnit * 3.5,\n    marginBottom: constants.generalUnit * 8\n  }\n}));\nvar TRANSACTION_STATE;\n\n(function (TRANSACTION_STATE) {\n  TRANSACTION_STATE[\"init\"] = \"init\";\n  TRANSACTION_STATE[\"inTransit\"] = \"inTransit\";\n  TRANSACTION_STATE[\"done\"] = \"done\";\n})(TRANSACTION_STATE || (TRANSACTION_STATE = {}));\n\nconst TransactionActiveModal = ({\n  open,\n  close\n}) => {\n  const classes = useStyles();\n  const evmWallet = useWallet();\n  const Quorum = 6;\n  const [state, setState] = useState(TRANSACTION_STATE.done);\n  const [signatures, setSignatures] = useState([{\n    address: \"consmosasdasdasdasdasdasdasd3ex12\",\n    signed: \"rejected\"\n  }, {\n    address: \"c11111onsmosasdasdasdasdasdasdasd3ex12\",\n    signed: \"pending\"\n  }, {\n    address: \"consmoas22sasdasdasdasdasdasdasd3ex12\",\n    signed: \"pending\"\n  }, {\n    address: \"cons123123mosasdasdasdasdasdasdasd3ex12\",\n    signed: \"rejected\"\n  }, {\n    address: \"co11111nsmosasdasdasdasdasdasdasd3ex12\",\n    signed: \"confirmed\"\n  }, {\n    address: \"mmmconsmosasdasdasdasdasdasdasd3ex12\",\n    signed: \"confirmed\"\n  }]);\n  return /*#__PURE__*/React.createElement(CustomModal, {\n    className: classes.root,\n    injectedClass: {\n      inner: classes.inner\n    },\n    active: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stepIndicator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, state === TRANSACTION_STATE.init ? \"1\" : state === TRANSACTION_STATE.inTransit ? \"2\" : \"3  \")), /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    variant: \"h3\",\n    component: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, state === TRANSACTION_STATE.init ? \"Initializing Transfer\" : state === TRANSACTION_STATE.inTransit ? `In Transit (${signatures.filter(sig => sig.signed === \"confirmed\").length}/${Quorum} signatures needed)` : \"Transfer completed\"), state === TRANSACTION_STATE.init ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.initCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, \"Deposit pending...\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, \"This should take a few minutes.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }), \"Please do not refresh or leave the page.\")) : state === TRANSACTION_STATE.inTransit ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sendingCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, \"Proposal created on \", evmWallet.networkName), signatures.map((sig, index) => /*#__PURE__*/React.createElement(Typography, {\n    className: classes.vote,\n    component: \"p\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, \"Vote casted by \", sig.address), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, sig.signed === \"confirmed\" ? \"Confirmed\" : sig.signed === \"rejected\" ? \"Rejected\" : null))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.warning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, \"This should take a few minutes. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 47\n    }\n  }), \"Please do not refresh or leave the page.\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.receipt,\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, \"Successfully transferred\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, \"0.25 ETH \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 26\n    }\n  }), \" from \", evmWallet.networkName, \" to Rinkeby.\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: close,\n    size: \"small\",\n    className: classes.button,\n    variant: \"outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, \"View transaction\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    className: classes.button,\n    variant: \"outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, \"Start new transfer\")))));\n};\n\nexport default TransactionActiveModal;","map":{"version":3,"sources":["/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/packages/WebApp/src/Modules/TransactionActiveModal.tsx"],"names":["React","useState","makeStyles","createStyles","Button","Typography","CustomModal","useWallet","useStyles","animation","constants","palette","typography","root","width","inner","maxWidth","display","flexDirection","padding","generalUnit","bottom","top","transform","left","border","borderRadius","transitionDuration","borderTop","additional","heading","marginBottom","whiteSpace","stepIndicator","h4","height","marginRight","justifyContent","alignItems","color","content","buttons","marginTop","button","borderColor","backgroundColor","common","white","main","initCopy","sendingCopy","vote","overflow","textOverflow","marginLeft","fontStyle","warning","receipt","TRANSACTION_STATE","TransactionActiveModal","open","close","classes","evmWallet","Quorum","state","setState","done","signatures","setSignatures","address","signed","init","inTransit","filter","sig","length","networkName","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@imploy/common-themes\";\nimport { Button, Typography } from \"@imploy/common-components\";\nimport CustomModal from \"../Components/Custom/CustomModal\";\nimport { useWallet } from \"use-wallet\";\n\nconst useStyles = makeStyles(\n  ({ animation, constants, palette, typography }: ITheme) =>\n    createStyles({\n      root: {\n        width: \"100%\",\n      },\n      inner: {\n        width: \"100% !important\",\n        maxWidth: \"unset !important\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        padding: `${constants.generalUnit * 5}px ${\n          constants.generalUnit * 3.5\n        }px`,\n        bottom: 0,\n        top: \"unset\",\n        transform: \"unset\",\n        left: 0,\n        border: \"none\",\n        borderRadius: 0,\n        transitionDuration: `${animation.transform}ms`,\n        borderTop: `6px solid ${palette.additional[\"geekblue\"][5]}`,\n      },\n      heading: {\n        marginBottom: constants.generalUnit,\n        whiteSpace: \"nowrap\",\n      },\n      stepIndicator: {\n        ...typography.h4,\n        height: 40,\n        width: 40,\n        marginRight: constants.generalUnit * 2,\n        borderRadius: \"50%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        color: palette.additional[\"geekblue\"][6],\n        border: `1px solid ${palette.additional[\"geekblue\"][4]}`,\n      },\n      content: {\n        display: \"flex\",\n        flexDirection: \"column\",\n      },\n      buttons: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginTop: constants.generalUnit * 5,\n        \"& > *\": {\n          marginRight: constants.generalUnit,\n        },\n      },\n      button: {\n        borderColor: palette.additional[\"gray\"][8],\n        color: palette.additional[\"gray\"][8],\n        \"&:hover\": {\n          borderColor: palette.additional[\"gray\"][8],\n          backgroundColor: palette.additional[\"gray\"][8],\n          color: palette.common.white.main,\n        },\n      },\n      initCopy: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        \"& > *:first-child\": {\n          marginTop: constants.generalUnit * 3.5,\n          marginBottom: constants.generalUnit * 8,\n        },\n      },\n      sendingCopy: {},\n      vote: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginTop: constants.generalUnit,\n        \"& > *\": {\n          \"&:first-child\": {\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            maxWidth: 240,\n          },\n          \"&:last-child\": {\n            marginLeft: constants.generalUnit * 3.5,\n            fontStyle: \"italic\",\n          },\n        },\n      },\n      warning: {\n        marginTop: constants.generalUnit * 3.5,\n        display: \"block\",\n      },\n      receipt: {\n        marginTop: constants.generalUnit * 3.5,\n        marginBottom: constants.generalUnit * 8,\n      },\n    })\n);\n\nenum TRANSACTION_STATE {\n  init = \"init\",\n  inTransit = \"inTransit\",\n  done = \"done\",\n}\n\ninterface ISignature {\n  address: string;\n  signed: \"pending\" | \"confirmed\" | \"rejected\";\n}\n\ninterface ITransactionActiveModalProps {\n  open: boolean;\n  close: () => void;\n}\n\nconst TransactionActiveModal: React.FC<ITransactionActiveModalProps> = ({\n  open,\n  close,\n}: ITransactionActiveModalProps) => {\n  const classes = useStyles();\n\n  const evmWallet = useWallet();\n  const Quorum: number = 6;\n\n  const [state, setState] = useState<TRANSACTION_STATE>(TRANSACTION_STATE.done);\n  const [signatures, setSignatures] = useState<ISignature[]>([\n    {\n      address: \"consmosasdasdasdasdasdasdasd3ex12\",\n      signed: \"rejected\",\n    },\n    {\n      address: \"c11111onsmosasdasdasdasdasdasdasd3ex12\",\n      signed: \"pending\",\n    },\n    {\n      address: \"consmoas22sasdasdasdasdasdasdasd3ex12\",\n      signed: \"pending\",\n    },\n    {\n      address: \"cons123123mosasdasdasdasdasdasdasd3ex12\",\n      signed: \"rejected\",\n    },\n    {\n      address: \"co11111nsmosasdasdasdasdasdasdasd3ex12\",\n      signed: \"confirmed\",\n    },\n    {\n      address: \"mmmconsmosasdasdasdasdasdasdasd3ex12\",\n      signed: \"confirmed\",\n    },\n  ]);\n\n  return (\n    <CustomModal\n      className={classes.root}\n      injectedClass={{\n        inner: classes.inner,\n      }}\n      active={open}\n    >\n      <section>\n        <div className={classes.stepIndicator}>\n          {state === TRANSACTION_STATE.init\n            ? \"1\"\n            : state === TRANSACTION_STATE.inTransit\n            ? \"2\"\n            : \"3  \"}\n        </div>\n      </section>\n      <section className={classes.content}>\n        <Typography className={classes.heading} variant=\"h3\" component=\"h3\">\n          {state === TRANSACTION_STATE.init\n            ? \"Initializing Transfer\"\n            : state === TRANSACTION_STATE.inTransit\n            ? `In Transit (${\n                signatures.filter((sig) => sig.signed === \"confirmed\").length\n              }/${Quorum} signatures needed)`\n            : \"Transfer completed\"}\n        </Typography>\n        {state === TRANSACTION_STATE.init ? (\n          <div className={classes.initCopy}>\n            <Typography>Deposit pending...</Typography>\n            <Typography>\n              This should take a few minutes.\n              <br />\n              Please do not refresh or leave the page.\n            </Typography>\n          </div>\n        ) : state === TRANSACTION_STATE.inTransit ? (\n          <div className={classes.sendingCopy}>\n            <Typography>Proposal created on {evmWallet.networkName}</Typography>\n            {signatures.map((sig, index) => (\n              <Typography className={classes.vote} component=\"p\" key={index}>\n                <span>Vote casted by {sig.address}</span>\n                <span>\n                  {sig.signed === \"confirmed\"\n                    ? \"Confirmed\"\n                    : sig.signed === \"rejected\"\n                    ? \"Rejected\"\n                    : null}\n                </span>\n              </Typography>\n            ))}\n            <Typography className={classes.warning}>\n              This should take a few minutes. <br />\n              Please do not refresh or leave the page.\n            </Typography>\n          </div>\n        ) : (\n          <>\n            <Typography className={classes.receipt} component=\"p\">\n              Successfully transferred{\" \"}\n              <strong>\n                0.25 ETH <br /> from {evmWallet.networkName} to Rinkeby.\n              </strong>\n            </Typography>\n            <section className={classes.buttons}>\n              <Button\n                onClick={close}\n                size=\"small\"\n                className={classes.button}\n                variant=\"outline\"\n              >\n                View transaction\n              </Button>\n              <Button size=\"small\" className={classes.button} variant=\"outline\">\n                Start new transfer\n              </Button>\n            </section>\n          </>\n        )}\n      </section>\n    </CustomModal>\n  );\n};\n\nexport default TransactionActiveModal;\n"]},"metadata":{},"sourceType":"module"}