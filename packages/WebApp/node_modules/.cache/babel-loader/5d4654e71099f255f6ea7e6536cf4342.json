{"ast":null,"code":"var _jsxFileName = \"/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/packages/WebApp/src/Modules/AboutDrawer.tsx\";\nimport React from \"react\";\nimport { makeStyles, createStyles } from \"@imploy/common-themes\";\nimport CustomDrawer from \"../Components/Custom/CustomDrawer\";\nimport { Button, Typography } from \"@imploy/common-components\";\nconst useStyles = makeStyles(() => createStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  buttons: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  }\n}));\n\nconst AboutDrawer = ({\n  open,\n  close\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(CustomDrawer, {\n    onClose: close,\n    open: open,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h1\",\n    component: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"What is ChainBridge?\"), /*#__PURE__*/React.createElement(Typography, {\n    component: \"p\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"ChainBridge is a modular multi-directional blockchain bridge to allow data and value transfer between any number of blockchains. This should enable users to specify a destination blockchain from their source chain, and send data to that blockchain for consumption on the destination chain. \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 28\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), \"This could be a token that is locked on ChainA and redeemed on ChainB, or an operation that is executed on a destination chain and initiated on the source chain.\"), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"OK\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Ask a question on Discord\")));\n};\n\nexport default AboutDrawer;","map":{"version":3,"sources":["/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/packages/WebApp/src/Modules/AboutDrawer.tsx"],"names":["React","makeStyles","createStyles","CustomDrawer","Button","Typography","useStyles","root","display","flexDirection","justifyContent","buttons","alignItems","AboutDrawer","open","close","classes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,uBAAzC;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,2BAAnC;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC,MAC3BC,YAAY,CAAC;AACXK,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,cAAc,EAAE;AAHZ,GADK;AAMXC,EAAAA,OAAO,EAAE;AACPH,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,aAAa,EAAE,KAFR;AAGPG,IAAAA,UAAU,EAAE;AAHL;AANE,CAAD,CADc,CAA5B;;AAoBA,MAAMC,WAAwC,GAAG,CAAC;AAChDC,EAAAA,IADgD;AAEhDC,EAAAA;AAFgD,CAAD,KAGxB;AACvB,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AAEA,sBACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAES,KAAvB;AAA8B,IAAA,IAAI,EAAED,IAApC;AAA0C,IAAA,SAAS,EAAEE,OAAO,CAACT,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,GAAtB;AAA0B,IAAA,OAAO,EAAC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wTAKqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALrB,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,sKAJF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,CAfF,CADF;AAsBD,CA5BD;;AA8BA,eAAeM,WAAf","sourcesContent":["import React from \"react\";\n\nimport { makeStyles, createStyles } from \"@imploy/common-themes\";\nimport CustomDrawer from \"../Components/Custom/CustomDrawer\";\nimport { Button, Typography } from \"@imploy/common-components\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\"\n    },\n    buttons: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    }\n  })\n);\n\ninterface IAboutDrawerProps {\n  open: boolean;\n  close: () => void;\n}\n\nconst AboutDrawer: React.FC<IAboutDrawerProps> = ({\n  open,\n  close,\n}: IAboutDrawerProps) => {\n  const classes = useStyles();\n\n  return (\n    <CustomDrawer onClose={close} open={open} className={classes.root}>\n      <Typography variant=\"h1\" component=\"h4\">\n        What is ChainBridge?\n      </Typography>\n      <Typography component=\"p\" variant=\"h5\">\n        ChainBridge is a modular multi-directional blockchain bridge to allow\n        data and value transfer between any number of blockchains. This should\n        enable users to specify a destination blockchain from their source\n        chain, and send data to that blockchain for consumption on the\n        destination chain. <br />\n        <br />\n        This could be a token that is locked on ChainA and redeemed on ChainB,\n        or an operation that is executed on a destination chain and initiated on\n        the source chain.\n      </Typography>\n      <section>\n        <Button variant=\"outline\">OK</Button>\n        <Button variant=\"outline\">Ask a question on Discord</Button>\n      </section>\n    </CustomDrawer>\n  );\n};\n\nexport default AboutDrawer;\n"]},"metadata":{},"sourceType":"module"}