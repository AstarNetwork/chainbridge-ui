{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar require$$0 = require('buffer');\n\nvar ethers = require('ethers');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar require$$0__default = /*#__PURE__*/_interopDefaultLegacy(require$$0);\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, basedir, module) {\n  return module = {\n    path: basedir,\n    exports: {},\n    require: function (path, base) {\n      return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n    }\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire() {\n  throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar bn = createCommonjsModule(function (module) {\n  (function (module, exports) {\n    // Utils\n    function assert(val, msg) {\n      if (!val) throw new Error(msg || 'Assertion failed');\n    } // Could use `inherits` module, but don't want to move from single file\n    // architecture yet.\n\n\n    function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n\n      var TempCtor = function () {};\n\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    } // BN\n\n\n    function BN(number, base, endian) {\n      if (BN.isBN(number)) {\n        return number;\n      }\n\n      this.negative = 0;\n      this.words = null;\n      this.length = 0; // Reduction context\n\n      this.red = null;\n\n      if (number !== null) {\n        if (base === 'le' || base === 'be') {\n          endian = base;\n          base = 10;\n        }\n\n        this._init(number || 0, base || 10, endian || 'be');\n      }\n    }\n\n    if (typeof module === 'object') {\n      module.exports = BN;\n    } else {\n      exports.BN = BN;\n    }\n\n    BN.BN = BN;\n    BN.wordSize = 26;\n    var Buffer;\n\n    try {\n      Buffer = require$$0__default['default'].Buffer;\n    } catch (e) {}\n\n    BN.isBN = function isBN(num) {\n      if (num instanceof BN) {\n        return true;\n      }\n\n      return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n    };\n\n    BN.max = function max(left, right) {\n      if (left.cmp(right) > 0) return left;\n      return right;\n    };\n\n    BN.min = function min(left, right) {\n      if (left.cmp(right) < 0) return left;\n      return right;\n    };\n\n    BN.prototype._init = function init(number, base, endian) {\n      if (typeof number === 'number') {\n        return this._initNumber(number, base, endian);\n      }\n\n      if (typeof number === 'object') {\n        return this._initArray(number, base, endian);\n      }\n\n      if (base === 'hex') {\n        base = 16;\n      }\n\n      assert(base === (base | 0) && base >= 2 && base <= 36);\n      number = number.toString().replace(/\\s+/g, '');\n      var start = 0;\n\n      if (number[0] === '-') {\n        start++;\n      }\n\n      if (base === 16) {\n        this._parseHex(number, start);\n      } else {\n        this._parseBase(number, base, start);\n      }\n\n      if (number[0] === '-') {\n        this.negative = 1;\n      }\n\n      this.strip();\n      if (endian !== 'le') return;\n\n      this._initArray(this.toArray(), base, endian);\n    };\n\n    BN.prototype._initNumber = function _initNumber(number, base, endian) {\n      if (number < 0) {\n        this.negative = 1;\n        number = -number;\n      }\n\n      if (number < 0x4000000) {\n        this.words = [number & 0x3ffffff];\n        this.length = 1;\n      } else if (number < 0x10000000000000) {\n        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n        this.length = 2;\n      } else {\n        assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n        this.length = 3;\n      }\n\n      if (endian !== 'le') return; // Reverse the bytes\n\n      this._initArray(this.toArray(), base, endian);\n    };\n\n    BN.prototype._initArray = function _initArray(number, base, endian) {\n      // Perhaps a Uint8Array\n      assert(typeof number.length === 'number');\n\n      if (number.length <= 0) {\n        this.words = [0];\n        this.length = 1;\n        return this;\n      }\n\n      this.length = Math.ceil(number.length / 3);\n      this.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] = 0;\n      }\n\n      var j, w;\n      var off = 0;\n\n      if (endian === 'be') {\n        for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n          w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n          this.words[j] |= w << off & 0x3ffffff;\n          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n          off += 24;\n\n          if (off >= 26) {\n            off -= 26;\n            j++;\n          }\n        }\n      } else if (endian === 'le') {\n        for (i = 0, j = 0; i < number.length; i += 3) {\n          w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n          this.words[j] |= w << off & 0x3ffffff;\n          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n          off += 24;\n\n          if (off >= 26) {\n            off -= 26;\n            j++;\n          }\n        }\n      }\n\n      return this.strip();\n    };\n\n    function parseHex(str, start, end) {\n      var r = 0;\n      var len = Math.min(str.length, end);\n\n      for (var i = start; i < len; i++) {\n        var c = str.charCodeAt(i) - 48;\n        r <<= 4; // 'a' - 'f'\n\n        if (c >= 49 && c <= 54) {\n          r |= c - 49 + 0xa; // 'A' - 'F'\n        } else if (c >= 17 && c <= 22) {\n          r |= c - 17 + 0xa; // '0' - '9'\n        } else {\n          r |= c & 0xf;\n        }\n      }\n\n      return r;\n    }\n\n    BN.prototype._parseHex = function _parseHex(number, start) {\n      // Create possibly bigger array to ensure that it fits the number\n      this.length = Math.ceil((number.length - start) / 6);\n      this.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] = 0;\n      }\n\n      var j, w; // Scan 24-bit chunks and add them to the number\n\n      var off = 0;\n\n      for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n        w = parseHex(number, i, i + 6);\n        this.words[j] |= w << off & 0x3ffffff; // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\n        this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n\n      if (i + 6 !== start) {\n        w = parseHex(number, start, i + 6);\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      }\n\n      this.strip();\n    };\n\n    function parseBase(str, start, end, mul) {\n      var r = 0;\n      var len = Math.min(str.length, end);\n\n      for (var i = start; i < len; i++) {\n        var c = str.charCodeAt(i) - 48;\n        r *= mul; // 'a'\n\n        if (c >= 49) {\n          r += c - 49 + 0xa; // 'A'\n        } else if (c >= 17) {\n          r += c - 17 + 0xa; // '0' - '9'\n        } else {\n          r += c;\n        }\n      }\n\n      return r;\n    }\n\n    BN.prototype._parseBase = function _parseBase(number, base, start) {\n      // Initialize as zero\n      this.words = [0];\n      this.length = 1; // Find length of limb in base\n\n      for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n        limbLen++;\n      }\n\n      limbLen--;\n      limbPow = limbPow / base | 0;\n      var total = number.length - start;\n      var mod = total % limbLen;\n      var end = Math.min(total, total - mod) + start;\n      var word = 0;\n\n      for (var i = start; i < end; i += limbLen) {\n        word = parseBase(number, i, i + limbLen, base);\n        this.imuln(limbPow);\n\n        if (this.words[0] + word < 0x4000000) {\n          this.words[0] += word;\n        } else {\n          this._iaddn(word);\n        }\n      }\n\n      if (mod !== 0) {\n        var pow = 1;\n        word = parseBase(number, i, number.length, base);\n\n        for (i = 0; i < mod; i++) {\n          pow *= base;\n        }\n\n        this.imuln(pow);\n\n        if (this.words[0] + word < 0x4000000) {\n          this.words[0] += word;\n        } else {\n          this._iaddn(word);\n        }\n      }\n    };\n\n    BN.prototype.copy = function copy(dest) {\n      dest.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        dest.words[i] = this.words[i];\n      }\n\n      dest.length = this.length;\n      dest.negative = this.negative;\n      dest.red = this.red;\n    };\n\n    BN.prototype.clone = function clone() {\n      var r = new BN(null);\n      this.copy(r);\n      return r;\n    };\n\n    BN.prototype._expand = function _expand(size) {\n      while (this.length < size) {\n        this.words[this.length++] = 0;\n      }\n\n      return this;\n    }; // Remove leading `0` from `this`\n\n\n    BN.prototype.strip = function strip() {\n      while (this.length > 1 && this.words[this.length - 1] === 0) {\n        this.length--;\n      }\n\n      return this._normSign();\n    };\n\n    BN.prototype._normSign = function _normSign() {\n      // -0 = 0\n      if (this.length === 1 && this.words[0] === 0) {\n        this.negative = 0;\n      }\n\n      return this;\n    };\n\n    BN.prototype.inspect = function inspect() {\n      return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n    };\n    /*\n     var zeros = [];\n    var groupSizes = [];\n    var groupBases = [];\n     var s = '';\n    var i = -1;\n    while (++i < BN.wordSize) {\n      zeros[i] = s;\n      s += '0';\n    }\n    groupSizes[0] = 0;\n    groupSizes[1] = 0;\n    groupBases[0] = 0;\n    groupBases[1] = 0;\n    var base = 2 - 1;\n    while (++base < 36 + 1) {\n      var groupSize = 0;\n      var groupBase = 1;\n      while (groupBase < (1 << BN.wordSize) / base) {\n        groupBase *= base;\n        groupSize += 1;\n      }\n      groupSizes[base] = groupSize;\n      groupBases[base] = groupBase;\n    }\n     */\n\n\n    var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n    var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n    var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n    BN.prototype.toString = function toString(base, padding) {\n      base = base || 10;\n      padding = padding | 0 || 1;\n      var out;\n\n      if (base === 16 || base === 'hex') {\n        out = '';\n        var off = 0;\n        var carry = 0;\n\n        for (var i = 0; i < this.length; i++) {\n          var w = this.words[i];\n          var word = ((w << off | carry) & 0xffffff).toString(16);\n          carry = w >>> 24 - off & 0xffffff;\n\n          if (carry !== 0 || i !== this.length - 1) {\n            out = zeros[6 - word.length] + word + out;\n          } else {\n            out = word + out;\n          }\n\n          off += 2;\n\n          if (off >= 26) {\n            off -= 26;\n            i--;\n          }\n        }\n\n        if (carry !== 0) {\n          out = carry.toString(16) + out;\n        }\n\n        while (out.length % padding !== 0) {\n          out = '0' + out;\n        }\n\n        if (this.negative !== 0) {\n          out = '-' + out;\n        }\n\n        return out;\n      }\n\n      if (base === (base | 0) && base >= 2 && base <= 36) {\n        // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n        var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n        var groupBase = groupBases[base];\n        out = '';\n        var c = this.clone();\n        c.negative = 0;\n\n        while (!c.isZero()) {\n          var r = c.modn(groupBase).toString(base);\n          c = c.idivn(groupBase);\n\n          if (!c.isZero()) {\n            out = zeros[groupSize - r.length] + r + out;\n          } else {\n            out = r + out;\n          }\n        }\n\n        if (this.isZero()) {\n          out = '0' + out;\n        }\n\n        while (out.length % padding !== 0) {\n          out = '0' + out;\n        }\n\n        if (this.negative !== 0) {\n          out = '-' + out;\n        }\n\n        return out;\n      }\n\n      assert(false, 'Base should be between 2 and 36');\n    };\n\n    BN.prototype.toNumber = function toNumber() {\n      var ret = this.words[0];\n\n      if (this.length === 2) {\n        ret += this.words[1] * 0x4000000;\n      } else if (this.length === 3 && this.words[2] === 0x01) {\n        // NOTE: at this stage it is known that the top bit is set\n        ret += 0x10000000000000 + this.words[1] * 0x4000000;\n      } else if (this.length > 2) {\n        assert(false, 'Number can only safely store up to 53 bits');\n      }\n\n      return this.negative !== 0 ? -ret : ret;\n    };\n\n    BN.prototype.toJSON = function toJSON() {\n      return this.toString(16);\n    };\n\n    BN.prototype.toBuffer = function toBuffer(endian, length) {\n      assert(typeof Buffer !== 'undefined');\n      return this.toArrayLike(Buffer, endian, length);\n    };\n\n    BN.prototype.toArray = function toArray(endian, length) {\n      return this.toArrayLike(Array, endian, length);\n    };\n\n    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n      var byteLength = this.byteLength();\n      var reqLength = length || Math.max(1, byteLength);\n      assert(byteLength <= reqLength, 'byte array longer than desired length');\n      assert(reqLength > 0, 'Requested array length <= 0');\n      this.strip();\n      var littleEndian = endian === 'le';\n      var res = new ArrayType(reqLength);\n      var b, i;\n      var q = this.clone();\n\n      if (!littleEndian) {\n        // Assume big-endian\n        for (i = 0; i < reqLength - byteLength; i++) {\n          res[i] = 0;\n        }\n\n        for (i = 0; !q.isZero(); i++) {\n          b = q.andln(0xff);\n          q.iushrn(8);\n          res[reqLength - i - 1] = b;\n        }\n      } else {\n        for (i = 0; !q.isZero(); i++) {\n          b = q.andln(0xff);\n          q.iushrn(8);\n          res[i] = b;\n        }\n\n        for (; i < reqLength; i++) {\n          res[i] = 0;\n        }\n      }\n\n      return res;\n    };\n\n    if (Math.clz32) {\n      BN.prototype._countBits = function _countBits(w) {\n        return 32 - Math.clz32(w);\n      };\n    } else {\n      BN.prototype._countBits = function _countBits(w) {\n        var t = w;\n        var r = 0;\n\n        if (t >= 0x1000) {\n          r += 13;\n          t >>>= 13;\n        }\n\n        if (t >= 0x40) {\n          r += 7;\n          t >>>= 7;\n        }\n\n        if (t >= 0x8) {\n          r += 4;\n          t >>>= 4;\n        }\n\n        if (t >= 0x02) {\n          r += 2;\n          t >>>= 2;\n        }\n\n        return r + t;\n      };\n    }\n\n    BN.prototype._zeroBits = function _zeroBits(w) {\n      // Short-cut\n      if (w === 0) return 26;\n      var t = w;\n      var r = 0;\n\n      if ((t & 0x1fff) === 0) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if ((t & 0x7f) === 0) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if ((t & 0xf) === 0) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if ((t & 0x3) === 0) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      if ((t & 0x1) === 0) {\n        r++;\n      }\n\n      return r;\n    }; // Return number of used bits in a BN\n\n\n    BN.prototype.bitLength = function bitLength() {\n      var w = this.words[this.length - 1];\n\n      var hi = this._countBits(w);\n\n      return (this.length - 1) * 26 + hi;\n    };\n\n    function toBitArray(num) {\n      var w = new Array(num.bitLength());\n\n      for (var bit = 0; bit < w.length; bit++) {\n        var off = bit / 26 | 0;\n        var wbit = bit % 26;\n        w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n      }\n\n      return w;\n    } // Number of trailing zero bits\n\n\n    BN.prototype.zeroBits = function zeroBits() {\n      if (this.isZero()) return 0;\n      var r = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var b = this._zeroBits(this.words[i]);\n\n        r += b;\n        if (b !== 26) break;\n      }\n\n      return r;\n    };\n\n    BN.prototype.byteLength = function byteLength() {\n      return Math.ceil(this.bitLength() / 8);\n    };\n\n    BN.prototype.toTwos = function toTwos(width) {\n      if (this.negative !== 0) {\n        return this.abs().inotn(width).iaddn(1);\n      }\n\n      return this.clone();\n    };\n\n    BN.prototype.fromTwos = function fromTwos(width) {\n      if (this.testn(width - 1)) {\n        return this.notn(width).iaddn(1).ineg();\n      }\n\n      return this.clone();\n    };\n\n    BN.prototype.isNeg = function isNeg() {\n      return this.negative !== 0;\n    }; // Return negative clone of `this`\n\n\n    BN.prototype.neg = function neg() {\n      return this.clone().ineg();\n    };\n\n    BN.prototype.ineg = function ineg() {\n      if (!this.isZero()) {\n        this.negative ^= 1;\n      }\n\n      return this;\n    }; // Or `num` with `this` in-place\n\n\n    BN.prototype.iuor = function iuor(num) {\n      while (this.length < num.length) {\n        this.words[this.length++] = 0;\n      }\n\n      for (var i = 0; i < num.length; i++) {\n        this.words[i] = this.words[i] | num.words[i];\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.ior = function ior(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuor(num);\n    }; // Or `num` with `this`\n\n\n    BN.prototype.or = function or(num) {\n      if (this.length > num.length) return this.clone().ior(num);\n      return num.clone().ior(this);\n    };\n\n    BN.prototype.uor = function uor(num) {\n      if (this.length > num.length) return this.clone().iuor(num);\n      return num.clone().iuor(this);\n    }; // And `num` with `this` in-place\n\n\n    BN.prototype.iuand = function iuand(num) {\n      // b = min-length(num, this)\n      var b;\n\n      if (this.length > num.length) {\n        b = num;\n      } else {\n        b = this;\n      }\n\n      for (var i = 0; i < b.length; i++) {\n        this.words[i] = this.words[i] & num.words[i];\n      }\n\n      this.length = b.length;\n      return this.strip();\n    };\n\n    BN.prototype.iand = function iand(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuand(num);\n    }; // And `num` with `this`\n\n\n    BN.prototype.and = function and(num) {\n      if (this.length > num.length) return this.clone().iand(num);\n      return num.clone().iand(this);\n    };\n\n    BN.prototype.uand = function uand(num) {\n      if (this.length > num.length) return this.clone().iuand(num);\n      return num.clone().iuand(this);\n    }; // Xor `num` with `this` in-place\n\n\n    BN.prototype.iuxor = function iuxor(num) {\n      // a.length > b.length\n      var a;\n      var b;\n\n      if (this.length > num.length) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      for (var i = 0; i < b.length; i++) {\n        this.words[i] = a.words[i] ^ b.words[i];\n      }\n\n      if (this !== a) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      this.length = a.length;\n      return this.strip();\n    };\n\n    BN.prototype.ixor = function ixor(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuxor(num);\n    }; // Xor `num` with `this`\n\n\n    BN.prototype.xor = function xor(num) {\n      if (this.length > num.length) return this.clone().ixor(num);\n      return num.clone().ixor(this);\n    };\n\n    BN.prototype.uxor = function uxor(num) {\n      if (this.length > num.length) return this.clone().iuxor(num);\n      return num.clone().iuxor(this);\n    }; // Not ``this`` with ``width`` bitwidth\n\n\n    BN.prototype.inotn = function inotn(width) {\n      assert(typeof width === 'number' && width >= 0);\n      var bytesNeeded = Math.ceil(width / 26) | 0;\n      var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n      this._expand(bytesNeeded);\n\n      if (bitsLeft > 0) {\n        bytesNeeded--;\n      } // Handle complete words\n\n\n      for (var i = 0; i < bytesNeeded; i++) {\n        this.words[i] = ~this.words[i] & 0x3ffffff;\n      } // Handle the residue\n\n\n      if (bitsLeft > 0) {\n        this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n      } // And remove leading zeroes\n\n\n      return this.strip();\n    };\n\n    BN.prototype.notn = function notn(width) {\n      return this.clone().inotn(width);\n    }; // Set `bit` of `this`\n\n\n    BN.prototype.setn = function setn(bit, val) {\n      assert(typeof bit === 'number' && bit >= 0);\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n\n      this._expand(off + 1);\n\n      if (val) {\n        this.words[off] = this.words[off] | 1 << wbit;\n      } else {\n        this.words[off] = this.words[off] & ~(1 << wbit);\n      }\n\n      return this.strip();\n    }; // Add `num` to `this` in-place\n\n\n    BN.prototype.iadd = function iadd(num) {\n      var r; // negative + positive\n\n      if (this.negative !== 0 && num.negative === 0) {\n        this.negative = 0;\n        r = this.isub(num);\n        this.negative ^= 1;\n        return this._normSign(); // positive + negative\n      } else if (this.negative === 0 && num.negative !== 0) {\n        num.negative = 0;\n        r = this.isub(num);\n        num.negative = 1;\n        return r._normSign();\n      } // a.length > b.length\n\n\n      var a, b;\n\n      if (this.length > num.length) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      var carry = 0;\n\n      for (var i = 0; i < b.length; i++) {\n        r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n        this.words[i] = r & 0x3ffffff;\n        carry = r >>> 26;\n      }\n\n      for (; carry !== 0 && i < a.length; i++) {\n        r = (a.words[i] | 0) + carry;\n        this.words[i] = r & 0x3ffffff;\n        carry = r >>> 26;\n      }\n\n      this.length = a.length;\n\n      if (carry !== 0) {\n        this.words[this.length] = carry;\n        this.length++; // Copy the rest of the words\n      } else if (a !== this) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      return this;\n    }; // Add `num` to `this`\n\n\n    BN.prototype.add = function add(num) {\n      var res;\n\n      if (num.negative !== 0 && this.negative === 0) {\n        num.negative = 0;\n        res = this.sub(num);\n        num.negative ^= 1;\n        return res;\n      } else if (num.negative === 0 && this.negative !== 0) {\n        this.negative = 0;\n        res = num.sub(this);\n        this.negative = 1;\n        return res;\n      }\n\n      if (this.length > num.length) return this.clone().iadd(num);\n      return num.clone().iadd(this);\n    }; // Subtract `num` from `this` in-place\n\n\n    BN.prototype.isub = function isub(num) {\n      // this - (-num) = this + num\n      if (num.negative !== 0) {\n        num.negative = 0;\n        var r = this.iadd(num);\n        num.negative = 1;\n        return r._normSign(); // -this - num = -(this + num)\n      } else if (this.negative !== 0) {\n        this.negative = 0;\n        this.iadd(num);\n        this.negative = 1;\n        return this._normSign();\n      } // At this point both numbers are positive\n\n\n      var cmp = this.cmp(num); // Optimization - zeroify\n\n      if (cmp === 0) {\n        this.negative = 0;\n        this.length = 1;\n        this.words[0] = 0;\n        return this;\n      } // a > b\n\n\n      var a, b;\n\n      if (cmp > 0) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      var carry = 0;\n\n      for (var i = 0; i < b.length; i++) {\n        r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n        carry = r >> 26;\n        this.words[i] = r & 0x3ffffff;\n      }\n\n      for (; carry !== 0 && i < a.length; i++) {\n        r = (a.words[i] | 0) + carry;\n        carry = r >> 26;\n        this.words[i] = r & 0x3ffffff;\n      } // Copy rest of the words\n\n\n      if (carry === 0 && i < a.length && a !== this) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      this.length = Math.max(this.length, i);\n\n      if (a !== this) {\n        this.negative = 1;\n      }\n\n      return this.strip();\n    }; // Subtract `num` from `this`\n\n\n    BN.prototype.sub = function sub(num) {\n      return this.clone().isub(num);\n    };\n\n    function smallMulTo(self, num, out) {\n      out.negative = num.negative ^ self.negative;\n      var len = self.length + num.length | 0;\n      out.length = len;\n      len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n      var a = self.words[0] | 0;\n      var b = num.words[0] | 0;\n      var r = a * b;\n      var lo = r & 0x3ffffff;\n      var carry = r / 0x4000000 | 0;\n      out.words[0] = lo;\n\n      for (var k = 1; k < len; k++) {\n        // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n        // note that ncarry could be >= 0x3ffffff\n        var ncarry = carry >>> 26;\n        var rword = carry & 0x3ffffff;\n        var maxJ = Math.min(k, num.length - 1);\n\n        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n          var i = k - j | 0;\n          a = self.words[i] | 0;\n          b = num.words[j] | 0;\n          r = a * b + rword;\n          ncarry += r / 0x4000000 | 0;\n          rword = r & 0x3ffffff;\n        }\n\n        out.words[k] = rword | 0;\n        carry = ncarry | 0;\n      }\n\n      if (carry !== 0) {\n        out.words[k] = carry | 0;\n      } else {\n        out.length--;\n      }\n\n      return out.strip();\n    } // TODO(indutny): it may be reasonable to omit it for users who don't need\n    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n    // multiplication (like elliptic secp256k1).\n\n\n    var comb10MulTo = function comb10MulTo(self, num, out) {\n      var a = self.words;\n      var b = num.words;\n      var o = out.words;\n      var c = 0;\n      var lo;\n      var mid;\n      var hi;\n      var a0 = a[0] | 0;\n      var al0 = a0 & 0x1fff;\n      var ah0 = a0 >>> 13;\n      var a1 = a[1] | 0;\n      var al1 = a1 & 0x1fff;\n      var ah1 = a1 >>> 13;\n      var a2 = a[2] | 0;\n      var al2 = a2 & 0x1fff;\n      var ah2 = a2 >>> 13;\n      var a3 = a[3] | 0;\n      var al3 = a3 & 0x1fff;\n      var ah3 = a3 >>> 13;\n      var a4 = a[4] | 0;\n      var al4 = a4 & 0x1fff;\n      var ah4 = a4 >>> 13;\n      var a5 = a[5] | 0;\n      var al5 = a5 & 0x1fff;\n      var ah5 = a5 >>> 13;\n      var a6 = a[6] | 0;\n      var al6 = a6 & 0x1fff;\n      var ah6 = a6 >>> 13;\n      var a7 = a[7] | 0;\n      var al7 = a7 & 0x1fff;\n      var ah7 = a7 >>> 13;\n      var a8 = a[8] | 0;\n      var al8 = a8 & 0x1fff;\n      var ah8 = a8 >>> 13;\n      var a9 = a[9] | 0;\n      var al9 = a9 & 0x1fff;\n      var ah9 = a9 >>> 13;\n      var b0 = b[0] | 0;\n      var bl0 = b0 & 0x1fff;\n      var bh0 = b0 >>> 13;\n      var b1 = b[1] | 0;\n      var bl1 = b1 & 0x1fff;\n      var bh1 = b1 >>> 13;\n      var b2 = b[2] | 0;\n      var bl2 = b2 & 0x1fff;\n      var bh2 = b2 >>> 13;\n      var b3 = b[3] | 0;\n      var bl3 = b3 & 0x1fff;\n      var bh3 = b3 >>> 13;\n      var b4 = b[4] | 0;\n      var bl4 = b4 & 0x1fff;\n      var bh4 = b4 >>> 13;\n      var b5 = b[5] | 0;\n      var bl5 = b5 & 0x1fff;\n      var bh5 = b5 >>> 13;\n      var b6 = b[6] | 0;\n      var bl6 = b6 & 0x1fff;\n      var bh6 = b6 >>> 13;\n      var b7 = b[7] | 0;\n      var bl7 = b7 & 0x1fff;\n      var bh7 = b7 >>> 13;\n      var b8 = b[8] | 0;\n      var bl8 = b8 & 0x1fff;\n      var bh8 = b8 >>> 13;\n      var b9 = b[9] | 0;\n      var bl9 = b9 & 0x1fff;\n      var bh9 = b9 >>> 13;\n      out.negative = self.negative ^ num.negative;\n      out.length = 19;\n      /* k = 0 */\n\n      lo = Math.imul(al0, bl0);\n      mid = Math.imul(al0, bh0);\n      mid = mid + Math.imul(ah0, bl0) | 0;\n      hi = Math.imul(ah0, bh0);\n      var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n      w0 &= 0x3ffffff;\n      /* k = 1 */\n\n      lo = Math.imul(al1, bl0);\n      mid = Math.imul(al1, bh0);\n      mid = mid + Math.imul(ah1, bl0) | 0;\n      hi = Math.imul(ah1, bh0);\n      lo = lo + Math.imul(al0, bl1) | 0;\n      mid = mid + Math.imul(al0, bh1) | 0;\n      mid = mid + Math.imul(ah0, bl1) | 0;\n      hi = hi + Math.imul(ah0, bh1) | 0;\n      var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n      w1 &= 0x3ffffff;\n      /* k = 2 */\n\n      lo = Math.imul(al2, bl0);\n      mid = Math.imul(al2, bh0);\n      mid = mid + Math.imul(ah2, bl0) | 0;\n      hi = Math.imul(ah2, bh0);\n      lo = lo + Math.imul(al1, bl1) | 0;\n      mid = mid + Math.imul(al1, bh1) | 0;\n      mid = mid + Math.imul(ah1, bl1) | 0;\n      hi = hi + Math.imul(ah1, bh1) | 0;\n      lo = lo + Math.imul(al0, bl2) | 0;\n      mid = mid + Math.imul(al0, bh2) | 0;\n      mid = mid + Math.imul(ah0, bl2) | 0;\n      hi = hi + Math.imul(ah0, bh2) | 0;\n      var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n      w2 &= 0x3ffffff;\n      /* k = 3 */\n\n      lo = Math.imul(al3, bl0);\n      mid = Math.imul(al3, bh0);\n      mid = mid + Math.imul(ah3, bl0) | 0;\n      hi = Math.imul(ah3, bh0);\n      lo = lo + Math.imul(al2, bl1) | 0;\n      mid = mid + Math.imul(al2, bh1) | 0;\n      mid = mid + Math.imul(ah2, bl1) | 0;\n      hi = hi + Math.imul(ah2, bh1) | 0;\n      lo = lo + Math.imul(al1, bl2) | 0;\n      mid = mid + Math.imul(al1, bh2) | 0;\n      mid = mid + Math.imul(ah1, bl2) | 0;\n      hi = hi + Math.imul(ah1, bh2) | 0;\n      lo = lo + Math.imul(al0, bl3) | 0;\n      mid = mid + Math.imul(al0, bh3) | 0;\n      mid = mid + Math.imul(ah0, bl3) | 0;\n      hi = hi + Math.imul(ah0, bh3) | 0;\n      var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n      w3 &= 0x3ffffff;\n      /* k = 4 */\n\n      lo = Math.imul(al4, bl0);\n      mid = Math.imul(al4, bh0);\n      mid = mid + Math.imul(ah4, bl0) | 0;\n      hi = Math.imul(ah4, bh0);\n      lo = lo + Math.imul(al3, bl1) | 0;\n      mid = mid + Math.imul(al3, bh1) | 0;\n      mid = mid + Math.imul(ah3, bl1) | 0;\n      hi = hi + Math.imul(ah3, bh1) | 0;\n      lo = lo + Math.imul(al2, bl2) | 0;\n      mid = mid + Math.imul(al2, bh2) | 0;\n      mid = mid + Math.imul(ah2, bl2) | 0;\n      hi = hi + Math.imul(ah2, bh2) | 0;\n      lo = lo + Math.imul(al1, bl3) | 0;\n      mid = mid + Math.imul(al1, bh3) | 0;\n      mid = mid + Math.imul(ah1, bl3) | 0;\n      hi = hi + Math.imul(ah1, bh3) | 0;\n      lo = lo + Math.imul(al0, bl4) | 0;\n      mid = mid + Math.imul(al0, bh4) | 0;\n      mid = mid + Math.imul(ah0, bl4) | 0;\n      hi = hi + Math.imul(ah0, bh4) | 0;\n      var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n      w4 &= 0x3ffffff;\n      /* k = 5 */\n\n      lo = Math.imul(al5, bl0);\n      mid = Math.imul(al5, bh0);\n      mid = mid + Math.imul(ah5, bl0) | 0;\n      hi = Math.imul(ah5, bh0);\n      lo = lo + Math.imul(al4, bl1) | 0;\n      mid = mid + Math.imul(al4, bh1) | 0;\n      mid = mid + Math.imul(ah4, bl1) | 0;\n      hi = hi + Math.imul(ah4, bh1) | 0;\n      lo = lo + Math.imul(al3, bl2) | 0;\n      mid = mid + Math.imul(al3, bh2) | 0;\n      mid = mid + Math.imul(ah3, bl2) | 0;\n      hi = hi + Math.imul(ah3, bh2) | 0;\n      lo = lo + Math.imul(al2, bl3) | 0;\n      mid = mid + Math.imul(al2, bh3) | 0;\n      mid = mid + Math.imul(ah2, bl3) | 0;\n      hi = hi + Math.imul(ah2, bh3) | 0;\n      lo = lo + Math.imul(al1, bl4) | 0;\n      mid = mid + Math.imul(al1, bh4) | 0;\n      mid = mid + Math.imul(ah1, bl4) | 0;\n      hi = hi + Math.imul(ah1, bh4) | 0;\n      lo = lo + Math.imul(al0, bl5) | 0;\n      mid = mid + Math.imul(al0, bh5) | 0;\n      mid = mid + Math.imul(ah0, bl5) | 0;\n      hi = hi + Math.imul(ah0, bh5) | 0;\n      var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n      w5 &= 0x3ffffff;\n      /* k = 6 */\n\n      lo = Math.imul(al6, bl0);\n      mid = Math.imul(al6, bh0);\n      mid = mid + Math.imul(ah6, bl0) | 0;\n      hi = Math.imul(ah6, bh0);\n      lo = lo + Math.imul(al5, bl1) | 0;\n      mid = mid + Math.imul(al5, bh1) | 0;\n      mid = mid + Math.imul(ah5, bl1) | 0;\n      hi = hi + Math.imul(ah5, bh1) | 0;\n      lo = lo + Math.imul(al4, bl2) | 0;\n      mid = mid + Math.imul(al4, bh2) | 0;\n      mid = mid + Math.imul(ah4, bl2) | 0;\n      hi = hi + Math.imul(ah4, bh2) | 0;\n      lo = lo + Math.imul(al3, bl3) | 0;\n      mid = mid + Math.imul(al3, bh3) | 0;\n      mid = mid + Math.imul(ah3, bl3) | 0;\n      hi = hi + Math.imul(ah3, bh3) | 0;\n      lo = lo + Math.imul(al2, bl4) | 0;\n      mid = mid + Math.imul(al2, bh4) | 0;\n      mid = mid + Math.imul(ah2, bl4) | 0;\n      hi = hi + Math.imul(ah2, bh4) | 0;\n      lo = lo + Math.imul(al1, bl5) | 0;\n      mid = mid + Math.imul(al1, bh5) | 0;\n      mid = mid + Math.imul(ah1, bl5) | 0;\n      hi = hi + Math.imul(ah1, bh5) | 0;\n      lo = lo + Math.imul(al0, bl6) | 0;\n      mid = mid + Math.imul(al0, bh6) | 0;\n      mid = mid + Math.imul(ah0, bl6) | 0;\n      hi = hi + Math.imul(ah0, bh6) | 0;\n      var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n      w6 &= 0x3ffffff;\n      /* k = 7 */\n\n      lo = Math.imul(al7, bl0);\n      mid = Math.imul(al7, bh0);\n      mid = mid + Math.imul(ah7, bl0) | 0;\n      hi = Math.imul(ah7, bh0);\n      lo = lo + Math.imul(al6, bl1) | 0;\n      mid = mid + Math.imul(al6, bh1) | 0;\n      mid = mid + Math.imul(ah6, bl1) | 0;\n      hi = hi + Math.imul(ah6, bh1) | 0;\n      lo = lo + Math.imul(al5, bl2) | 0;\n      mid = mid + Math.imul(al5, bh2) | 0;\n      mid = mid + Math.imul(ah5, bl2) | 0;\n      hi = hi + Math.imul(ah5, bh2) | 0;\n      lo = lo + Math.imul(al4, bl3) | 0;\n      mid = mid + Math.imul(al4, bh3) | 0;\n      mid = mid + Math.imul(ah4, bl3) | 0;\n      hi = hi + Math.imul(ah4, bh3) | 0;\n      lo = lo + Math.imul(al3, bl4) | 0;\n      mid = mid + Math.imul(al3, bh4) | 0;\n      mid = mid + Math.imul(ah3, bl4) | 0;\n      hi = hi + Math.imul(ah3, bh4) | 0;\n      lo = lo + Math.imul(al2, bl5) | 0;\n      mid = mid + Math.imul(al2, bh5) | 0;\n      mid = mid + Math.imul(ah2, bl5) | 0;\n      hi = hi + Math.imul(ah2, bh5) | 0;\n      lo = lo + Math.imul(al1, bl6) | 0;\n      mid = mid + Math.imul(al1, bh6) | 0;\n      mid = mid + Math.imul(ah1, bl6) | 0;\n      hi = hi + Math.imul(ah1, bh6) | 0;\n      lo = lo + Math.imul(al0, bl7) | 0;\n      mid = mid + Math.imul(al0, bh7) | 0;\n      mid = mid + Math.imul(ah0, bl7) | 0;\n      hi = hi + Math.imul(ah0, bh7) | 0;\n      var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n      w7 &= 0x3ffffff;\n      /* k = 8 */\n\n      lo = Math.imul(al8, bl0);\n      mid = Math.imul(al8, bh0);\n      mid = mid + Math.imul(ah8, bl0) | 0;\n      hi = Math.imul(ah8, bh0);\n      lo = lo + Math.imul(al7, bl1) | 0;\n      mid = mid + Math.imul(al7, bh1) | 0;\n      mid = mid + Math.imul(ah7, bl1) | 0;\n      hi = hi + Math.imul(ah7, bh1) | 0;\n      lo = lo + Math.imul(al6, bl2) | 0;\n      mid = mid + Math.imul(al6, bh2) | 0;\n      mid = mid + Math.imul(ah6, bl2) | 0;\n      hi = hi + Math.imul(ah6, bh2) | 0;\n      lo = lo + Math.imul(al5, bl3) | 0;\n      mid = mid + Math.imul(al5, bh3) | 0;\n      mid = mid + Math.imul(ah5, bl3) | 0;\n      hi = hi + Math.imul(ah5, bh3) | 0;\n      lo = lo + Math.imul(al4, bl4) | 0;\n      mid = mid + Math.imul(al4, bh4) | 0;\n      mid = mid + Math.imul(ah4, bl4) | 0;\n      hi = hi + Math.imul(ah4, bh4) | 0;\n      lo = lo + Math.imul(al3, bl5) | 0;\n      mid = mid + Math.imul(al3, bh5) | 0;\n      mid = mid + Math.imul(ah3, bl5) | 0;\n      hi = hi + Math.imul(ah3, bh5) | 0;\n      lo = lo + Math.imul(al2, bl6) | 0;\n      mid = mid + Math.imul(al2, bh6) | 0;\n      mid = mid + Math.imul(ah2, bl6) | 0;\n      hi = hi + Math.imul(ah2, bh6) | 0;\n      lo = lo + Math.imul(al1, bl7) | 0;\n      mid = mid + Math.imul(al1, bh7) | 0;\n      mid = mid + Math.imul(ah1, bl7) | 0;\n      hi = hi + Math.imul(ah1, bh7) | 0;\n      lo = lo + Math.imul(al0, bl8) | 0;\n      mid = mid + Math.imul(al0, bh8) | 0;\n      mid = mid + Math.imul(ah0, bl8) | 0;\n      hi = hi + Math.imul(ah0, bh8) | 0;\n      var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n      w8 &= 0x3ffffff;\n      /* k = 9 */\n\n      lo = Math.imul(al9, bl0);\n      mid = Math.imul(al9, bh0);\n      mid = mid + Math.imul(ah9, bl0) | 0;\n      hi = Math.imul(ah9, bh0);\n      lo = lo + Math.imul(al8, bl1) | 0;\n      mid = mid + Math.imul(al8, bh1) | 0;\n      mid = mid + Math.imul(ah8, bl1) | 0;\n      hi = hi + Math.imul(ah8, bh1) | 0;\n      lo = lo + Math.imul(al7, bl2) | 0;\n      mid = mid + Math.imul(al7, bh2) | 0;\n      mid = mid + Math.imul(ah7, bl2) | 0;\n      hi = hi + Math.imul(ah7, bh2) | 0;\n      lo = lo + Math.imul(al6, bl3) | 0;\n      mid = mid + Math.imul(al6, bh3) | 0;\n      mid = mid + Math.imul(ah6, bl3) | 0;\n      hi = hi + Math.imul(ah6, bh3) | 0;\n      lo = lo + Math.imul(al5, bl4) | 0;\n      mid = mid + Math.imul(al5, bh4) | 0;\n      mid = mid + Math.imul(ah5, bl4) | 0;\n      hi = hi + Math.imul(ah5, bh4) | 0;\n      lo = lo + Math.imul(al4, bl5) | 0;\n      mid = mid + Math.imul(al4, bh5) | 0;\n      mid = mid + Math.imul(ah4, bl5) | 0;\n      hi = hi + Math.imul(ah4, bh5) | 0;\n      lo = lo + Math.imul(al3, bl6) | 0;\n      mid = mid + Math.imul(al3, bh6) | 0;\n      mid = mid + Math.imul(ah3, bl6) | 0;\n      hi = hi + Math.imul(ah3, bh6) | 0;\n      lo = lo + Math.imul(al2, bl7) | 0;\n      mid = mid + Math.imul(al2, bh7) | 0;\n      mid = mid + Math.imul(ah2, bl7) | 0;\n      hi = hi + Math.imul(ah2, bh7) | 0;\n      lo = lo + Math.imul(al1, bl8) | 0;\n      mid = mid + Math.imul(al1, bh8) | 0;\n      mid = mid + Math.imul(ah1, bl8) | 0;\n      hi = hi + Math.imul(ah1, bh8) | 0;\n      lo = lo + Math.imul(al0, bl9) | 0;\n      mid = mid + Math.imul(al0, bh9) | 0;\n      mid = mid + Math.imul(ah0, bl9) | 0;\n      hi = hi + Math.imul(ah0, bh9) | 0;\n      var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n      w9 &= 0x3ffffff;\n      /* k = 10 */\n\n      lo = Math.imul(al9, bl1);\n      mid = Math.imul(al9, bh1);\n      mid = mid + Math.imul(ah9, bl1) | 0;\n      hi = Math.imul(ah9, bh1);\n      lo = lo + Math.imul(al8, bl2) | 0;\n      mid = mid + Math.imul(al8, bh2) | 0;\n      mid = mid + Math.imul(ah8, bl2) | 0;\n      hi = hi + Math.imul(ah8, bh2) | 0;\n      lo = lo + Math.imul(al7, bl3) | 0;\n      mid = mid + Math.imul(al7, bh3) | 0;\n      mid = mid + Math.imul(ah7, bl3) | 0;\n      hi = hi + Math.imul(ah7, bh3) | 0;\n      lo = lo + Math.imul(al6, bl4) | 0;\n      mid = mid + Math.imul(al6, bh4) | 0;\n      mid = mid + Math.imul(ah6, bl4) | 0;\n      hi = hi + Math.imul(ah6, bh4) | 0;\n      lo = lo + Math.imul(al5, bl5) | 0;\n      mid = mid + Math.imul(al5, bh5) | 0;\n      mid = mid + Math.imul(ah5, bl5) | 0;\n      hi = hi + Math.imul(ah5, bh5) | 0;\n      lo = lo + Math.imul(al4, bl6) | 0;\n      mid = mid + Math.imul(al4, bh6) | 0;\n      mid = mid + Math.imul(ah4, bl6) | 0;\n      hi = hi + Math.imul(ah4, bh6) | 0;\n      lo = lo + Math.imul(al3, bl7) | 0;\n      mid = mid + Math.imul(al3, bh7) | 0;\n      mid = mid + Math.imul(ah3, bl7) | 0;\n      hi = hi + Math.imul(ah3, bh7) | 0;\n      lo = lo + Math.imul(al2, bl8) | 0;\n      mid = mid + Math.imul(al2, bh8) | 0;\n      mid = mid + Math.imul(ah2, bl8) | 0;\n      hi = hi + Math.imul(ah2, bh8) | 0;\n      lo = lo + Math.imul(al1, bl9) | 0;\n      mid = mid + Math.imul(al1, bh9) | 0;\n      mid = mid + Math.imul(ah1, bl9) | 0;\n      hi = hi + Math.imul(ah1, bh9) | 0;\n      var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n      w10 &= 0x3ffffff;\n      /* k = 11 */\n\n      lo = Math.imul(al9, bl2);\n      mid = Math.imul(al9, bh2);\n      mid = mid + Math.imul(ah9, bl2) | 0;\n      hi = Math.imul(ah9, bh2);\n      lo = lo + Math.imul(al8, bl3) | 0;\n      mid = mid + Math.imul(al8, bh3) | 0;\n      mid = mid + Math.imul(ah8, bl3) | 0;\n      hi = hi + Math.imul(ah8, bh3) | 0;\n      lo = lo + Math.imul(al7, bl4) | 0;\n      mid = mid + Math.imul(al7, bh4) | 0;\n      mid = mid + Math.imul(ah7, bl4) | 0;\n      hi = hi + Math.imul(ah7, bh4) | 0;\n      lo = lo + Math.imul(al6, bl5) | 0;\n      mid = mid + Math.imul(al6, bh5) | 0;\n      mid = mid + Math.imul(ah6, bl5) | 0;\n      hi = hi + Math.imul(ah6, bh5) | 0;\n      lo = lo + Math.imul(al5, bl6) | 0;\n      mid = mid + Math.imul(al5, bh6) | 0;\n      mid = mid + Math.imul(ah5, bl6) | 0;\n      hi = hi + Math.imul(ah5, bh6) | 0;\n      lo = lo + Math.imul(al4, bl7) | 0;\n      mid = mid + Math.imul(al4, bh7) | 0;\n      mid = mid + Math.imul(ah4, bl7) | 0;\n      hi = hi + Math.imul(ah4, bh7) | 0;\n      lo = lo + Math.imul(al3, bl8) | 0;\n      mid = mid + Math.imul(al3, bh8) | 0;\n      mid = mid + Math.imul(ah3, bl8) | 0;\n      hi = hi + Math.imul(ah3, bh8) | 0;\n      lo = lo + Math.imul(al2, bl9) | 0;\n      mid = mid + Math.imul(al2, bh9) | 0;\n      mid = mid + Math.imul(ah2, bl9) | 0;\n      hi = hi + Math.imul(ah2, bh9) | 0;\n      var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n      w11 &= 0x3ffffff;\n      /* k = 12 */\n\n      lo = Math.imul(al9, bl3);\n      mid = Math.imul(al9, bh3);\n      mid = mid + Math.imul(ah9, bl3) | 0;\n      hi = Math.imul(ah9, bh3);\n      lo = lo + Math.imul(al8, bl4) | 0;\n      mid = mid + Math.imul(al8, bh4) | 0;\n      mid = mid + Math.imul(ah8, bl4) | 0;\n      hi = hi + Math.imul(ah8, bh4) | 0;\n      lo = lo + Math.imul(al7, bl5) | 0;\n      mid = mid + Math.imul(al7, bh5) | 0;\n      mid = mid + Math.imul(ah7, bl5) | 0;\n      hi = hi + Math.imul(ah7, bh5) | 0;\n      lo = lo + Math.imul(al6, bl6) | 0;\n      mid = mid + Math.imul(al6, bh6) | 0;\n      mid = mid + Math.imul(ah6, bl6) | 0;\n      hi = hi + Math.imul(ah6, bh6) | 0;\n      lo = lo + Math.imul(al5, bl7) | 0;\n      mid = mid + Math.imul(al5, bh7) | 0;\n      mid = mid + Math.imul(ah5, bl7) | 0;\n      hi = hi + Math.imul(ah5, bh7) | 0;\n      lo = lo + Math.imul(al4, bl8) | 0;\n      mid = mid + Math.imul(al4, bh8) | 0;\n      mid = mid + Math.imul(ah4, bl8) | 0;\n      hi = hi + Math.imul(ah4, bh8) | 0;\n      lo = lo + Math.imul(al3, bl9) | 0;\n      mid = mid + Math.imul(al3, bh9) | 0;\n      mid = mid + Math.imul(ah3, bl9) | 0;\n      hi = hi + Math.imul(ah3, bh9) | 0;\n      var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n      w12 &= 0x3ffffff;\n      /* k = 13 */\n\n      lo = Math.imul(al9, bl4);\n      mid = Math.imul(al9, bh4);\n      mid = mid + Math.imul(ah9, bl4) | 0;\n      hi = Math.imul(ah9, bh4);\n      lo = lo + Math.imul(al8, bl5) | 0;\n      mid = mid + Math.imul(al8, bh5) | 0;\n      mid = mid + Math.imul(ah8, bl5) | 0;\n      hi = hi + Math.imul(ah8, bh5) | 0;\n      lo = lo + Math.imul(al7, bl6) | 0;\n      mid = mid + Math.imul(al7, bh6) | 0;\n      mid = mid + Math.imul(ah7, bl6) | 0;\n      hi = hi + Math.imul(ah7, bh6) | 0;\n      lo = lo + Math.imul(al6, bl7) | 0;\n      mid = mid + Math.imul(al6, bh7) | 0;\n      mid = mid + Math.imul(ah6, bl7) | 0;\n      hi = hi + Math.imul(ah6, bh7) | 0;\n      lo = lo + Math.imul(al5, bl8) | 0;\n      mid = mid + Math.imul(al5, bh8) | 0;\n      mid = mid + Math.imul(ah5, bl8) | 0;\n      hi = hi + Math.imul(ah5, bh8) | 0;\n      lo = lo + Math.imul(al4, bl9) | 0;\n      mid = mid + Math.imul(al4, bh9) | 0;\n      mid = mid + Math.imul(ah4, bl9) | 0;\n      hi = hi + Math.imul(ah4, bh9) | 0;\n      var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n      w13 &= 0x3ffffff;\n      /* k = 14 */\n\n      lo = Math.imul(al9, bl5);\n      mid = Math.imul(al9, bh5);\n      mid = mid + Math.imul(ah9, bl5) | 0;\n      hi = Math.imul(ah9, bh5);\n      lo = lo + Math.imul(al8, bl6) | 0;\n      mid = mid + Math.imul(al8, bh6) | 0;\n      mid = mid + Math.imul(ah8, bl6) | 0;\n      hi = hi + Math.imul(ah8, bh6) | 0;\n      lo = lo + Math.imul(al7, bl7) | 0;\n      mid = mid + Math.imul(al7, bh7) | 0;\n      mid = mid + Math.imul(ah7, bl7) | 0;\n      hi = hi + Math.imul(ah7, bh7) | 0;\n      lo = lo + Math.imul(al6, bl8) | 0;\n      mid = mid + Math.imul(al6, bh8) | 0;\n      mid = mid + Math.imul(ah6, bl8) | 0;\n      hi = hi + Math.imul(ah6, bh8) | 0;\n      lo = lo + Math.imul(al5, bl9) | 0;\n      mid = mid + Math.imul(al5, bh9) | 0;\n      mid = mid + Math.imul(ah5, bl9) | 0;\n      hi = hi + Math.imul(ah5, bh9) | 0;\n      var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n      w14 &= 0x3ffffff;\n      /* k = 15 */\n\n      lo = Math.imul(al9, bl6);\n      mid = Math.imul(al9, bh6);\n      mid = mid + Math.imul(ah9, bl6) | 0;\n      hi = Math.imul(ah9, bh6);\n      lo = lo + Math.imul(al8, bl7) | 0;\n      mid = mid + Math.imul(al8, bh7) | 0;\n      mid = mid + Math.imul(ah8, bl7) | 0;\n      hi = hi + Math.imul(ah8, bh7) | 0;\n      lo = lo + Math.imul(al7, bl8) | 0;\n      mid = mid + Math.imul(al7, bh8) | 0;\n      mid = mid + Math.imul(ah7, bl8) | 0;\n      hi = hi + Math.imul(ah7, bh8) | 0;\n      lo = lo + Math.imul(al6, bl9) | 0;\n      mid = mid + Math.imul(al6, bh9) | 0;\n      mid = mid + Math.imul(ah6, bl9) | 0;\n      hi = hi + Math.imul(ah6, bh9) | 0;\n      var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n      w15 &= 0x3ffffff;\n      /* k = 16 */\n\n      lo = Math.imul(al9, bl7);\n      mid = Math.imul(al9, bh7);\n      mid = mid + Math.imul(ah9, bl7) | 0;\n      hi = Math.imul(ah9, bh7);\n      lo = lo + Math.imul(al8, bl8) | 0;\n      mid = mid + Math.imul(al8, bh8) | 0;\n      mid = mid + Math.imul(ah8, bl8) | 0;\n      hi = hi + Math.imul(ah8, bh8) | 0;\n      lo = lo + Math.imul(al7, bl9) | 0;\n      mid = mid + Math.imul(al7, bh9) | 0;\n      mid = mid + Math.imul(ah7, bl9) | 0;\n      hi = hi + Math.imul(ah7, bh9) | 0;\n      var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n      w16 &= 0x3ffffff;\n      /* k = 17 */\n\n      lo = Math.imul(al9, bl8);\n      mid = Math.imul(al9, bh8);\n      mid = mid + Math.imul(ah9, bl8) | 0;\n      hi = Math.imul(ah9, bh8);\n      lo = lo + Math.imul(al8, bl9) | 0;\n      mid = mid + Math.imul(al8, bh9) | 0;\n      mid = mid + Math.imul(ah8, bl9) | 0;\n      hi = hi + Math.imul(ah8, bh9) | 0;\n      var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n      w17 &= 0x3ffffff;\n      /* k = 18 */\n\n      lo = Math.imul(al9, bl9);\n      mid = Math.imul(al9, bh9);\n      mid = mid + Math.imul(ah9, bl9) | 0;\n      hi = Math.imul(ah9, bh9);\n      var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n      w18 &= 0x3ffffff;\n      o[0] = w0;\n      o[1] = w1;\n      o[2] = w2;\n      o[3] = w3;\n      o[4] = w4;\n      o[5] = w5;\n      o[6] = w6;\n      o[7] = w7;\n      o[8] = w8;\n      o[9] = w9;\n      o[10] = w10;\n      o[11] = w11;\n      o[12] = w12;\n      o[13] = w13;\n      o[14] = w14;\n      o[15] = w15;\n      o[16] = w16;\n      o[17] = w17;\n      o[18] = w18;\n\n      if (c !== 0) {\n        o[19] = c;\n        out.length++;\n      }\n\n      return out;\n    }; // Polyfill comb\n\n\n    if (!Math.imul) {\n      comb10MulTo = smallMulTo;\n    }\n\n    function bigMulTo(self, num, out) {\n      out.negative = num.negative ^ self.negative;\n      out.length = self.length + num.length;\n      var carry = 0;\n      var hncarry = 0;\n\n      for (var k = 0; k < out.length - 1; k++) {\n        // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n        // note that ncarry could be >= 0x3ffffff\n        var ncarry = hncarry;\n        hncarry = 0;\n        var rword = carry & 0x3ffffff;\n        var maxJ = Math.min(k, num.length - 1);\n\n        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n          var i = k - j;\n          var a = self.words[i] | 0;\n          var b = num.words[j] | 0;\n          var r = a * b;\n          var lo = r & 0x3ffffff;\n          ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n          lo = lo + rword | 0;\n          rword = lo & 0x3ffffff;\n          ncarry = ncarry + (lo >>> 26) | 0;\n          hncarry += ncarry >>> 26;\n          ncarry &= 0x3ffffff;\n        }\n\n        out.words[k] = rword;\n        carry = ncarry;\n        ncarry = hncarry;\n      }\n\n      if (carry !== 0) {\n        out.words[k] = carry;\n      } else {\n        out.length--;\n      }\n\n      return out.strip();\n    }\n\n    function jumboMulTo(self, num, out) {\n      var fftm = new FFTM();\n      return fftm.mulp(self, num, out);\n    }\n\n    BN.prototype.mulTo = function mulTo(num, out) {\n      var res;\n      var len = this.length + num.length;\n\n      if (this.length === 10 && num.length === 10) {\n        res = comb10MulTo(this, num, out);\n      } else if (len < 63) {\n        res = smallMulTo(this, num, out);\n      } else if (len < 1024) {\n        res = bigMulTo(this, num, out);\n      } else {\n        res = jumboMulTo(this, num, out);\n      }\n\n      return res;\n    }; // Cooley-Tukey algorithm for FFT\n    // slightly revisited to rely on looping instead of recursion\n\n\n    function FFTM(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n\n    FFTM.prototype.makeRBT = function makeRBT(N) {\n      var t = new Array(N);\n      var l = BN.prototype._countBits(N) - 1;\n\n      for (var i = 0; i < N; i++) {\n        t[i] = this.revBin(i, l, N);\n      }\n\n      return t;\n    }; // Returns binary-reversed representation of `x`\n\n\n    FFTM.prototype.revBin = function revBin(x, l, N) {\n      if (x === 0 || x === N - 1) return x;\n      var rb = 0;\n\n      for (var i = 0; i < l; i++) {\n        rb |= (x & 1) << l - i - 1;\n        x >>= 1;\n      }\n\n      return rb;\n    }; // Performs \"tweedling\" phase, therefore 'emulating'\n    // behaviour of the recursive algorithm\n\n\n    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n      for (var i = 0; i < N; i++) {\n        rtws[i] = rws[rbt[i]];\n        itws[i] = iws[rbt[i]];\n      }\n    };\n\n    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n      this.permute(rbt, rws, iws, rtws, itws, N);\n\n      for (var s = 1; s < N; s <<= 1) {\n        var l = s << 1;\n        var rtwdf = Math.cos(2 * Math.PI / l);\n        var itwdf = Math.sin(2 * Math.PI / l);\n\n        for (var p = 0; p < N; p += l) {\n          var rtwdf_ = rtwdf;\n          var itwdf_ = itwdf;\n\n          for (var j = 0; j < s; j++) {\n            var re = rtws[p + j];\n            var ie = itws[p + j];\n            var ro = rtws[p + j + s];\n            var io = itws[p + j + s];\n            var rx = rtwdf_ * ro - itwdf_ * io;\n            io = rtwdf_ * io + itwdf_ * ro;\n            ro = rx;\n            rtws[p + j] = re + ro;\n            itws[p + j] = ie + io;\n            rtws[p + j + s] = re - ro;\n            itws[p + j + s] = ie - io;\n            /* jshint maxdepth : false */\n\n            if (j !== l) {\n              rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n              itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n              rtwdf_ = rx;\n            }\n          }\n        }\n      }\n    };\n\n    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n      var N = Math.max(m, n) | 1;\n      var odd = N & 1;\n      var i = 0;\n\n      for (N = N / 2 | 0; N; N = N >>> 1) {\n        i++;\n      }\n\n      return 1 << i + 1 + odd;\n    };\n\n    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n      if (N <= 1) return;\n\n      for (var i = 0; i < N / 2; i++) {\n        var t = rws[i];\n        rws[i] = rws[N - i - 1];\n        rws[N - i - 1] = t;\n        t = iws[i];\n        iws[i] = -iws[N - i - 1];\n        iws[N - i - 1] = -t;\n      }\n    };\n\n    FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n      var carry = 0;\n\n      for (var i = 0; i < N / 2; i++) {\n        var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n        ws[i] = w & 0x3ffffff;\n\n        if (w < 0x4000000) {\n          carry = 0;\n        } else {\n          carry = w / 0x4000000 | 0;\n        }\n      }\n\n      return ws;\n    };\n\n    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n      var carry = 0;\n\n      for (var i = 0; i < len; i++) {\n        carry = carry + (ws[i] | 0);\n        rws[2 * i] = carry & 0x1fff;\n        carry = carry >>> 13;\n        rws[2 * i + 1] = carry & 0x1fff;\n        carry = carry >>> 13;\n      } // Pad with zeroes\n\n\n      for (i = 2 * len; i < N; ++i) {\n        rws[i] = 0;\n      }\n\n      assert(carry === 0);\n      assert((carry & ~0x1fff) === 0);\n    };\n\n    FFTM.prototype.stub = function stub(N) {\n      var ph = new Array(N);\n\n      for (var i = 0; i < N; i++) {\n        ph[i] = 0;\n      }\n\n      return ph;\n    };\n\n    FFTM.prototype.mulp = function mulp(x, y, out) {\n      var N = 2 * this.guessLen13b(x.length, y.length);\n      var rbt = this.makeRBT(N);\n\n      var _ = this.stub(N);\n\n      var rws = new Array(N);\n      var rwst = new Array(N);\n      var iwst = new Array(N);\n      var nrws = new Array(N);\n      var nrwst = new Array(N);\n      var niwst = new Array(N);\n      var rmws = out.words;\n      rmws.length = N;\n      this.convert13b(x.words, x.length, rws, N);\n      this.convert13b(y.words, y.length, nrws, N);\n      this.transform(rws, _, rwst, iwst, N, rbt);\n      this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n      for (var i = 0; i < N; i++) {\n        var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n        iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n        rwst[i] = rx;\n      }\n\n      this.conjugate(rwst, iwst, N);\n      this.transform(rwst, iwst, rmws, _, N, rbt);\n      this.conjugate(rmws, _, N);\n      this.normalize13b(rmws, N);\n      out.negative = x.negative ^ y.negative;\n      out.length = x.length + y.length;\n      return out.strip();\n    }; // Multiply `this` by `num`\n\n\n    BN.prototype.mul = function mul(num) {\n      var out = new BN(null);\n      out.words = new Array(this.length + num.length);\n      return this.mulTo(num, out);\n    }; // Multiply employing FFT\n\n\n    BN.prototype.mulf = function mulf(num) {\n      var out = new BN(null);\n      out.words = new Array(this.length + num.length);\n      return jumboMulTo(this, num, out);\n    }; // In-place Multiplication\n\n\n    BN.prototype.imul = function imul(num) {\n      return this.clone().mulTo(num, this);\n    };\n\n    BN.prototype.imuln = function imuln(num) {\n      assert(typeof num === 'number');\n      assert(num < 0x4000000); // Carry\n\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = (this.words[i] | 0) * num;\n        var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n        carry >>= 26;\n        carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n        carry += lo >>> 26;\n        this.words[i] = lo & 0x3ffffff;\n      }\n\n      if (carry !== 0) {\n        this.words[i] = carry;\n        this.length++;\n      }\n\n      return this;\n    };\n\n    BN.prototype.muln = function muln(num) {\n      return this.clone().imuln(num);\n    }; // `this` * `this`\n\n\n    BN.prototype.sqr = function sqr() {\n      return this.mul(this);\n    }; // `this` * `this` in-place\n\n\n    BN.prototype.isqr = function isqr() {\n      return this.imul(this.clone());\n    }; // Math.pow(`this`, `num`)\n\n\n    BN.prototype.pow = function pow(num) {\n      var w = toBitArray(num);\n      if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n      var res = this;\n\n      for (var i = 0; i < w.length; i++, res = res.sqr()) {\n        if (w[i] !== 0) break;\n      }\n\n      if (++i < w.length) {\n        for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n          if (w[i] === 0) continue;\n          res = res.mul(q);\n        }\n      }\n\n      return res;\n    }; // Shift-left in-place\n\n\n    BN.prototype.iushln = function iushln(bits) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var r = bits % 26;\n      var s = (bits - r) / 26;\n      var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n      var i;\n\n      if (r !== 0) {\n        var carry = 0;\n\n        for (i = 0; i < this.length; i++) {\n          var newCarry = this.words[i] & carryMask;\n          var c = (this.words[i] | 0) - newCarry << r;\n          this.words[i] = c | carry;\n          carry = newCarry >>> 26 - r;\n        }\n\n        if (carry) {\n          this.words[i] = carry;\n          this.length++;\n        }\n      }\n\n      if (s !== 0) {\n        for (i = this.length - 1; i >= 0; i--) {\n          this.words[i + s] = this.words[i];\n        }\n\n        for (i = 0; i < s; i++) {\n          this.words[i] = 0;\n        }\n\n        this.length += s;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.ishln = function ishln(bits) {\n      // TODO(indutny): implement me\n      assert(this.negative === 0);\n      return this.iushln(bits);\n    }; // Shift-right in-place\n    // NOTE: `hint` is a lowest bit before trailing zeroes\n    // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n    BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var h;\n\n      if (hint) {\n        h = (hint - hint % 26) / 26;\n      } else {\n        h = 0;\n      }\n\n      var r = bits % 26;\n      var s = Math.min((bits - r) / 26, this.length);\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      var maskedWords = extended;\n      h -= s;\n      h = Math.max(0, h); // Extended mode, copy masked part\n\n      if (maskedWords) {\n        for (var i = 0; i < s; i++) {\n          maskedWords.words[i] = this.words[i];\n        }\n\n        maskedWords.length = s;\n      }\n\n      if (s === 0) ;else if (this.length > s) {\n        this.length -= s;\n\n        for (i = 0; i < this.length; i++) {\n          this.words[i] = this.words[i + s];\n        }\n      } else {\n        this.words[0] = 0;\n        this.length = 1;\n      }\n      var carry = 0;\n\n      for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n        var word = this.words[i] | 0;\n        this.words[i] = carry << 26 - r | word >>> r;\n        carry = word & mask;\n      } // Push carried bits as a mask\n\n\n      if (maskedWords && carry !== 0) {\n        maskedWords.words[maskedWords.length++] = carry;\n      }\n\n      if (this.length === 0) {\n        this.words[0] = 0;\n        this.length = 1;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n      // TODO(indutny): implement me\n      assert(this.negative === 0);\n      return this.iushrn(bits, hint, extended);\n    }; // Shift-left\n\n\n    BN.prototype.shln = function shln(bits) {\n      return this.clone().ishln(bits);\n    };\n\n    BN.prototype.ushln = function ushln(bits) {\n      return this.clone().iushln(bits);\n    }; // Shift-right\n\n\n    BN.prototype.shrn = function shrn(bits) {\n      return this.clone().ishrn(bits);\n    };\n\n    BN.prototype.ushrn = function ushrn(bits) {\n      return this.clone().iushrn(bits);\n    }; // Test if n bit is set\n\n\n    BN.prototype.testn = function testn(bit) {\n      assert(typeof bit === 'number' && bit >= 0);\n      var r = bit % 26;\n      var s = (bit - r) / 26;\n      var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n      if (this.length <= s) return false; // Check bit and return\n\n      var w = this.words[s];\n      return !!(w & q);\n    }; // Return only lowers bits of number (in-place)\n\n\n    BN.prototype.imaskn = function imaskn(bits) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var r = bits % 26;\n      var s = (bits - r) / 26;\n      assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n      if (this.length <= s) {\n        return this;\n      }\n\n      if (r !== 0) {\n        s++;\n      }\n\n      this.length = Math.min(s, this.length);\n\n      if (r !== 0) {\n        var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n        this.words[this.length - 1] &= mask;\n      }\n\n      return this.strip();\n    }; // Return only lowers bits of number\n\n\n    BN.prototype.maskn = function maskn(bits) {\n      return this.clone().imaskn(bits);\n    }; // Add plain number `num` to `this`\n\n\n    BN.prototype.iaddn = function iaddn(num) {\n      assert(typeof num === 'number');\n      assert(num < 0x4000000);\n      if (num < 0) return this.isubn(-num); // Possible sign change\n\n      if (this.negative !== 0) {\n        if (this.length === 1 && (this.words[0] | 0) < num) {\n          this.words[0] = num - (this.words[0] | 0);\n          this.negative = 0;\n          return this;\n        }\n\n        this.negative = 0;\n        this.isubn(num);\n        this.negative = 1;\n        return this;\n      } // Add without checks\n\n\n      return this._iaddn(num);\n    };\n\n    BN.prototype._iaddn = function _iaddn(num) {\n      this.words[0] += num; // Carry\n\n      for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n        this.words[i] -= 0x4000000;\n\n        if (i === this.length - 1) {\n          this.words[i + 1] = 1;\n        } else {\n          this.words[i + 1]++;\n        }\n      }\n\n      this.length = Math.max(this.length, i + 1);\n      return this;\n    }; // Subtract plain number `num` from `this`\n\n\n    BN.prototype.isubn = function isubn(num) {\n      assert(typeof num === 'number');\n      assert(num < 0x4000000);\n      if (num < 0) return this.iaddn(-num);\n\n      if (this.negative !== 0) {\n        this.negative = 0;\n        this.iaddn(num);\n        this.negative = 1;\n        return this;\n      }\n\n      this.words[0] -= num;\n\n      if (this.length === 1 && this.words[0] < 0) {\n        this.words[0] = -this.words[0];\n        this.negative = 1;\n      } else {\n        // Carry\n        for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n          this.words[i] += 0x4000000;\n          this.words[i + 1] -= 1;\n        }\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.addn = function addn(num) {\n      return this.clone().iaddn(num);\n    };\n\n    BN.prototype.subn = function subn(num) {\n      return this.clone().isubn(num);\n    };\n\n    BN.prototype.iabs = function iabs() {\n      this.negative = 0;\n      return this;\n    };\n\n    BN.prototype.abs = function abs() {\n      return this.clone().iabs();\n    };\n\n    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n      var len = num.length + shift;\n      var i;\n\n      this._expand(len);\n\n      var w;\n      var carry = 0;\n\n      for (i = 0; i < num.length; i++) {\n        w = (this.words[i + shift] | 0) + carry;\n        var right = (num.words[i] | 0) * mul;\n        w -= right & 0x3ffffff;\n        carry = (w >> 26) - (right / 0x4000000 | 0);\n        this.words[i + shift] = w & 0x3ffffff;\n      }\n\n      for (; i < this.length - shift; i++) {\n        w = (this.words[i + shift] | 0) + carry;\n        carry = w >> 26;\n        this.words[i + shift] = w & 0x3ffffff;\n      }\n\n      if (carry === 0) return this.strip(); // Subtraction overflow\n\n      assert(carry === -1);\n      carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        w = -(this.words[i] | 0) + carry;\n        carry = w >> 26;\n        this.words[i] = w & 0x3ffffff;\n      }\n\n      this.negative = 1;\n      return this.strip();\n    };\n\n    BN.prototype._wordDiv = function _wordDiv(num, mode) {\n      var shift = this.length - num.length;\n      var a = this.clone();\n      var b = num; // Normalize\n\n      var bhi = b.words[b.length - 1] | 0;\n\n      var bhiBits = this._countBits(bhi);\n\n      shift = 26 - bhiBits;\n\n      if (shift !== 0) {\n        b = b.ushln(shift);\n        a.iushln(shift);\n        bhi = b.words[b.length - 1] | 0;\n      } // Initialize quotient\n\n\n      var m = a.length - b.length;\n      var q;\n\n      if (mode !== 'mod') {\n        q = new BN(null);\n        q.length = m + 1;\n        q.words = new Array(q.length);\n\n        for (var i = 0; i < q.length; i++) {\n          q.words[i] = 0;\n        }\n      }\n\n      var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n      if (diff.negative === 0) {\n        a = diff;\n\n        if (q) {\n          q.words[m] = 1;\n        }\n      }\n\n      for (var j = m - 1; j >= 0; j--) {\n        var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n        // (0x7ffffff)\n\n        qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n        a._ishlnsubmul(b, qj, j);\n\n        while (a.negative !== 0) {\n          qj--;\n          a.negative = 0;\n\n          a._ishlnsubmul(b, 1, j);\n\n          if (!a.isZero()) {\n            a.negative ^= 1;\n          }\n        }\n\n        if (q) {\n          q.words[j] = qj;\n        }\n      }\n\n      if (q) {\n        q.strip();\n      }\n\n      a.strip(); // Denormalize\n\n      if (mode !== 'div' && shift !== 0) {\n        a.iushrn(shift);\n      }\n\n      return {\n        div: q || null,\n        mod: a\n      };\n    }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n    //       to `div` to request div only, or be absent to\n    //       request both div & mod\n    //       2) `positive` is true if unsigned mod is requested\n\n\n    BN.prototype.divmod = function divmod(num, mode, positive) {\n      assert(!num.isZero());\n\n      if (this.isZero()) {\n        return {\n          div: new BN(0),\n          mod: new BN(0)\n        };\n      }\n\n      var div, mod, res;\n\n      if (this.negative !== 0 && num.negative === 0) {\n        res = this.neg().divmod(num, mode);\n\n        if (mode !== 'mod') {\n          div = res.div.neg();\n        }\n\n        if (mode !== 'div') {\n          mod = res.mod.neg();\n\n          if (positive && mod.negative !== 0) {\n            mod.iadd(num);\n          }\n        }\n\n        return {\n          div: div,\n          mod: mod\n        };\n      }\n\n      if (this.negative === 0 && num.negative !== 0) {\n        res = this.divmod(num.neg(), mode);\n\n        if (mode !== 'mod') {\n          div = res.div.neg();\n        }\n\n        return {\n          div: div,\n          mod: res.mod\n        };\n      }\n\n      if ((this.negative & num.negative) !== 0) {\n        res = this.neg().divmod(num.neg(), mode);\n\n        if (mode !== 'div') {\n          mod = res.mod.neg();\n\n          if (positive && mod.negative !== 0) {\n            mod.isub(num);\n          }\n        }\n\n        return {\n          div: res.div,\n          mod: mod\n        };\n      } // Both numbers are positive at this point\n      // Strip both numbers to approximate shift value\n\n\n      if (num.length > this.length || this.cmp(num) < 0) {\n        return {\n          div: new BN(0),\n          mod: this\n        };\n      } // Very short reduction\n\n\n      if (num.length === 1) {\n        if (mode === 'div') {\n          return {\n            div: this.divn(num.words[0]),\n            mod: null\n          };\n        }\n\n        if (mode === 'mod') {\n          return {\n            div: null,\n            mod: new BN(this.modn(num.words[0]))\n          };\n        }\n\n        return {\n          div: this.divn(num.words[0]),\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return this._wordDiv(num, mode);\n    }; // Find `this` / `num`\n\n\n    BN.prototype.div = function div(num) {\n      return this.divmod(num, 'div', false).div;\n    }; // Find `this` % `num`\n\n\n    BN.prototype.mod = function mod(num) {\n      return this.divmod(num, 'mod', false).mod;\n    };\n\n    BN.prototype.umod = function umod(num) {\n      return this.divmod(num, 'mod', true).mod;\n    }; // Find Round(`this` / `num`)\n\n\n    BN.prototype.divRound = function divRound(num) {\n      var dm = this.divmod(num); // Fast case - exact division\n\n      if (dm.mod.isZero()) return dm.div;\n      var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n      var half = num.ushrn(1);\n      var r2 = num.andln(1);\n      var cmp = mod.cmp(half); // Round down\n\n      if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n      return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n    };\n\n    BN.prototype.modn = function modn(num) {\n      assert(num <= 0x3ffffff);\n      var p = (1 << 26) % num;\n      var acc = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        acc = (p * acc + (this.words[i] | 0)) % num;\n      }\n\n      return acc;\n    }; // In-place division by number\n\n\n    BN.prototype.idivn = function idivn(num) {\n      assert(num <= 0x3ffffff);\n      var carry = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        var w = (this.words[i] | 0) + carry * 0x4000000;\n        this.words[i] = w / num | 0;\n        carry = w % num;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.divn = function divn(num) {\n      return this.clone().idivn(num);\n    };\n\n    BN.prototype.egcd = function egcd(p) {\n      assert(p.negative === 0);\n      assert(!p.isZero());\n      var x = this;\n      var y = p.clone();\n\n      if (x.negative !== 0) {\n        x = x.umod(p);\n      } else {\n        x = x.clone();\n      } // A * x + B * y = x\n\n\n      var A = new BN(1);\n      var B = new BN(0); // C * x + D * y = y\n\n      var C = new BN(0);\n      var D = new BN(1);\n      var g = 0;\n\n      while (x.isEven() && y.isEven()) {\n        x.iushrn(1);\n        y.iushrn(1);\n        ++g;\n      }\n\n      var yp = y.clone();\n      var xp = x.clone();\n\n      while (!x.isZero()) {\n        for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n        if (i > 0) {\n          x.iushrn(i);\n\n          while (i-- > 0) {\n            if (A.isOdd() || B.isOdd()) {\n              A.iadd(yp);\n              B.isub(xp);\n            }\n\n            A.iushrn(1);\n            B.iushrn(1);\n          }\n        }\n\n        for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n        if (j > 0) {\n          y.iushrn(j);\n\n          while (j-- > 0) {\n            if (C.isOdd() || D.isOdd()) {\n              C.iadd(yp);\n              D.isub(xp);\n            }\n\n            C.iushrn(1);\n            D.iushrn(1);\n          }\n        }\n\n        if (x.cmp(y) >= 0) {\n          x.isub(y);\n          A.isub(C);\n          B.isub(D);\n        } else {\n          y.isub(x);\n          C.isub(A);\n          D.isub(B);\n        }\n      }\n\n      return {\n        a: C,\n        b: D,\n        gcd: y.iushln(g)\n      };\n    }; // This is reduced incarnation of the binary EEA\n    // above, designated to invert members of the\n    // _prime_ fields F(p) at a maximal speed\n\n\n    BN.prototype._invmp = function _invmp(p) {\n      assert(p.negative === 0);\n      assert(!p.isZero());\n      var a = this;\n      var b = p.clone();\n\n      if (a.negative !== 0) {\n        a = a.umod(p);\n      } else {\n        a = a.clone();\n      }\n\n      var x1 = new BN(1);\n      var x2 = new BN(0);\n      var delta = b.clone();\n\n      while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n        for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n        if (i > 0) {\n          a.iushrn(i);\n\n          while (i-- > 0) {\n            if (x1.isOdd()) {\n              x1.iadd(delta);\n            }\n\n            x1.iushrn(1);\n          }\n        }\n\n        for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n        if (j > 0) {\n          b.iushrn(j);\n\n          while (j-- > 0) {\n            if (x2.isOdd()) {\n              x2.iadd(delta);\n            }\n\n            x2.iushrn(1);\n          }\n        }\n\n        if (a.cmp(b) >= 0) {\n          a.isub(b);\n          x1.isub(x2);\n        } else {\n          b.isub(a);\n          x2.isub(x1);\n        }\n      }\n\n      var res;\n\n      if (a.cmpn(1) === 0) {\n        res = x1;\n      } else {\n        res = x2;\n      }\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(p);\n      }\n\n      return res;\n    };\n\n    BN.prototype.gcd = function gcd(num) {\n      if (this.isZero()) return num.abs();\n      if (num.isZero()) return this.abs();\n      var a = this.clone();\n      var b = num.clone();\n      a.negative = 0;\n      b.negative = 0; // Remove common factor of two\n\n      for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n        a.iushrn(1);\n        b.iushrn(1);\n      }\n\n      do {\n        while (a.isEven()) {\n          a.iushrn(1);\n        }\n\n        while (b.isEven()) {\n          b.iushrn(1);\n        }\n\n        var r = a.cmp(b);\n\n        if (r < 0) {\n          // Swap `a` and `b` to make `a` always bigger than `b`\n          var t = a;\n          a = b;\n          b = t;\n        } else if (r === 0 || b.cmpn(1) === 0) {\n          break;\n        }\n\n        a.isub(b);\n      } while (true);\n\n      return b.iushln(shift);\n    }; // Invert number in the field F(num)\n\n\n    BN.prototype.invm = function invm(num) {\n      return this.egcd(num).a.umod(num);\n    };\n\n    BN.prototype.isEven = function isEven() {\n      return (this.words[0] & 1) === 0;\n    };\n\n    BN.prototype.isOdd = function isOdd() {\n      return (this.words[0] & 1) === 1;\n    }; // And first word and num\n\n\n    BN.prototype.andln = function andln(num) {\n      return this.words[0] & num;\n    }; // Increment at the bit position in-line\n\n\n    BN.prototype.bincn = function bincn(bit) {\n      assert(typeof bit === 'number');\n      var r = bit % 26;\n      var s = (bit - r) / 26;\n      var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n      if (this.length <= s) {\n        this._expand(s + 1);\n\n        this.words[s] |= q;\n        return this;\n      } // Add bit and propagate, if needed\n\n\n      var carry = q;\n\n      for (var i = s; carry !== 0 && i < this.length; i++) {\n        var w = this.words[i] | 0;\n        w += carry;\n        carry = w >>> 26;\n        w &= 0x3ffffff;\n        this.words[i] = w;\n      }\n\n      if (carry !== 0) {\n        this.words[i] = carry;\n        this.length++;\n      }\n\n      return this;\n    };\n\n    BN.prototype.isZero = function isZero() {\n      return this.length === 1 && this.words[0] === 0;\n    };\n\n    BN.prototype.cmpn = function cmpn(num) {\n      var negative = num < 0;\n      if (this.negative !== 0 && !negative) return -1;\n      if (this.negative === 0 && negative) return 1;\n      this.strip();\n      var res;\n\n      if (this.length > 1) {\n        res = 1;\n      } else {\n        if (negative) {\n          num = -num;\n        }\n\n        assert(num <= 0x3ffffff, 'Number is too big');\n        var w = this.words[0] | 0;\n        res = w === num ? 0 : w < num ? -1 : 1;\n      }\n\n      if (this.negative !== 0) return -res | 0;\n      return res;\n    }; // Compare two numbers and return:\n    // 1 - if `this` > `num`\n    // 0 - if `this` == `num`\n    // -1 - if `this` < `num`\n\n\n    BN.prototype.cmp = function cmp(num) {\n      if (this.negative !== 0 && num.negative === 0) return -1;\n      if (this.negative === 0 && num.negative !== 0) return 1;\n      var res = this.ucmp(num);\n      if (this.negative !== 0) return -res | 0;\n      return res;\n    }; // Unsigned comparison\n\n\n    BN.prototype.ucmp = function ucmp(num) {\n      // At this point both numbers have the same sign\n      if (this.length > num.length) return 1;\n      if (this.length < num.length) return -1;\n      var res = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        var a = this.words[i] | 0;\n        var b = num.words[i] | 0;\n        if (a === b) continue;\n\n        if (a < b) {\n          res = -1;\n        } else if (a > b) {\n          res = 1;\n        }\n\n        break;\n      }\n\n      return res;\n    };\n\n    BN.prototype.gtn = function gtn(num) {\n      return this.cmpn(num) === 1;\n    };\n\n    BN.prototype.gt = function gt(num) {\n      return this.cmp(num) === 1;\n    };\n\n    BN.prototype.gten = function gten(num) {\n      return this.cmpn(num) >= 0;\n    };\n\n    BN.prototype.gte = function gte(num) {\n      return this.cmp(num) >= 0;\n    };\n\n    BN.prototype.ltn = function ltn(num) {\n      return this.cmpn(num) === -1;\n    };\n\n    BN.prototype.lt = function lt(num) {\n      return this.cmp(num) === -1;\n    };\n\n    BN.prototype.lten = function lten(num) {\n      return this.cmpn(num) <= 0;\n    };\n\n    BN.prototype.lte = function lte(num) {\n      return this.cmp(num) <= 0;\n    };\n\n    BN.prototype.eqn = function eqn(num) {\n      return this.cmpn(num) === 0;\n    };\n\n    BN.prototype.eq = function eq(num) {\n      return this.cmp(num) === 0;\n    }; //\n    // A reduce context, could be using montgomery or something better, depending\n    // on the `m` itself.\n    //\n\n\n    BN.red = function red(num) {\n      return new Red(num);\n    };\n\n    BN.prototype.toRed = function toRed(ctx) {\n      assert(!this.red, 'Already a number in reduction context');\n      assert(this.negative === 0, 'red works only with positives');\n      return ctx.convertTo(this)._forceRed(ctx);\n    };\n\n    BN.prototype.fromRed = function fromRed() {\n      assert(this.red, 'fromRed works only with numbers in reduction context');\n      return this.red.convertFrom(this);\n    };\n\n    BN.prototype._forceRed = function _forceRed(ctx) {\n      this.red = ctx;\n      return this;\n    };\n\n    BN.prototype.forceRed = function forceRed(ctx) {\n      assert(!this.red, 'Already a number in reduction context');\n      return this._forceRed(ctx);\n    };\n\n    BN.prototype.redAdd = function redAdd(num) {\n      assert(this.red, 'redAdd works only with red numbers');\n      return this.red.add(this, num);\n    };\n\n    BN.prototype.redIAdd = function redIAdd(num) {\n      assert(this.red, 'redIAdd works only with red numbers');\n      return this.red.iadd(this, num);\n    };\n\n    BN.prototype.redSub = function redSub(num) {\n      assert(this.red, 'redSub works only with red numbers');\n      return this.red.sub(this, num);\n    };\n\n    BN.prototype.redISub = function redISub(num) {\n      assert(this.red, 'redISub works only with red numbers');\n      return this.red.isub(this, num);\n    };\n\n    BN.prototype.redShl = function redShl(num) {\n      assert(this.red, 'redShl works only with red numbers');\n      return this.red.shl(this, num);\n    };\n\n    BN.prototype.redMul = function redMul(num) {\n      assert(this.red, 'redMul works only with red numbers');\n\n      this.red._verify2(this, num);\n\n      return this.red.mul(this, num);\n    };\n\n    BN.prototype.redIMul = function redIMul(num) {\n      assert(this.red, 'redMul works only with red numbers');\n\n      this.red._verify2(this, num);\n\n      return this.red.imul(this, num);\n    };\n\n    BN.prototype.redSqr = function redSqr() {\n      assert(this.red, 'redSqr works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.sqr(this);\n    };\n\n    BN.prototype.redISqr = function redISqr() {\n      assert(this.red, 'redISqr works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.isqr(this);\n    }; // Square root over p\n\n\n    BN.prototype.redSqrt = function redSqrt() {\n      assert(this.red, 'redSqrt works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.sqrt(this);\n    };\n\n    BN.prototype.redInvm = function redInvm() {\n      assert(this.red, 'redInvm works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.invm(this);\n    }; // Return negative clone of `this` % `red modulo`\n\n\n    BN.prototype.redNeg = function redNeg() {\n      assert(this.red, 'redNeg works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.neg(this);\n    };\n\n    BN.prototype.redPow = function redPow(num) {\n      assert(this.red && !num.red, 'redPow(normalNum)');\n\n      this.red._verify1(this);\n\n      return this.red.pow(this, num);\n    }; // Prime numbers with efficient reduction\n\n\n    var primes = {\n      k256: null,\n      p224: null,\n      p192: null,\n      p25519: null\n    }; // Pseudo-Mersenne prime\n\n    function MPrime(name, p) {\n      // P = 2 ^ N - K\n      this.name = name;\n      this.p = new BN(p, 16);\n      this.n = this.p.bitLength();\n      this.k = new BN(1).iushln(this.n).isub(this.p);\n      this.tmp = this._tmp();\n    }\n\n    MPrime.prototype._tmp = function _tmp() {\n      var tmp = new BN(null);\n      tmp.words = new Array(Math.ceil(this.n / 13));\n      return tmp;\n    };\n\n    MPrime.prototype.ireduce = function ireduce(num) {\n      // Assumes that `num` is less than `P^2`\n      // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n      var r = num;\n      var rlen;\n\n      do {\n        this.split(r, this.tmp);\n        r = this.imulK(r);\n        r = r.iadd(this.tmp);\n        rlen = r.bitLength();\n      } while (rlen > this.n);\n\n      var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n      if (cmp === 0) {\n        r.words[0] = 0;\n        r.length = 1;\n      } else if (cmp > 0) {\n        r.isub(this.p);\n      } else {\n        r.strip();\n      }\n\n      return r;\n    };\n\n    MPrime.prototype.split = function split(input, out) {\n      input.iushrn(this.n, 0, out);\n    };\n\n    MPrime.prototype.imulK = function imulK(num) {\n      return num.imul(this.k);\n    };\n\n    function K256() {\n      MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n    }\n\n    inherits(K256, MPrime);\n\n    K256.prototype.split = function split(input, output) {\n      // 256 = 9 * 26 + 22\n      var mask = 0x3fffff;\n      var outLen = Math.min(input.length, 9);\n\n      for (var i = 0; i < outLen; i++) {\n        output.words[i] = input.words[i];\n      }\n\n      output.length = outLen;\n\n      if (input.length <= 9) {\n        input.words[0] = 0;\n        input.length = 1;\n        return;\n      } // Shift by 9 limbs\n\n\n      var prev = input.words[9];\n      output.words[output.length++] = prev & mask;\n\n      for (i = 10; i < input.length; i++) {\n        var next = input.words[i] | 0;\n        input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n        prev = next;\n      }\n\n      prev >>>= 22;\n      input.words[i - 10] = prev;\n\n      if (prev === 0 && input.length > 10) {\n        input.length -= 10;\n      } else {\n        input.length -= 9;\n      }\n    };\n\n    K256.prototype.imulK = function imulK(num) {\n      // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n      num.words[num.length] = 0;\n      num.words[num.length + 1] = 0;\n      num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n      var lo = 0;\n\n      for (var i = 0; i < num.length; i++) {\n        var w = num.words[i] | 0;\n        lo += w * 0x3d1;\n        num.words[i] = lo & 0x3ffffff;\n        lo = w * 0x40 + (lo / 0x4000000 | 0);\n      } // Fast length reduction\n\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n\n        if (num.words[num.length - 1] === 0) {\n          num.length--;\n        }\n      }\n\n      return num;\n    };\n\n    function P224() {\n      MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n    }\n\n    inherits(P224, MPrime);\n\n    function P192() {\n      MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n    }\n\n    inherits(P192, MPrime);\n\n    function P25519() {\n      // 2 ^ 255 - 19\n      MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n    }\n\n    inherits(P25519, MPrime);\n\n    P25519.prototype.imulK = function imulK(num) {\n      // K = 0x13\n      var carry = 0;\n\n      for (var i = 0; i < num.length; i++) {\n        var hi = (num.words[i] | 0) * 0x13 + carry;\n        var lo = hi & 0x3ffffff;\n        hi >>>= 26;\n        num.words[i] = lo;\n        carry = hi;\n      }\n\n      if (carry !== 0) {\n        num.words[num.length++] = carry;\n      }\n\n      return num;\n    }; // Exported mostly for testing purposes, use plain name instead\n\n\n    BN._prime = function prime(name) {\n      // Cached version of prime\n      if (primes[name]) return primes[name];\n      var prime;\n\n      if (name === 'k256') {\n        prime = new K256();\n      } else if (name === 'p224') {\n        prime = new P224();\n      } else if (name === 'p192') {\n        prime = new P192();\n      } else if (name === 'p25519') {\n        prime = new P25519();\n      } else {\n        throw new Error('Unknown prime ' + name);\n      }\n\n      primes[name] = prime;\n      return prime;\n    }; //\n    // Base reduction engine\n    //\n\n\n    function Red(m) {\n      if (typeof m === 'string') {\n        var prime = BN._prime(m);\n\n        this.m = prime.p;\n        this.prime = prime;\n      } else {\n        assert(m.gtn(1), 'modulus must be greater than 1');\n        this.m = m;\n        this.prime = null;\n      }\n    }\n\n    Red.prototype._verify1 = function _verify1(a) {\n      assert(a.negative === 0, 'red works only with positives');\n      assert(a.red, 'red works only with red numbers');\n    };\n\n    Red.prototype._verify2 = function _verify2(a, b) {\n      assert((a.negative | b.negative) === 0, 'red works only with positives');\n      assert(a.red && a.red === b.red, 'red works only with red numbers');\n    };\n\n    Red.prototype.imod = function imod(a) {\n      if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n      return a.umod(this.m)._forceRed(this);\n    };\n\n    Red.prototype.neg = function neg(a) {\n      if (a.isZero()) {\n        return a.clone();\n      }\n\n      return this.m.sub(a)._forceRed(this);\n    };\n\n    Red.prototype.add = function add(a, b) {\n      this._verify2(a, b);\n\n      var res = a.add(b);\n\n      if (res.cmp(this.m) >= 0) {\n        res.isub(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Red.prototype.iadd = function iadd(a, b) {\n      this._verify2(a, b);\n\n      var res = a.iadd(b);\n\n      if (res.cmp(this.m) >= 0) {\n        res.isub(this.m);\n      }\n\n      return res;\n    };\n\n    Red.prototype.sub = function sub(a, b) {\n      this._verify2(a, b);\n\n      var res = a.sub(b);\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Red.prototype.isub = function isub(a, b) {\n      this._verify2(a, b);\n\n      var res = a.isub(b);\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(this.m);\n      }\n\n      return res;\n    };\n\n    Red.prototype.shl = function shl(a, num) {\n      this._verify1(a);\n\n      return this.imod(a.ushln(num));\n    };\n\n    Red.prototype.imul = function imul(a, b) {\n      this._verify2(a, b);\n\n      return this.imod(a.imul(b));\n    };\n\n    Red.prototype.mul = function mul(a, b) {\n      this._verify2(a, b);\n\n      return this.imod(a.mul(b));\n    };\n\n    Red.prototype.isqr = function isqr(a) {\n      return this.imul(a, a.clone());\n    };\n\n    Red.prototype.sqr = function sqr(a) {\n      return this.mul(a, a);\n    };\n\n    Red.prototype.sqrt = function sqrt(a) {\n      if (a.isZero()) return a.clone();\n      var mod3 = this.m.andln(3);\n      assert(mod3 % 2 === 1); // Fast case\n\n      if (mod3 === 3) {\n        var pow = this.m.add(new BN(1)).iushrn(2);\n        return this.pow(a, pow);\n      } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n      //\n      // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n      var q = this.m.subn(1);\n      var s = 0;\n\n      while (!q.isZero() && q.andln(1) === 0) {\n        s++;\n        q.iushrn(1);\n      }\n\n      assert(!q.isZero());\n      var one = new BN(1).toRed(this);\n      var nOne = one.redNeg(); // Find quadratic non-residue\n      // NOTE: Max is such because of generalized Riemann hypothesis.\n\n      var lpow = this.m.subn(1).iushrn(1);\n      var z = this.m.bitLength();\n      z = new BN(2 * z * z).toRed(this);\n\n      while (this.pow(z, lpow).cmp(nOne) !== 0) {\n        z.redIAdd(nOne);\n      }\n\n      var c = this.pow(z, q);\n      var r = this.pow(a, q.addn(1).iushrn(1));\n      var t = this.pow(a, q);\n      var m = s;\n\n      while (t.cmp(one) !== 0) {\n        var tmp = t;\n\n        for (var i = 0; tmp.cmp(one) !== 0; i++) {\n          tmp = tmp.redSqr();\n        }\n\n        assert(i < m);\n        var b = this.pow(c, new BN(1).iushln(m - i - 1));\n        r = r.redMul(b);\n        c = b.redSqr();\n        t = t.redMul(c);\n        m = i;\n      }\n\n      return r;\n    };\n\n    Red.prototype.invm = function invm(a) {\n      var inv = a._invmp(this.m);\n\n      if (inv.negative !== 0) {\n        inv.negative = 0;\n        return this.imod(inv).redNeg();\n      } else {\n        return this.imod(inv);\n      }\n    };\n\n    Red.prototype.pow = function pow(a, num) {\n      if (num.isZero()) return new BN(1).toRed(this);\n      if (num.cmpn(1) === 0) return a.clone();\n      var windowSize = 4;\n      var wnd = new Array(1 << windowSize);\n      wnd[0] = new BN(1).toRed(this);\n      wnd[1] = a;\n\n      for (var i = 2; i < wnd.length; i++) {\n        wnd[i] = this.mul(wnd[i - 1], a);\n      }\n\n      var res = wnd[0];\n      var current = 0;\n      var currentLen = 0;\n      var start = num.bitLength() % 26;\n\n      if (start === 0) {\n        start = 26;\n      }\n\n      for (i = num.length - 1; i >= 0; i--) {\n        var word = num.words[i];\n\n        for (var j = start - 1; j >= 0; j--) {\n          var bit = word >> j & 1;\n\n          if (res !== wnd[0]) {\n            res = this.sqr(res);\n          }\n\n          if (bit === 0 && current === 0) {\n            currentLen = 0;\n            continue;\n          }\n\n          current <<= 1;\n          current |= bit;\n          currentLen++;\n          if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n          res = this.mul(res, wnd[current]);\n          currentLen = 0;\n          current = 0;\n        }\n\n        start = 26;\n      }\n\n      return res;\n    };\n\n    Red.prototype.convertTo = function convertTo(num) {\n      var r = num.umod(this.m);\n      return r === num ? r.clone() : r;\n    };\n\n    Red.prototype.convertFrom = function convertFrom(num) {\n      var res = num.clone();\n      res.red = null;\n      return res;\n    }; //\n    // Montgomery method engine\n    //\n\n\n    BN.mont = function mont(num) {\n      return new Mont(num);\n    };\n\n    function Mont(m) {\n      Red.call(this, m);\n      this.shift = this.m.bitLength();\n\n      if (this.shift % 26 !== 0) {\n        this.shift += 26 - this.shift % 26;\n      }\n\n      this.r = new BN(1).iushln(this.shift);\n      this.r2 = this.imod(this.r.sqr());\n      this.rinv = this.r._invmp(this.m);\n      this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n      this.minv = this.minv.umod(this.r);\n      this.minv = this.r.sub(this.minv);\n    }\n\n    inherits(Mont, Red);\n\n    Mont.prototype.convertTo = function convertTo(num) {\n      return this.imod(num.ushln(this.shift));\n    };\n\n    Mont.prototype.convertFrom = function convertFrom(num) {\n      var r = this.imod(num.mul(this.rinv));\n      r.red = null;\n      return r;\n    };\n\n    Mont.prototype.imul = function imul(a, b) {\n      if (a.isZero() || b.isZero()) {\n        a.words[0] = 0;\n        a.length = 1;\n        return a;\n      }\n\n      var t = a.imul(b);\n      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n      var u = t.isub(c).iushrn(this.shift);\n      var res = u;\n\n      if (u.cmp(this.m) >= 0) {\n        res = u.isub(this.m);\n      } else if (u.cmpn(0) < 0) {\n        res = u.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Mont.prototype.mul = function mul(a, b) {\n      if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n      var t = a.mul(b);\n      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n      var u = t.isub(c).iushrn(this.shift);\n      var res = u;\n\n      if (u.cmp(this.m) >= 0) {\n        res = u.isub(this.m);\n      } else if (u.cmpn(0) < 0) {\n        res = u.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Mont.prototype.invm = function invm(a) {\n      // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n      var res = this.imod(a._invmp(this.m).mul(this.r2));\n      return res._forceRed(this);\n    };\n  })(module, commonjsGlobal);\n});\nconst version = \"logger/5.0.6\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = {\n  debug: 1,\n  \"default\": 2,\n  info: 2,\n  warning: 3,\n  error: 4,\n  off: 5\n};\nlet _logLevel = LogLevels[\"default\"];\nlet _globalLogger = null;\n\nfunction _checkNormalize() {\n  try {\n    const missing = []; // Make sure all forms of normalization are supported\n\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(form => {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n\n        ;\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    return error.message;\n  }\n\n  return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nvar LogLevel;\n\n(function (LogLevel) {\n  LogLevel[\"DEBUG\"] = \"DEBUG\";\n  LogLevel[\"INFO\"] = \"INFO\";\n  LogLevel[\"WARNING\"] = \"WARNING\";\n  LogLevel[\"ERROR\"] = \"ERROR\";\n  LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ///////////////////\n  // Generic Errors\n  // Unknown Error\n  ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\"; // Not Implemented\n\n  ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\"; // Unsupported Operation\n  //   - operation\n\n  ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\"; // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n  //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n\n  ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\"; // Some sort of bad response from the server\n\n  ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\"; // Timeout\n\n  ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\"; ///////////////////\n  // Operational  Errors\n  // Buffer Overrun\n\n  ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\"; // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n\n  ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\"; ///////////////////\n  // Argument Errors\n  // Missing new operator to an object\n  //  - name: The name of the class\n\n  ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\"; // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n\n  ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\"; // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\"; // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\"; ///////////////////\n  // Blockchain Errors\n  // Call exception\n  //  - transaction: the transaction\n  //  - address?: the contract address\n  //  - args?: The arguments passed into the function\n  //  - method?: The Solidity method signature\n  //  - errorSignature?: The EIP848 error signature\n  //  - errorArgs?: The EIP848 error parameters\n  //  - reason: The reason (only for EIP848 \"Error(string)\")\n\n  ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\"; // Insufficien funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\"; // Nonce has already been used\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\"; // The replacement fee for the transaction is too low\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\"; // The gas limit could not be estimated\n  //   - transaction: the transaction passed to estimateGas\n\n  ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n})(ErrorCode || (ErrorCode = {}));\n\nclass Logger {\n  constructor(version) {\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      value: version,\n      writable: false\n    });\n  }\n\n  _log(logLevel, args) {\n    const level = logLevel.toLowerCase();\n\n    if (LogLevels[level] == null) {\n      this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n    }\n\n    if (_logLevel > LogLevels[level]) {\n      return;\n    }\n\n    console.log.apply(console, args);\n  }\n\n  debug(...args) {\n    this._log(Logger.levels.DEBUG, args);\n  }\n\n  info(...args) {\n    this._log(Logger.levels.INFO, args);\n  }\n\n  warn(...args) {\n    this._log(Logger.levels.WARNING, args);\n  }\n\n  makeError(message, code, params) {\n    // Errors are being censored\n    if (_censorErrors) {\n      return this.makeError(\"censored error\", code, {});\n    }\n\n    if (!code) {\n      code = Logger.errors.UNKNOWN_ERROR;\n    }\n\n    if (!params) {\n      params = {};\n    }\n\n    const messageDetails = [];\n    Object.keys(params).forEach(key => {\n      try {\n        messageDetails.push(key + \"=\" + JSON.stringify(params[key]));\n      } catch (error) {\n        messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n      }\n    });\n    messageDetails.push(`code=${code}`);\n    messageDetails.push(`version=${this.version}`);\n    const reason = message;\n\n    if (messageDetails.length) {\n      message += \" (\" + messageDetails.join(\", \") + \")\";\n    } // @TODO: Any??\n\n\n    const error = new Error(message);\n    error.reason = reason;\n    error.code = code;\n    Object.keys(params).forEach(function (key) {\n      error[key] = params[key];\n    });\n    return error;\n  }\n\n  throwError(message, code, params) {\n    throw this.makeError(message, code, params);\n  }\n\n  throwArgumentError(message, name, value) {\n    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n      argument: name,\n      value: value\n    });\n  }\n\n  assert(condition, message, code, params) {\n    if (!!condition) {\n      return;\n    }\n\n    this.throwError(message, code, params);\n  }\n\n  assertArgument(condition, message, name, value) {\n    if (!!condition) {\n      return;\n    }\n\n    this.throwArgumentError(message, name, value);\n  }\n\n  checkNormalize(message) {\n    if (_normalizeError) {\n      this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"String.prototype.normalize\",\n        form: _normalizeError\n      });\n    }\n  }\n\n  checkSafeUint53(value, message) {\n    if (typeof value !== \"number\") {\n      return;\n    }\n\n    if (message == null) {\n      message = \"value not safe\";\n    }\n\n    if (value < 0 || value >= 0x1fffffffffffff) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"out-of-safe-range\",\n        value: value\n      });\n    }\n\n    if (value % 1) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"non-integer\",\n        value: value\n      });\n    }\n  }\n\n  checkArgumentCount(count, expectedCount, message) {\n    if (message) {\n      message = \": \" + message;\n    } else {\n      message = \"\";\n    }\n\n    if (count < expectedCount) {\n      this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n\n    if (count > expectedCount) {\n      this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n  }\n\n  checkNew(target, kind) {\n    if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n\n  checkAbstract(target, kind) {\n    if (target === kind) {\n      this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, {\n        name: target.name,\n        operation: \"new\"\n      });\n    } else if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n\n  static globalLogger() {\n    if (!_globalLogger) {\n      _globalLogger = new Logger(version);\n    }\n\n    return _globalLogger;\n  }\n\n  static setCensorship(censorship, permanent) {\n    if (!censorship && permanent) {\n      this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n\n    if (_permanentCensorErrors) {\n      if (!censorship) {\n        return;\n      }\n\n      this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n  }\n\n  static setLogLevel(logLevel) {\n    const level = LogLevels[logLevel.toLowerCase()];\n\n    if (level == null) {\n      Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n      return;\n    }\n\n    _logLevel = level;\n  }\n\n}\n\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\nconst version$1 = \"bytes/5.0.5\";\nconst logger = new Logger(version$1); ///////////////////////////////\n\nfunction isHexable(value) {\n  return !!value.toHexString;\n}\n\nfunction addSlice(array) {\n  if (array.slice) {\n    return array;\n  }\n\n  array.slice = function () {\n    const args = Array.prototype.slice.call(arguments);\n    return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n  };\n\n  return array;\n}\n\nfunction isBytesLike(value) {\n  return isHexString(value) && !(value.length % 2) || isBytes(value);\n}\n\nfunction isBytes(value) {\n  if (value == null) {\n    return false;\n  }\n\n  if (value.constructor === Uint8Array) {\n    return true;\n  }\n\n  if (typeof value === \"string\") {\n    return false;\n  }\n\n  if (value.length == null) {\n    return false;\n  }\n\n  for (let i = 0; i < value.length; i++) {\n    const v = value[i];\n\n    if (v < 0 || v >= 256 || v % 1) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction arrayify(value, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof value === \"number\") {\n    logger.checkSafeUint53(value, \"invalid arrayify value\");\n    const result = [];\n\n    while (value) {\n      result.unshift(value & 0xff);\n      value = parseInt(String(value / 256));\n    }\n\n    if (result.length === 0) {\n      result.push(0);\n    }\n\n    return addSlice(new Uint8Array(result));\n  }\n\n  if (options.allowMissingPrefix && typeof value === \"string\" && value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  }\n\n  if (isHexable(value)) {\n    value = value.toHexString();\n  }\n\n  if (isHexString(value)) {\n    let hex = value.substring(2);\n\n    if (hex.length % 2) {\n      if (options.hexPad === \"left\") {\n        hex = \"0x0\" + hex.substring(2);\n      } else if (options.hexPad === \"right\") {\n        hex += \"0\";\n      } else {\n        logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n      }\n    }\n\n    const result = [];\n\n    for (let i = 0; i < hex.length; i += 2) {\n      result.push(parseInt(hex.substring(i, i + 2), 16));\n    }\n\n    return addSlice(new Uint8Array(result));\n  }\n\n  if (isBytes(value)) {\n    return addSlice(new Uint8Array(value));\n  }\n\n  return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nfunction concat(items) {\n  const objects = items.map(item => arrayify(item));\n  const length = objects.reduce((accum, item) => accum + item.length, 0);\n  const result = new Uint8Array(length);\n  objects.reduce((offset, object) => {\n    result.set(object, offset);\n    return offset + object.length;\n  }, 0);\n  return addSlice(result);\n}\n\nfunction stripZeros(value) {\n  let result = arrayify(value);\n\n  if (result.length === 0) {\n    return result;\n  } // Find the first non-zero entry\n\n\n  let start = 0;\n\n  while (start < result.length && result[start] === 0) {\n    start++;\n  } // If we started with zeros, strip them\n\n\n  if (start) {\n    result = result.slice(start);\n  }\n\n  return result;\n}\n\nfunction isHexString(value, length) {\n  if (typeof value !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nconst HexCharacters = \"0123456789abcdef\";\n\nfunction hexlify(value, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof value === \"number\") {\n    logger.checkSafeUint53(value, \"invalid hexlify value\");\n    let hex = \"\";\n\n    while (value) {\n      hex = HexCharacters[value & 0x0f] + hex;\n      value = Math.floor(value / 16);\n    }\n\n    if (hex.length) {\n      if (hex.length % 2) {\n        hex = \"0\" + hex;\n      }\n\n      return \"0x\" + hex;\n    }\n\n    return \"0x00\";\n  }\n\n  if (options.allowMissingPrefix && typeof value === \"string\" && value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  }\n\n  if (isHexable(value)) {\n    return value.toHexString();\n  }\n\n  if (isHexString(value)) {\n    if (value.length % 2) {\n      if (options.hexPad === \"left\") {\n        value = \"0x0\" + value.substring(2);\n      } else if (options.hexPad === \"right\") {\n        value += \"0\";\n      } else {\n        logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n      }\n    }\n\n    return value.toLowerCase();\n  }\n\n  if (isBytes(value)) {\n    let result = \"0x\";\n\n    for (let i = 0; i < value.length; i++) {\n      let v = value[i];\n      result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n\n    return result;\n  }\n\n  return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\nfunction hexDataSlice(data, offset, endOffset) {\n  if (typeof data !== \"string\") {\n    data = hexlify(data);\n  } else if (!isHexString(data) || data.length % 2) {\n    logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n  }\n\n  offset = 2 + 2 * offset;\n\n  if (endOffset != null) {\n    return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n  }\n\n  return \"0x\" + data.substring(offset);\n}\n\nfunction hexConcat(items) {\n  let result = \"0x\";\n  items.forEach(item => {\n    result += hexlify(item).substring(2);\n  });\n  return result;\n}\n\nfunction hexZeroPad(value, length) {\n  if (typeof value !== \"string\") {\n    value = hexlify(value);\n  } else if (!isHexString(value)) {\n    logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n  }\n\n  if (value.length > 2 * length + 2) {\n    logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n  }\n\n  while (value.length < 2 * length + 2) {\n    value = \"0x0\" + value.substring(2);\n  }\n\n  return value;\n}\n\nconst version$2 = \"bignumber/5.0.8\";\nconst logger$1 = new Logger(version$2);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\n\nfunction isBigNumberish(value) {\n  return value != null && (BigNumber.isBigNumber(value) || typeof value === \"number\" && value % 1 === 0 || typeof value === \"string\" && !!value.match(/^-?[0-9]+$/) || isHexString(value) || typeof value === \"bigint\" || isBytes(value));\n}\n\nclass BigNumber {\n  constructor(constructorGuard, hex) {\n    logger$1.checkNew(new.target, BigNumber);\n\n    if (constructorGuard !== _constructorGuard) {\n      logger$1.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new (BigNumber)\"\n      });\n    }\n\n    this._hex = hex;\n    this._isBigNumber = true;\n    Object.freeze(this);\n  }\n\n  fromTwos(value) {\n    return toBigNumber(toBN(this).fromTwos(value));\n  }\n\n  toTwos(value) {\n    return toBigNumber(toBN(this).toTwos(value));\n  }\n\n  abs() {\n    if (this._hex[0] === \"-\") {\n      return BigNumber.from(this._hex.substring(1));\n    }\n\n    return this;\n  }\n\n  add(other) {\n    return toBigNumber(toBN(this).add(toBN(other)));\n  }\n\n  sub(other) {\n    return toBigNumber(toBN(this).sub(toBN(other)));\n  }\n\n  div(other) {\n    const o = BigNumber.from(other);\n\n    if (o.isZero()) {\n      throwFault(\"division by zero\", \"div\");\n    }\n\n    return toBigNumber(toBN(this).div(toBN(other)));\n  }\n\n  mul(other) {\n    return toBigNumber(toBN(this).mul(toBN(other)));\n  }\n\n  mod(other) {\n    const value = toBN(other);\n\n    if (value.isNeg()) {\n      throwFault(\"cannot modulo negative values\", \"mod\");\n    }\n\n    return toBigNumber(toBN(this).umod(value));\n  }\n\n  pow(other) {\n    const value = toBN(other);\n\n    if (value.isNeg()) {\n      throwFault(\"cannot raise to negative values\", \"pow\");\n    }\n\n    return toBigNumber(toBN(this).pow(value));\n  }\n\n  and(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'and' negative values\", \"and\");\n    }\n\n    return toBigNumber(toBN(this).and(value));\n  }\n\n  or(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'or' negative values\", \"or\");\n    }\n\n    return toBigNumber(toBN(this).or(value));\n  }\n\n  xor(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'xor' negative values\", \"xor\");\n    }\n\n    return toBigNumber(toBN(this).xor(value));\n  }\n\n  mask(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot mask negative values\", \"mask\");\n    }\n\n    return toBigNumber(toBN(this).maskn(value));\n  }\n\n  shl(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot shift negative values\", \"shl\");\n    }\n\n    return toBigNumber(toBN(this).shln(value));\n  }\n\n  shr(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot shift negative values\", \"shr\");\n    }\n\n    return toBigNumber(toBN(this).shrn(value));\n  }\n\n  eq(other) {\n    return toBN(this).eq(toBN(other));\n  }\n\n  lt(other) {\n    return toBN(this).lt(toBN(other));\n  }\n\n  lte(other) {\n    return toBN(this).lte(toBN(other));\n  }\n\n  gt(other) {\n    return toBN(this).gt(toBN(other));\n  }\n\n  gte(other) {\n    return toBN(this).gte(toBN(other));\n  }\n\n  isNegative() {\n    return this._hex[0] === \"-\";\n  }\n\n  isZero() {\n    return toBN(this).isZero();\n  }\n\n  toNumber() {\n    try {\n      return toBN(this).toNumber();\n    } catch (error) {\n      throwFault(\"overflow\", \"toNumber\", this.toString());\n    }\n\n    return null;\n  }\n\n  toString() {\n    // Lots of people expect this, which we do not support, so check\n    if (arguments.length !== 0) {\n      logger$1.throwError(\"bigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n    }\n\n    return toBN(this).toString(10);\n  }\n\n  toHexString() {\n    return this._hex;\n  }\n\n  toJSON(key) {\n    return {\n      type: \"BigNumber\",\n      hex: this.toHexString()\n    };\n  }\n\n  static from(value) {\n    if (value instanceof BigNumber) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      if (value.match(/^-?0x[0-9a-f]+$/i)) {\n        return new BigNumber(_constructorGuard, toHex(value));\n      }\n\n      if (value.match(/^-?[0-9]+$/)) {\n        return new BigNumber(_constructorGuard, toHex(new bn.BN(value)));\n      }\n\n      return logger$1.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n    }\n\n    if (typeof value === \"number\") {\n      if (value % 1) {\n        throwFault(\"underflow\", \"BigNumber.from\", value);\n      }\n\n      if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n        throwFault(\"overflow\", \"BigNumber.from\", value);\n      }\n\n      return BigNumber.from(String(value));\n    }\n\n    const anyValue = value;\n\n    if (typeof anyValue === \"bigint\") {\n      return BigNumber.from(anyValue.toString());\n    }\n\n    if (isBytes(anyValue)) {\n      return BigNumber.from(hexlify(anyValue));\n    }\n\n    if (anyValue) {\n      // Hexable interface (takes piority)\n      if (anyValue.toHexString) {\n        const hex = anyValue.toHexString();\n\n        if (typeof hex === \"string\") {\n          return BigNumber.from(hex);\n        }\n      } else {\n        // For now, handle legacy JSON-ified values (goes away in v6)\n        let hex = anyValue._hex; // New-form JSON\n\n        if (hex == null && anyValue.type === \"BigNumber\") {\n          hex = anyValue.hex;\n        }\n\n        if (typeof hex === \"string\") {\n          if (isHexString(hex) || hex[0] === \"-\" && isHexString(hex.substring(1))) {\n            return BigNumber.from(hex);\n          }\n        }\n      }\n    }\n\n    return logger$1.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n  }\n\n  static isBigNumber(value) {\n    return !!(value && value._isBigNumber);\n  }\n\n} // Normalize the hex string\n\n\nfunction toHex(value) {\n  // For BN, call on the hex string\n  if (typeof value !== \"string\") {\n    return toHex(value.toString(16));\n  } // If negative, prepend the negative sign to the normalized positive value\n\n\n  if (value[0] === \"-\") {\n    // Strip off the negative sign\n    value = value.substring(1); // Cannot have mulitple negative signs (e.g. \"--0x04\")\n\n    if (value[0] === \"-\") {\n      logger$1.throwArgumentError(\"invalid hex\", \"value\", value);\n    } // Call toHex on the positive component\n\n\n    value = toHex(value); // Do not allow \"-0x00\"\n\n    if (value === \"0x00\") {\n      return value;\n    } // Negate the value\n\n\n    return \"-\" + value;\n  } // Add a \"0x\" prefix if missing\n\n\n  if (value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  } // Normalize zero\n\n\n  if (value === \"0x\") {\n    return \"0x00\";\n  } // Make the string even length\n\n\n  if (value.length % 2) {\n    value = \"0x0\" + value.substring(2);\n  } // Trim to smallest even-length string\n\n\n  while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n    value = \"0x\" + value.substring(4);\n  }\n\n  return value;\n}\n\nfunction toBigNumber(value) {\n  return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value) {\n  const hex = BigNumber.from(value).toHexString();\n\n  if (hex[0] === \"-\") {\n    return new bn.BN(\"-\" + hex.substring(3), 16);\n  }\n\n  return new bn.BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault, operation, value) {\n  const params = {\n    fault: fault,\n    operation: operation\n  };\n\n  if (value != null) {\n    params.value = value;\n  }\n\n  return logger$1.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\nconst logger$2 = new Logger(version$2);\nconst _constructorGuard$1 = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\n\nfunction throwFault$1(message, fault, operation, value) {\n  const params = {\n    fault: fault,\n    operation: operation\n  };\n\n  if (value !== undefined) {\n    params.value = value;\n  }\n\n  return logger$2.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n} // Constant to pull zeros from for multipliers\n\n\nlet zeros = \"0\";\n\nwhile (zeros.length < 256) {\n  zeros += zeros;\n} // Returns a string \"1\" followed by decimal \"0\"s\n\n\nfunction getMultiplier(decimals) {\n  if (typeof decimals !== \"number\") {\n    try {\n      decimals = BigNumber.from(decimals).toNumber();\n    } catch (e) {}\n  }\n\n  if (typeof decimals === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n    return \"1\" + zeros.substring(0, decimals);\n  }\n\n  return logger$2.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\n\nfunction formatFixed(value, decimals) {\n  if (decimals == null) {\n    decimals = 0;\n  }\n\n  const multiplier = getMultiplier(decimals); // Make sure wei is a big number (convert as necessary)\n\n  value = BigNumber.from(value);\n  const negative = value.lt(Zero);\n\n  if (negative) {\n    value = value.mul(NegativeOne);\n  }\n\n  let fraction = value.mod(multiplier).toString();\n\n  while (fraction.length < multiplier.length - 1) {\n    fraction = \"0\" + fraction;\n  } // Strip training 0\n\n\n  fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n  const whole = value.div(multiplier).toString();\n  value = whole + \".\" + fraction;\n\n  if (negative) {\n    value = \"-\" + value;\n  }\n\n  return value;\n}\n\nfunction parseFixed(value, decimals) {\n  if (decimals == null) {\n    decimals = 0;\n  }\n\n  const multiplier = getMultiplier(decimals);\n\n  if (typeof value !== \"string\" || !value.match(/^-?[0-9.,]+$/)) {\n    logger$2.throwArgumentError(\"invalid decimal value\", \"value\", value);\n  }\n\n  if (multiplier.length - 1 === 0) {\n    return BigNumber.from(value);\n  } // Is it negative?\n\n\n  const negative = value.substring(0, 1) === \"-\";\n\n  if (negative) {\n    value = value.substring(1);\n  }\n\n  if (value === \".\") {\n    logger$2.throwArgumentError(\"missing value\", \"value\", value);\n  } // Split it into a whole and fractional part\n\n\n  const comps = value.split(\".\");\n\n  if (comps.length > 2) {\n    logger$2.throwArgumentError(\"too many decimal points\", \"value\", value);\n  }\n\n  let whole = comps[0],\n      fraction = comps[1];\n\n  if (!whole) {\n    whole = \"0\";\n  }\n\n  if (!fraction) {\n    fraction = \"0\";\n  } // Prevent underflow\n\n\n  if (fraction.length > multiplier.length - 1) {\n    throwFault$1(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n  } // Fully pad the string with zeros to get to wei\n\n\n  while (fraction.length < multiplier.length - 1) {\n    fraction += \"0\";\n  }\n\n  const wholeValue = BigNumber.from(whole);\n  const fractionValue = BigNumber.from(fraction);\n  let wei = wholeValue.mul(multiplier).add(fractionValue);\n\n  if (negative) {\n    wei = wei.mul(NegativeOne);\n  }\n\n  return wei;\n}\n\nclass FixedFormat {\n  constructor(constructorGuard, signed, width, decimals) {\n    if (constructorGuard !== _constructorGuard$1) {\n      logger$2.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new FixedFormat\"\n      });\n    }\n\n    this.signed = signed;\n    this.width = width;\n    this.decimals = decimals;\n    this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n    this._multiplier = getMultiplier(decimals);\n    Object.freeze(this);\n  }\n\n  static from(value) {\n    if (value instanceof FixedFormat) {\n      return value;\n    }\n\n    let signed = true;\n    let width = 128;\n    let decimals = 18;\n\n    if (typeof value === \"string\") {\n      if (value === \"fixed\") ;else if (value === \"ufixed\") {\n        signed = false;\n      } else if (value != null) {\n        const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n\n        if (!match) {\n          logger$2.throwArgumentError(\"invalid fixed format\", \"format\", value);\n        }\n\n        signed = match[1] !== \"u\";\n        width = parseInt(match[2]);\n        decimals = parseInt(match[3]);\n      }\n    } else if (value) {\n      const check = (key, type, defaultValue) => {\n        if (value[key] == null) {\n          return defaultValue;\n        }\n\n        if (typeof value[key] !== type) {\n          logger$2.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n        }\n\n        return value[key];\n      };\n\n      signed = check(\"signed\", \"boolean\", signed);\n      width = check(\"width\", \"number\", width);\n      decimals = check(\"decimals\", \"number\", decimals);\n    }\n\n    if (width % 8) {\n      logger$2.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n    }\n\n    if (decimals > 80) {\n      logger$2.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n    }\n\n    return new FixedFormat(_constructorGuard$1, signed, width, decimals);\n  }\n\n}\n\nclass FixedNumber {\n  constructor(constructorGuard, hex, value, format) {\n    logger$2.checkNew(new.target, FixedNumber);\n\n    if (constructorGuard !== _constructorGuard$1) {\n      logger$2.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new FixedFormat\"\n      });\n    }\n\n    this.format = format;\n    this._hex = hex;\n    this._value = value;\n    this._isFixedNumber = true;\n    Object.freeze(this);\n  }\n\n  _checkFormat(other) {\n    if (this.format.name !== other.format.name) {\n      logger$2.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n    }\n  }\n\n  addUnsafe(other) {\n    this._checkFormat(other);\n\n    const a = parseFixed(this._value, this.format.decimals);\n    const b = parseFixed(other._value, other.format.decimals);\n    return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n  }\n\n  subUnsafe(other) {\n    this._checkFormat(other);\n\n    const a = parseFixed(this._value, this.format.decimals);\n    const b = parseFixed(other._value, other.format.decimals);\n    return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n  }\n\n  mulUnsafe(other) {\n    this._checkFormat(other);\n\n    const a = parseFixed(this._value, this.format.decimals);\n    const b = parseFixed(other._value, other.format.decimals);\n    return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n  }\n\n  divUnsafe(other) {\n    this._checkFormat(other);\n\n    const a = parseFixed(this._value, this.format.decimals);\n    const b = parseFixed(other._value, other.format.decimals);\n    return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n  }\n\n  floor() {\n    let comps = this.toString().split(\".\");\n    let result = FixedNumber.from(comps[0], this.format);\n    const hasFraction = !comps[1].match(/^(0*)$/);\n\n    if (this.isNegative() && hasFraction) {\n      result = result.subUnsafe(ONE);\n    }\n\n    return result;\n  }\n\n  ceiling() {\n    let comps = this.toString().split(\".\");\n    let result = FixedNumber.from(comps[0], this.format);\n    const hasFraction = !comps[1].match(/^(0*)$/);\n\n    if (!this.isNegative() && hasFraction) {\n      result = result.addUnsafe(ONE);\n    }\n\n    return result;\n  } // @TODO: Support other rounding algorithms\n\n\n  round(decimals) {\n    if (decimals == null) {\n      decimals = 0;\n    } // If we are already in range, we're done\n\n\n    let comps = this.toString().split(\".\");\n\n    if (decimals < 0 || decimals > 80 || decimals % 1) {\n      logger$2.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n    }\n\n    if (comps[1].length <= decimals) {\n      return this;\n    }\n\n    const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals));\n    return this.mulUnsafe(factor).addUnsafe(BUMP).floor().divUnsafe(factor);\n  }\n\n  isZero() {\n    return this._value === \"0.0\";\n  }\n\n  isNegative() {\n    return this._value[0] === \"-\";\n  }\n\n  toString() {\n    return this._value;\n  }\n\n  toHexString(width) {\n    if (width == null) {\n      return this._hex;\n    }\n\n    if (width % 8) {\n      logger$2.throwArgumentError(\"invalid byte width\", \"width\", width);\n    }\n\n    const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n    return hexZeroPad(hex, width / 8);\n  }\n\n  toUnsafeFloat() {\n    return parseFloat(this.toString());\n  }\n\n  toFormat(format) {\n    return FixedNumber.fromString(this._value, format);\n  }\n\n  static fromValue(value, decimals, format) {\n    // If decimals looks more like a format, and there is no format, shift the parameters\n    if (format == null && decimals != null && !isBigNumberish(decimals)) {\n      format = decimals;\n      decimals = null;\n    }\n\n    if (decimals == null) {\n      decimals = 0;\n    }\n\n    if (format == null) {\n      format = \"fixed\";\n    }\n\n    return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n  }\n\n  static fromString(value, format) {\n    if (format == null) {\n      format = \"fixed\";\n    }\n\n    const fixedFormat = FixedFormat.from(format);\n    const numeric = parseFixed(value, fixedFormat.decimals);\n\n    if (!fixedFormat.signed && numeric.lt(Zero)) {\n      throwFault$1(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n    }\n\n    let hex = null;\n\n    if (fixedFormat.signed) {\n      hex = numeric.toTwos(fixedFormat.width).toHexString();\n    } else {\n      hex = numeric.toHexString();\n      hex = hexZeroPad(hex, fixedFormat.width / 8);\n    }\n\n    const decimal = formatFixed(numeric, fixedFormat.decimals);\n    return new FixedNumber(_constructorGuard$1, hex, decimal, fixedFormat);\n  }\n\n  static fromBytes(value, format) {\n    if (format == null) {\n      format = \"fixed\";\n    }\n\n    const fixedFormat = FixedFormat.from(format);\n\n    if (arrayify(value).length > fixedFormat.width / 8) {\n      throw new Error(\"overflow\");\n    }\n\n    let numeric = BigNumber.from(value);\n\n    if (fixedFormat.signed) {\n      numeric = numeric.fromTwos(fixedFormat.width);\n    }\n\n    const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n    const decimal = formatFixed(numeric, fixedFormat.decimals);\n    return new FixedNumber(_constructorGuard$1, hex, decimal, fixedFormat);\n  }\n\n  static from(value, format) {\n    if (typeof value === \"string\") {\n      return FixedNumber.fromString(value, format);\n    }\n\n    if (isBytes(value)) {\n      return FixedNumber.fromBytes(value, format);\n    }\n\n    try {\n      return FixedNumber.fromValue(value, 0, format);\n    } catch (error) {\n      // Allow NUMERIC_FAULT to bubble up\n      if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n        throw error;\n      }\n    }\n\n    return logger$2.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n  }\n\n  static isFixedNumber(value) {\n    return !!(value && value._isFixedNumber);\n  }\n\n}\n\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\nconst version$3 = \"properties/5.0.4\";\n\nvar __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$3 = new Logger(version$3);\n\nfunction defineReadOnly(object, name, value) {\n  Object.defineProperty(object, name, {\n    enumerable: true,\n    value: value,\n    writable: false\n  });\n} // Crawl up the constructor chain to find a static method\n\n\nfunction getStatic(ctor, key) {\n  for (let i = 0; i < 32; i++) {\n    if (ctor[key]) {\n      return ctor[key];\n    }\n\n    if (!ctor.prototype || typeof ctor.prototype !== \"object\") {\n      break;\n    }\n\n    ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n  }\n\n  return null;\n}\n\nfunction resolveProperties(object) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const promises = Object.keys(object).map(key => {\n      const value = object[key];\n      return Promise.resolve(value).then(v => ({\n        key: key,\n        value: v\n      }));\n    });\n    const results = yield Promise.all(promises);\n    return results.reduce((accum, result) => {\n      accum[result.key] = result.value;\n      return accum;\n    }, {});\n  });\n}\n\nfunction shallowCopy(object) {\n  const result = {};\n\n  for (const key in object) {\n    result[key] = object[key];\n  }\n\n  return result;\n}\n\nconst opaque = {\n  bigint: true,\n  boolean: true,\n  \"function\": true,\n  number: true,\n  string: true\n};\n\nfunction _isFrozen(object) {\n  // Opaque objects are not mutable, so safe to copy by assignment\n  if (object === undefined || object === null || opaque[typeof object]) {\n    return true;\n  }\n\n  if (Array.isArray(object) || typeof object === \"object\") {\n    if (!Object.isFrozen(object)) {\n      return false;\n    }\n\n    const keys = Object.keys(object);\n\n    for (let i = 0; i < keys.length; i++) {\n      if (!_isFrozen(object[keys[i]])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return logger$3.throwArgumentError(`Cannot deepCopy ${typeof object}`, \"object\", object);\n} // Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\n\n\nfunction _deepCopy(object) {\n  if (_isFrozen(object)) {\n    return object;\n  } // Arrays are mutable, so we need to create a copy\n\n\n  if (Array.isArray(object)) {\n    return Object.freeze(object.map(item => deepCopy(item)));\n  }\n\n  if (typeof object === \"object\") {\n    const result = {};\n\n    for (const key in object) {\n      const value = object[key];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      defineReadOnly(result, key, deepCopy(value));\n    }\n\n    return result;\n  }\n\n  return logger$3.throwArgumentError(`Cannot deepCopy ${typeof object}`, \"object\", object);\n}\n\nfunction deepCopy(object) {\n  return _deepCopy(object);\n}\n\nclass Description {\n  constructor(info) {\n    for (const key in info) {\n      this[key] = deepCopy(info[key]);\n    }\n  }\n\n}\n\nconst version$4 = \"abi/5.0.7\";\nconst logger$4 = new Logger(version$4);\nconst _constructorGuard$2 = {};\nlet ModifiersBytes = {\n  calldata: true,\n  memory: true,\n  storage: true\n};\nlet ModifiersNest = {\n  calldata: true,\n  memory: true\n};\n\nfunction checkModifier(type, name) {\n  if (type === \"bytes\" || type === \"string\") {\n    if (ModifiersBytes[name]) {\n      return true;\n    }\n  } else if (type === \"address\") {\n    if (name === \"payable\") {\n      return true;\n    }\n  } else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n    if (ModifiersNest[name]) {\n      return true;\n    }\n  }\n\n  if (ModifiersBytes[name] || name === \"payable\") {\n    logger$4.throwArgumentError(\"invalid modifier\", \"name\", name);\n  }\n\n  return false;\n} // @TODO: Make sure that children of an indexed tuple are marked with a null indexed\n\n\nfunction parseParamType(param, allowIndexed) {\n  let originalParam = param;\n\n  function throwError(i) {\n    logger$4.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n  }\n\n  param = param.replace(/\\s/g, \" \");\n\n  function newNode(parent) {\n    let node = {\n      type: \"\",\n      name: \"\",\n      parent: parent,\n      state: {\n        allowType: true\n      }\n    };\n\n    if (allowIndexed) {\n      node.indexed = false;\n    }\n\n    return node;\n  }\n\n  let parent = {\n    type: \"\",\n    name: \"\",\n    state: {\n      allowType: true\n    }\n  };\n  let node = parent;\n\n  for (let i = 0; i < param.length; i++) {\n    let c = param[i];\n\n    switch (c) {\n      case \"(\":\n        if (node.state.allowType && node.type === \"\") {\n          node.type = \"tuple\";\n        } else if (!node.state.allowParams) {\n          throwError(i);\n        }\n\n        node.state.allowType = false;\n        node.type = verifyType(node.type);\n        node.components = [newNode(node)];\n        node = node.components[0];\n        break;\n\n      case \")\":\n        delete node.state;\n\n        if (node.name === \"indexed\") {\n          if (!allowIndexed) {\n            throwError(i);\n          }\n\n          node.indexed = true;\n          node.name = \"\";\n        }\n\n        if (checkModifier(node.type, node.name)) {\n          node.name = \"\";\n        }\n\n        node.type = verifyType(node.type);\n        let child = node;\n        node = node.parent;\n\n        if (!node) {\n          throwError(i);\n        }\n\n        delete child.parent;\n        node.state.allowParams = false;\n        node.state.allowName = true;\n        node.state.allowArray = true;\n        break;\n\n      case \",\":\n        delete node.state;\n\n        if (node.name === \"indexed\") {\n          if (!allowIndexed) {\n            throwError(i);\n          }\n\n          node.indexed = true;\n          node.name = \"\";\n        }\n\n        if (checkModifier(node.type, node.name)) {\n          node.name = \"\";\n        }\n\n        node.type = verifyType(node.type);\n        let sibling = newNode(node.parent); //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n\n        node.parent.components.push(sibling);\n        delete node.parent;\n        node = sibling;\n        break;\n      // Hit a space...\n\n      case \" \":\n        // If reading type, the type is done and may read a param or name\n        if (node.state.allowType) {\n          if (node.type !== \"\") {\n            node.type = verifyType(node.type);\n            delete node.state.allowType;\n            node.state.allowName = true;\n            node.state.allowParams = true;\n          }\n        } // If reading name, the name is done\n\n\n        if (node.state.allowName) {\n          if (node.name !== \"\") {\n            if (node.name === \"indexed\") {\n              if (!allowIndexed) {\n                throwError(i);\n              }\n\n              if (node.indexed) {\n                throwError(i);\n              }\n\n              node.indexed = true;\n              node.name = \"\";\n            } else if (checkModifier(node.type, node.name)) {\n              node.name = \"\";\n            } else {\n              node.state.allowName = false;\n            }\n          }\n        }\n\n        break;\n\n      case \"[\":\n        if (!node.state.allowArray) {\n          throwError(i);\n        }\n\n        node.type += c;\n        node.state.allowArray = false;\n        node.state.allowName = false;\n        node.state.readArray = true;\n        break;\n\n      case \"]\":\n        if (!node.state.readArray) {\n          throwError(i);\n        }\n\n        node.type += c;\n        node.state.readArray = false;\n        node.state.allowArray = true;\n        node.state.allowName = true;\n        break;\n\n      default:\n        if (node.state.allowType) {\n          node.type += c;\n          node.state.allowParams = true;\n          node.state.allowArray = true;\n        } else if (node.state.allowName) {\n          node.name += c;\n          delete node.state.allowArray;\n        } else if (node.state.readArray) {\n          node.type += c;\n        } else {\n          throwError(i);\n        }\n\n    }\n  }\n\n  if (node.parent) {\n    logger$4.throwArgumentError(\"unexpected eof\", \"param\", param);\n  }\n\n  delete parent.state;\n\n  if (node.name === \"indexed\") {\n    if (!allowIndexed) {\n      throwError(originalParam.length - 7);\n    }\n\n    if (node.indexed) {\n      throwError(originalParam.length - 7);\n    }\n\n    node.indexed = true;\n    node.name = \"\";\n  } else if (checkModifier(node.type, node.name)) {\n    node.name = \"\";\n  }\n\n  parent.type = verifyType(parent.type);\n  return parent;\n}\n\nfunction populate(object, params) {\n  for (let key in params) {\n    defineReadOnly(object, key, params[key]);\n  }\n}\n\nconst FormatTypes = Object.freeze({\n  // Bare formatting, as is needed for computing a sighash of an event or function\n  sighash: \"sighash\",\n  // Human-Readable with Minimal spacing and without names (compact human-readable)\n  minimal: \"minimal\",\n  // Human-Readble with nice spacing, including all names\n  full: \"full\",\n  // JSON-format a la Solidity\n  json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nclass ParamType {\n  constructor(constructorGuard, params) {\n    if (constructorGuard !== _constructorGuard$2) {\n      logger$4.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new ParamType()\"\n      });\n    }\n\n    populate(this, params);\n    let match = this.type.match(paramTypeArray);\n\n    if (match) {\n      populate(this, {\n        arrayLength: parseInt(match[2] || \"-1\"),\n        arrayChildren: ParamType.fromObject({\n          type: match[1],\n          components: this.components\n        }),\n        baseType: \"array\"\n      });\n    } else {\n      populate(this, {\n        arrayLength: null,\n        arrayChildren: null,\n        baseType: this.components != null ? \"tuple\" : this.type\n      });\n    }\n\n    this._isParamType = true;\n    Object.freeze(this);\n  } // Format the parameter fragment\n  //   - sighash: \"(uint256,address)\"\n  //   - minimal: \"tuple(uint256,address) indexed\"\n  //   - full:    \"tuple(uint256 foo, addres bar) indexed baz\"\n\n\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      let result = {\n        type: this.baseType === \"tuple\" ? \"tuple\" : this.type,\n        name: this.name || undefined\n      };\n\n      if (typeof this.indexed === \"boolean\") {\n        result.indexed = this.indexed;\n      }\n\n      if (this.components) {\n        result.components = this.components.map(comp => JSON.parse(comp.format(format)));\n      }\n\n      return JSON.stringify(result);\n    }\n\n    let result = \"\"; // Array\n\n    if (this.baseType === \"array\") {\n      result += this.arrayChildren.format(format);\n      result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n    } else {\n      if (this.baseType === \"tuple\") {\n        if (format !== FormatTypes.sighash) {\n          result += this.type;\n        }\n\n        result += \"(\" + this.components.map(comp => comp.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \")\";\n      } else {\n        result += this.type;\n      }\n    }\n\n    if (format !== FormatTypes.sighash) {\n      if (this.indexed === true) {\n        result += \" indexed\";\n      }\n\n      if (format === FormatTypes.full && this.name) {\n        result += \" \" + this.name;\n      }\n    }\n\n    return result;\n  }\n\n  static from(value, allowIndexed) {\n    if (typeof value === \"string\") {\n      return ParamType.fromString(value, allowIndexed);\n    }\n\n    return ParamType.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (ParamType.isParamType(value)) {\n      return value;\n    }\n\n    return new ParamType(_constructorGuard$2, {\n      name: value.name || null,\n      type: verifyType(value.type),\n      indexed: value.indexed == null ? null : !!value.indexed,\n      components: value.components ? value.components.map(ParamType.fromObject) : null\n    });\n  }\n\n  static fromString(value, allowIndexed) {\n    function ParamTypify(node) {\n      return ParamType.fromObject({\n        name: node.name,\n        type: node.type,\n        indexed: node.indexed,\n        components: node.components\n      });\n    }\n\n    return ParamTypify(parseParamType(value, !!allowIndexed));\n  }\n\n  static isParamType(value) {\n    return !!(value != null && value._isParamType);\n  }\n\n}\n\nfunction parseParams(value, allowIndex) {\n  return splitNesting(value).map(param => ParamType.fromString(param, allowIndex));\n}\n\nclass Fragment {\n  constructor(constructorGuard, params) {\n    if (constructorGuard !== _constructorGuard$2) {\n      logger$4.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new Fragment()\"\n      });\n    }\n\n    populate(this, params);\n    this._isFragment = true;\n    Object.freeze(this);\n  }\n\n  static from(value) {\n    if (Fragment.isFragment(value)) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      return Fragment.fromString(value);\n    }\n\n    return Fragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (Fragment.isFragment(value)) {\n      return value;\n    }\n\n    switch (value.type) {\n      case \"function\":\n        return FunctionFragment.fromObject(value);\n\n      case \"event\":\n        return EventFragment.fromObject(value);\n\n      case \"constructor\":\n        return ConstructorFragment.fromObject(value);\n\n      case \"fallback\":\n      case \"receive\":\n        // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n        return null;\n    }\n\n    return logger$4.throwArgumentError(\"invalid fragment object\", \"value\", value);\n  }\n\n  static fromString(value) {\n    // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n    value = value.replace(/\\s/g, \" \");\n    value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n    value = value.trim();\n\n    if (value.split(\" \")[0] === \"event\") {\n      return EventFragment.fromString(value.substring(5).trim());\n    } else if (value.split(\" \")[0] === \"function\") {\n      return FunctionFragment.fromString(value.substring(8).trim());\n    } else if (value.split(\"(\")[0].trim() === \"constructor\") {\n      return ConstructorFragment.fromString(value.trim());\n    }\n\n    return logger$4.throwArgumentError(\"unsupported fragment\", \"value\", value);\n  }\n\n  static isFragment(value) {\n    return !!(value && value._isFragment);\n  }\n\n}\n\nclass EventFragment extends Fragment {\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      return JSON.stringify({\n        type: \"event\",\n        anonymous: this.anonymous,\n        name: this.name,\n        inputs: this.inputs.map(input => JSON.parse(input.format(format)))\n      });\n    }\n\n    let result = \"\";\n\n    if (format !== FormatTypes.sighash) {\n      result += \"event \";\n    }\n\n    result += this.name + \"(\" + this.inputs.map(input => input.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \") \";\n\n    if (format !== FormatTypes.sighash) {\n      if (this.anonymous) {\n        result += \"anonymous \";\n      }\n    }\n\n    return result.trim();\n  }\n\n  static from(value) {\n    if (typeof value === \"string\") {\n      return EventFragment.fromString(value);\n    }\n\n    return EventFragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (EventFragment.isEventFragment(value)) {\n      return value;\n    }\n\n    if (value.type !== \"event\") {\n      logger$4.throwArgumentError(\"invalid event object\", \"value\", value);\n    }\n\n    const params = {\n      name: verifyIdentifier(value.name),\n      anonymous: value.anonymous,\n      inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],\n      type: \"event\"\n    };\n    return new EventFragment(_constructorGuard$2, params);\n  }\n\n  static fromString(value) {\n    let match = value.match(regexParen);\n\n    if (!match) {\n      logger$4.throwArgumentError(\"invalid event string\", \"value\", value);\n    }\n\n    let anonymous = false;\n    match[3].split(\" \").forEach(modifier => {\n      switch (modifier.trim()) {\n        case \"anonymous\":\n          anonymous = true;\n          break;\n\n        case \"\":\n          break;\n\n        default:\n          logger$4.warn(\"unknown modifier: \" + modifier);\n      }\n    });\n    return EventFragment.fromObject({\n      name: match[1].trim(),\n      anonymous: anonymous,\n      inputs: parseParams(match[2], true),\n      type: \"event\"\n    });\n  }\n\n  static isEventFragment(value) {\n    return value && value._isFragment && value.type === \"event\";\n  }\n\n}\n\nfunction parseGas(value, params) {\n  params.gas = null;\n  let comps = value.split(\"@\");\n\n  if (comps.length !== 1) {\n    if (comps.length > 2) {\n      logger$4.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n    }\n\n    if (!comps[1].match(/^[0-9]+$/)) {\n      logger$4.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n    }\n\n    params.gas = BigNumber.from(comps[1]);\n    return comps[0];\n  }\n\n  return value;\n}\n\nfunction parseModifiers(value, params) {\n  params.constant = false;\n  params.payable = false;\n  params.stateMutability = \"nonpayable\";\n  value.split(\" \").forEach(modifier => {\n    switch (modifier.trim()) {\n      case \"constant\":\n        params.constant = true;\n        break;\n\n      case \"payable\":\n        params.payable = true;\n        params.stateMutability = \"payable\";\n        break;\n\n      case \"nonpayable\":\n        params.payable = false;\n        params.stateMutability = \"nonpayable\";\n        break;\n\n      case \"pure\":\n        params.constant = true;\n        params.stateMutability = \"pure\";\n        break;\n\n      case \"view\":\n        params.constant = true;\n        params.stateMutability = \"view\";\n        break;\n\n      case \"external\":\n      case \"public\":\n      case \"\":\n        break;\n\n      default:\n        console.log(\"unknown modifier: \" + modifier);\n    }\n  });\n}\n\nfunction verifyState(value) {\n  let result = {\n    constant: false,\n    payable: true,\n    stateMutability: \"payable\"\n  };\n\n  if (value.stateMutability != null) {\n    result.stateMutability = value.stateMutability; // Set (and check things are consistent) the constant property\n\n    result.constant = result.stateMutability === \"view\" || result.stateMutability === \"pure\";\n\n    if (value.constant != null) {\n      if (!!value.constant !== result.constant) {\n        logger$4.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n      }\n    } // Set (and check things are consistent) the payable property\n\n\n    result.payable = result.stateMutability === \"payable\";\n\n    if (value.payable != null) {\n      if (!!value.payable !== result.payable) {\n        logger$4.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n      }\n    }\n  } else if (value.payable != null) {\n    result.payable = !!value.payable; // If payable we can assume non-constant; otherwise we can't assume\n\n    if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n      logger$4.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n\n    result.constant = !!value.constant;\n\n    if (result.constant) {\n      result.stateMutability = \"view\";\n    } else {\n      result.stateMutability = result.payable ? \"payable\" : \"nonpayable\";\n    }\n\n    if (result.payable && result.constant) {\n      logger$4.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n    }\n  } else if (value.constant != null) {\n    result.constant = !!value.constant;\n    result.payable = !result.constant;\n    result.stateMutability = result.constant ? \"view\" : \"payable\";\n  } else if (value.type !== \"constructor\") {\n    logger$4.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n  }\n\n  return result;\n}\n\nclass ConstructorFragment extends Fragment {\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      return JSON.stringify({\n        type: \"constructor\",\n        stateMutability: this.stateMutability !== \"nonpayable\" ? this.stateMutability : undefined,\n        payble: this.payable,\n        gas: this.gas ? this.gas.toNumber() : undefined,\n        inputs: this.inputs.map(input => JSON.parse(input.format(format)))\n      });\n    }\n\n    if (format === FormatTypes.sighash) {\n      logger$4.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"format(sighash)\"\n      });\n    }\n\n    let result = \"constructor(\" + this.inputs.map(input => input.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \") \";\n\n    if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n      result += this.stateMutability + \" \";\n    }\n\n    return result.trim();\n  }\n\n  static from(value) {\n    if (typeof value === \"string\") {\n      return ConstructorFragment.fromString(value);\n    }\n\n    return ConstructorFragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (ConstructorFragment.isConstructorFragment(value)) {\n      return value;\n    }\n\n    if (value.type !== \"constructor\") {\n      logger$4.throwArgumentError(\"invalid constructor object\", \"value\", value);\n    }\n\n    let state = verifyState(value);\n\n    if (state.constant) {\n      logger$4.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n    }\n\n    const params = {\n      name: null,\n      type: value.type,\n      inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],\n      payable: state.payable,\n      stateMutability: state.stateMutability,\n      gas: value.gas ? BigNumber.from(value.gas) : null\n    };\n    return new ConstructorFragment(_constructorGuard$2, params);\n  }\n\n  static fromString(value) {\n    let params = {\n      type: \"constructor\"\n    };\n    value = parseGas(value, params);\n    let parens = value.match(regexParen);\n\n    if (!parens || parens[1].trim() !== \"constructor\") {\n      logger$4.throwArgumentError(\"invalid constructor string\", \"value\", value);\n    }\n\n    params.inputs = parseParams(parens[2].trim(), false);\n    parseModifiers(parens[3].trim(), params);\n    return ConstructorFragment.fromObject(params);\n  }\n\n  static isConstructorFragment(value) {\n    return value && value._isFragment && value.type === \"constructor\";\n  }\n\n}\n\nclass FunctionFragment extends ConstructorFragment {\n  format(format) {\n    if (!format) {\n      format = FormatTypes.sighash;\n    }\n\n    if (!FormatTypes[format]) {\n      logger$4.throwArgumentError(\"invalid format type\", \"format\", format);\n    }\n\n    if (format === FormatTypes.json) {\n      return JSON.stringify({\n        type: \"function\",\n        name: this.name,\n        constant: this.constant,\n        stateMutability: this.stateMutability !== \"nonpayable\" ? this.stateMutability : undefined,\n        payble: this.payable,\n        gas: this.gas ? this.gas.toNumber() : undefined,\n        inputs: this.inputs.map(input => JSON.parse(input.format(format))),\n        ouputs: this.outputs.map(output => JSON.parse(output.format(format)))\n      });\n    }\n\n    let result = \"\";\n\n    if (format !== FormatTypes.sighash) {\n      result += \"function \";\n    }\n\n    result += this.name + \"(\" + this.inputs.map(input => input.format(format)).join(format === FormatTypes.full ? \", \" : \",\") + \") \";\n\n    if (format !== FormatTypes.sighash) {\n      if (this.stateMutability) {\n        if (this.stateMutability !== \"nonpayable\") {\n          result += this.stateMutability + \" \";\n        }\n      } else if (this.constant) {\n        result += \"view \";\n      }\n\n      if (this.outputs && this.outputs.length) {\n        result += \"returns (\" + this.outputs.map(output => output.format(format)).join(\", \") + \") \";\n      }\n\n      if (this.gas != null) {\n        result += \"@\" + this.gas.toString() + \" \";\n      }\n    }\n\n    return result.trim();\n  }\n\n  static from(value) {\n    if (typeof value === \"string\") {\n      return FunctionFragment.fromString(value);\n    }\n\n    return FunctionFragment.fromObject(value);\n  }\n\n  static fromObject(value) {\n    if (FunctionFragment.isFunctionFragment(value)) {\n      return value;\n    }\n\n    if (value.type !== \"function\") {\n      logger$4.throwArgumentError(\"invalid function object\", \"value\", value);\n    }\n\n    let state = verifyState(value);\n    const params = {\n      type: value.type,\n      name: verifyIdentifier(value.name),\n      constant: state.constant,\n      inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],\n      outputs: value.outputs ? value.outputs.map(ParamType.fromObject) : [],\n      payable: state.payable,\n      stateMutability: state.stateMutability,\n      gas: value.gas ? BigNumber.from(value.gas) : null\n    };\n    return new FunctionFragment(_constructorGuard$2, params);\n  }\n\n  static fromString(value) {\n    let params = {\n      type: \"function\"\n    };\n    value = parseGas(value, params);\n    let comps = value.split(\" returns \");\n\n    if (comps.length > 2) {\n      logger$4.throwArgumentError(\"invalid function string\", \"value\", value);\n    }\n\n    let parens = comps[0].match(regexParen);\n\n    if (!parens) {\n      logger$4.throwArgumentError(\"invalid function signature\", \"value\", value);\n    }\n\n    params.name = parens[1].trim();\n\n    if (params.name) {\n      verifyIdentifier(params.name);\n    }\n\n    params.inputs = parseParams(parens[2], false);\n    parseModifiers(parens[3].trim(), params); // We have outputs\n\n    if (comps.length > 1) {\n      let returns = comps[1].match(regexParen);\n\n      if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n        logger$4.throwArgumentError(\"unexpected tokens\", \"value\", value);\n      }\n\n      params.outputs = parseParams(returns[2], false);\n    } else {\n      params.outputs = [];\n    }\n\n    return FunctionFragment.fromObject(params);\n  }\n\n  static isFunctionFragment(value) {\n    return value && value._isFragment && value.type === \"function\";\n  }\n\n} //export class ErrorFragment extends Fragment {\n//}\n//export class StructFragment extends Fragment {\n//}\n\n\nfunction verifyType(type) {\n  // These need to be transformed to their full description\n  if (type.match(/^uint($|[^1-9])/)) {\n    type = \"uint256\" + type.substring(4);\n  } else if (type.match(/^int($|[^1-9])/)) {\n    type = \"int256\" + type.substring(3);\n  } // @TODO: more verification\n\n\n  return type;\n}\n\nconst regexIdentifier = new RegExp(\"^[A-Za-z_][A-Za-z0-9_]*$\");\n\nfunction verifyIdentifier(value) {\n  if (!value || !value.match(regexIdentifier)) {\n    logger$4.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n  }\n\n  return value;\n}\n\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\n\nfunction splitNesting(value) {\n  value = value.trim();\n  let result = [];\n  let accum = \"\";\n  let depth = 0;\n\n  for (let offset = 0; offset < value.length; offset++) {\n    let c = value[offset];\n\n    if (c === \",\" && depth === 0) {\n      result.push(accum);\n      accum = \"\";\n    } else {\n      accum += c;\n\n      if (c === \"(\") {\n        depth++;\n      } else if (c === \")\") {\n        depth--;\n\n        if (depth === -1) {\n          logger$4.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n        }\n      }\n    }\n  }\n\n  if (accum) {\n    result.push(accum);\n  }\n\n  return result;\n}\n\nconst logger$5 = new Logger(version$4);\n\nfunction checkResultErrors(result) {\n  // Find the first error (if any)\n  const errors = [];\n\n  const checkErrors = function (path, object) {\n    if (!Array.isArray(object)) {\n      return;\n    }\n\n    for (let key in object) {\n      const childPath = path.slice();\n      childPath.push(key);\n\n      try {\n        checkErrors(childPath, object[key]);\n      } catch (error) {\n        errors.push({\n          path: childPath,\n          error: error\n        });\n      }\n    }\n  };\n\n  checkErrors([], result);\n  return errors;\n}\n\nclass Coder {\n  constructor(name, type, localName, dynamic) {\n    // @TODO: defineReadOnly these\n    this.name = name;\n    this.type = type;\n    this.localName = localName;\n    this.dynamic = dynamic;\n  }\n\n  _throwError(message, value) {\n    logger$5.throwArgumentError(message, this.localName, value);\n  }\n\n}\n\nclass Writer {\n  constructor(wordSize) {\n    defineReadOnly(this, \"wordSize\", wordSize || 32);\n    this._data = [];\n    this._dataLength = 0;\n    this._padding = new Uint8Array(wordSize);\n  }\n\n  get data() {\n    return hexConcat(this._data);\n  }\n\n  get length() {\n    return this._dataLength;\n  }\n\n  _writeData(data) {\n    this._data.push(data);\n\n    this._dataLength += data.length;\n    return data.length;\n  }\n\n  appendWriter(writer) {\n    return this._writeData(concat(writer._data));\n  } // Arrayish items; padded on the right to wordSize\n\n\n  writeBytes(value) {\n    let bytes = arrayify(value);\n    const paddingOffset = bytes.length % this.wordSize;\n\n    if (paddingOffset) {\n      bytes = concat([bytes, this._padding.slice(paddingOffset)]);\n    }\n\n    return this._writeData(bytes);\n  }\n\n  _getValue(value) {\n    let bytes = arrayify(BigNumber.from(value));\n\n    if (bytes.length > this.wordSize) {\n      logger$5.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n        length: this.wordSize,\n        offset: bytes.length\n      });\n    }\n\n    if (bytes.length % this.wordSize) {\n      bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n    }\n\n    return bytes;\n  } // BigNumberish items; padded on the left to wordSize\n\n\n  writeValue(value) {\n    return this._writeData(this._getValue(value));\n  }\n\n  writeUpdatableValue() {\n    const offset = this._data.length;\n\n    this._data.push(this._padding);\n\n    this._dataLength += this.wordSize;\n    return value => {\n      this._data[offset] = this._getValue(value);\n    };\n  }\n\n}\n\nclass Reader {\n  constructor(data, wordSize, coerceFunc, allowLoose) {\n    defineReadOnly(this, \"_data\", arrayify(data));\n    defineReadOnly(this, \"wordSize\", wordSize || 32);\n    defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n    defineReadOnly(this, \"allowLoose\", allowLoose);\n    this._offset = 0;\n  }\n\n  get data() {\n    return hexlify(this._data);\n  }\n\n  get consumed() {\n    return this._offset;\n  } // The default Coerce function\n\n\n  static coerce(name, value) {\n    let match = name.match(\"^u?int([0-9]+)$\");\n\n    if (match && parseInt(match[1]) <= 48) {\n      value = value.toNumber();\n    }\n\n    return value;\n  }\n\n  coerce(name, value) {\n    if (this._coerceFunc) {\n      return this._coerceFunc(name, value);\n    }\n\n    return Reader.coerce(name, value);\n  }\n\n  _peekBytes(offset, length, loose) {\n    let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n\n    if (this._offset + alignedLength > this._data.length) {\n      if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n        alignedLength = length;\n      } else {\n        logger$5.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n          length: this._data.length,\n          offset: this._offset + alignedLength\n        });\n      }\n    }\n\n    return this._data.slice(this._offset, this._offset + alignedLength);\n  }\n\n  subReader(offset) {\n    return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n  }\n\n  readBytes(length, loose) {\n    let bytes = this._peekBytes(0, length, !!loose);\n\n    this._offset += bytes.length; // @TODO: Make sure the length..end bytes are all 0?\n\n    return bytes.slice(0, length);\n  }\n\n  readValue() {\n    return BigNumber.from(this.readBytes(this.wordSize));\n  }\n\n}\n\nvar sha3 = createCommonjsModule(function (module) {\n  /**\r\n   * [js-sha3]{@link https://github.com/emn178/js-sha3}\r\n   *\r\n   * @version 0.5.7\r\n   * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n   * @copyright Chen, Yi-Cyuan 2015-2016\r\n   * @license MIT\r\n   */\n\n  /*jslint bitwise: true */\n  (function () {\n    var root = typeof window === 'object' ? window : {};\n    var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n\n    if (NODE_JS) {\n      root = commonjsGlobal;\n    }\n\n    var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && 'object' === 'object' && module.exports;\n    var HEX_CHARS = '0123456789abcdef'.split('');\n    var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n    var KECCAK_PADDING = [1, 256, 65536, 16777216];\n    var PADDING = [6, 1536, 393216, 100663296];\n    var SHIFT = [0, 8, 16, 24];\n    var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n    var BITS = [224, 256, 384, 512];\n    var SHAKE_BITS = [128, 256];\n    var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array'];\n\n    var createOutputMethod = function (bits, padding, outputType) {\n      return function (message) {\n        return new Keccak(bits, padding, bits).update(message)[outputType]();\n      };\n    };\n\n    var createShakeOutputMethod = function (bits, padding, outputType) {\n      return function (message, outputBits) {\n        return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n      };\n    };\n\n    var createMethod = function (bits, padding) {\n      var method = createOutputMethod(bits, padding, 'hex');\n\n      method.create = function () {\n        return new Keccak(bits, padding, bits);\n      };\n\n      method.update = function (message) {\n        return method.create().update(message);\n      };\n\n      for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n        var type = OUTPUT_TYPES[i];\n        method[type] = createOutputMethod(bits, padding, type);\n      }\n\n      return method;\n    };\n\n    var createShakeMethod = function (bits, padding) {\n      var method = createShakeOutputMethod(bits, padding, 'hex');\n\n      method.create = function (outputBits) {\n        return new Keccak(bits, padding, outputBits);\n      };\n\n      method.update = function (message, outputBits) {\n        return method.create(outputBits).update(message);\n      };\n\n      for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n        var type = OUTPUT_TYPES[i];\n        method[type] = createShakeOutputMethod(bits, padding, type);\n      }\n\n      return method;\n    };\n\n    var algorithms = [{\n      name: 'keccak',\n      padding: KECCAK_PADDING,\n      bits: BITS,\n      createMethod: createMethod\n    }, {\n      name: 'sha3',\n      padding: PADDING,\n      bits: BITS,\n      createMethod: createMethod\n    }, {\n      name: 'shake',\n      padding: SHAKE_PADDING,\n      bits: SHAKE_BITS,\n      createMethod: createShakeMethod\n    }];\n    var methods = {},\n        methodNames = [];\n\n    for (var i = 0; i < algorithms.length; ++i) {\n      var algorithm = algorithms[i];\n      var bits = algorithm.bits;\n\n      for (var j = 0; j < bits.length; ++j) {\n        var methodName = algorithm.name + '_' + bits[j];\n        methodNames.push(methodName);\n        methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      }\n    }\n\n    function Keccak(bits, padding, outputBits) {\n      this.blocks = [];\n      this.s = [];\n      this.padding = padding;\n      this.outputBits = outputBits;\n      this.reset = true;\n      this.block = 0;\n      this.start = 0;\n      this.blockCount = 1600 - (bits << 1) >> 5;\n      this.byteCount = this.blockCount << 2;\n      this.outputBlocks = outputBits >> 5;\n      this.extraBytes = (outputBits & 31) >> 3;\n\n      for (var i = 0; i < 50; ++i) {\n        this.s[i] = 0;\n      }\n    }\n\n    Keccak.prototype.update = function (message) {\n      var notString = typeof message !== 'string';\n\n      if (notString && message.constructor === ArrayBuffer) {\n        message = new Uint8Array(message);\n      }\n\n      var length = message.length,\n          blocks = this.blocks,\n          byteCount = this.byteCount,\n          blockCount = this.blockCount,\n          index = 0,\n          s = this.s,\n          i,\n          code;\n\n      while (index < length) {\n        if (this.reset) {\n          this.reset = false;\n          blocks[0] = this.block;\n\n          for (i = 1; i < blockCount + 1; ++i) {\n            blocks[i] = 0;\n          }\n        }\n\n        if (notString) {\n          for (i = this.start; index < length && i < byteCount; ++index) {\n            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n          }\n        } else {\n          for (i = this.start; index < length && i < byteCount; ++index) {\n            code = message.charCodeAt(index);\n\n            if (code < 0x80) {\n              blocks[i >> 2] |= code << SHIFT[i++ & 3];\n            } else if (code < 0x800) {\n              blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n            } else if (code < 0xd800 || code >= 0xe000) {\n              blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n            } else {\n              code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n              blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n            }\n          }\n        }\n\n        this.lastByteIndex = i;\n\n        if (i >= byteCount) {\n          this.start = i - byteCount;\n          this.block = blocks[blockCount];\n\n          for (i = 0; i < blockCount; ++i) {\n            s[i] ^= blocks[i];\n          }\n\n          f(s);\n          this.reset = true;\n        } else {\n          this.start = i;\n        }\n      }\n\n      return this;\n    };\n\n    Keccak.prototype.finalize = function () {\n      var blocks = this.blocks,\n          i = this.lastByteIndex,\n          blockCount = this.blockCount,\n          s = this.s;\n      blocks[i >> 2] |= this.padding[i & 3];\n\n      if (this.lastByteIndex === this.byteCount) {\n        blocks[0] = blocks[blockCount];\n\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n\n      blocks[blockCount - 1] |= 0x80000000;\n\n      for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n      }\n\n      f(s);\n    };\n\n    Keccak.prototype.toString = Keccak.prototype.hex = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n          s = this.s,\n          outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes,\n          i = 0,\n          j = 0;\n      var hex = '',\n          block;\n\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          block = s[i];\n          hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n        }\n\n        if (j % blockCount === 0) {\n          f(s);\n          i = 0;\n        }\n      }\n\n      if (extraBytes) {\n        block = s[i];\n\n        if (extraBytes > 0) {\n          hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F];\n        }\n\n        if (extraBytes > 1) {\n          hex += HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F];\n        }\n\n        if (extraBytes > 2) {\n          hex += HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F];\n        }\n      }\n\n      return hex;\n    };\n\n    Keccak.prototype.arrayBuffer = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n          s = this.s,\n          outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes,\n          i = 0,\n          j = 0;\n      var bytes = this.outputBits >> 3;\n      var buffer;\n\n      if (extraBytes) {\n        buffer = new ArrayBuffer(outputBlocks + 1 << 2);\n      } else {\n        buffer = new ArrayBuffer(bytes);\n      }\n\n      var array = new Uint32Array(buffer);\n\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          array[j] = s[i];\n        }\n\n        if (j % blockCount === 0) {\n          f(s);\n        }\n      }\n\n      if (extraBytes) {\n        array[i] = s[i];\n        buffer = buffer.slice(0, bytes);\n      }\n\n      return buffer;\n    };\n\n    Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n    Keccak.prototype.digest = Keccak.prototype.array = function () {\n      this.finalize();\n      var blockCount = this.blockCount,\n          s = this.s,\n          outputBlocks = this.outputBlocks,\n          extraBytes = this.extraBytes,\n          i = 0,\n          j = 0;\n      var array = [],\n          offset,\n          block;\n\n      while (j < outputBlocks) {\n        for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n          offset = j << 2;\n          block = s[i];\n          array[offset] = block & 0xFF;\n          array[offset + 1] = block >> 8 & 0xFF;\n          array[offset + 2] = block >> 16 & 0xFF;\n          array[offset + 3] = block >> 24 & 0xFF;\n        }\n\n        if (j % blockCount === 0) {\n          f(s);\n        }\n      }\n\n      if (extraBytes) {\n        offset = j << 2;\n        block = s[i];\n\n        if (extraBytes > 0) {\n          array[offset] = block & 0xFF;\n        }\n\n        if (extraBytes > 1) {\n          array[offset + 1] = block >> 8 & 0xFF;\n        }\n\n        if (extraBytes > 2) {\n          array[offset + 2] = block >> 16 & 0xFF;\n        }\n      }\n\n      return array;\n    };\n\n    var f = function (s) {\n      var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n      for (n = 0; n < 48; n += 2) {\n        c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n        c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n        c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n        c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n        c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n        c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n        c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n        c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n        c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n        c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n        h = c8 ^ (c2 << 1 | c3 >>> 31);\n        l = c9 ^ (c3 << 1 | c2 >>> 31);\n        s[0] ^= h;\n        s[1] ^= l;\n        s[10] ^= h;\n        s[11] ^= l;\n        s[20] ^= h;\n        s[21] ^= l;\n        s[30] ^= h;\n        s[31] ^= l;\n        s[40] ^= h;\n        s[41] ^= l;\n        h = c0 ^ (c4 << 1 | c5 >>> 31);\n        l = c1 ^ (c5 << 1 | c4 >>> 31);\n        s[2] ^= h;\n        s[3] ^= l;\n        s[12] ^= h;\n        s[13] ^= l;\n        s[22] ^= h;\n        s[23] ^= l;\n        s[32] ^= h;\n        s[33] ^= l;\n        s[42] ^= h;\n        s[43] ^= l;\n        h = c2 ^ (c6 << 1 | c7 >>> 31);\n        l = c3 ^ (c7 << 1 | c6 >>> 31);\n        s[4] ^= h;\n        s[5] ^= l;\n        s[14] ^= h;\n        s[15] ^= l;\n        s[24] ^= h;\n        s[25] ^= l;\n        s[34] ^= h;\n        s[35] ^= l;\n        s[44] ^= h;\n        s[45] ^= l;\n        h = c4 ^ (c8 << 1 | c9 >>> 31);\n        l = c5 ^ (c9 << 1 | c8 >>> 31);\n        s[6] ^= h;\n        s[7] ^= l;\n        s[16] ^= h;\n        s[17] ^= l;\n        s[26] ^= h;\n        s[27] ^= l;\n        s[36] ^= h;\n        s[37] ^= l;\n        s[46] ^= h;\n        s[47] ^= l;\n        h = c6 ^ (c0 << 1 | c1 >>> 31);\n        l = c7 ^ (c1 << 1 | c0 >>> 31);\n        s[8] ^= h;\n        s[9] ^= l;\n        s[18] ^= h;\n        s[19] ^= l;\n        s[28] ^= h;\n        s[29] ^= l;\n        s[38] ^= h;\n        s[39] ^= l;\n        s[48] ^= h;\n        s[49] ^= l;\n        b0 = s[0];\n        b1 = s[1];\n        b32 = s[11] << 4 | s[10] >>> 28;\n        b33 = s[10] << 4 | s[11] >>> 28;\n        b14 = s[20] << 3 | s[21] >>> 29;\n        b15 = s[21] << 3 | s[20] >>> 29;\n        b46 = s[31] << 9 | s[30] >>> 23;\n        b47 = s[30] << 9 | s[31] >>> 23;\n        b28 = s[40] << 18 | s[41] >>> 14;\n        b29 = s[41] << 18 | s[40] >>> 14;\n        b20 = s[2] << 1 | s[3] >>> 31;\n        b21 = s[3] << 1 | s[2] >>> 31;\n        b2 = s[13] << 12 | s[12] >>> 20;\n        b3 = s[12] << 12 | s[13] >>> 20;\n        b34 = s[22] << 10 | s[23] >>> 22;\n        b35 = s[23] << 10 | s[22] >>> 22;\n        b16 = s[33] << 13 | s[32] >>> 19;\n        b17 = s[32] << 13 | s[33] >>> 19;\n        b48 = s[42] << 2 | s[43] >>> 30;\n        b49 = s[43] << 2 | s[42] >>> 30;\n        b40 = s[5] << 30 | s[4] >>> 2;\n        b41 = s[4] << 30 | s[5] >>> 2;\n        b22 = s[14] << 6 | s[15] >>> 26;\n        b23 = s[15] << 6 | s[14] >>> 26;\n        b4 = s[25] << 11 | s[24] >>> 21;\n        b5 = s[24] << 11 | s[25] >>> 21;\n        b36 = s[34] << 15 | s[35] >>> 17;\n        b37 = s[35] << 15 | s[34] >>> 17;\n        b18 = s[45] << 29 | s[44] >>> 3;\n        b19 = s[44] << 29 | s[45] >>> 3;\n        b10 = s[6] << 28 | s[7] >>> 4;\n        b11 = s[7] << 28 | s[6] >>> 4;\n        b42 = s[17] << 23 | s[16] >>> 9;\n        b43 = s[16] << 23 | s[17] >>> 9;\n        b24 = s[26] << 25 | s[27] >>> 7;\n        b25 = s[27] << 25 | s[26] >>> 7;\n        b6 = s[36] << 21 | s[37] >>> 11;\n        b7 = s[37] << 21 | s[36] >>> 11;\n        b38 = s[47] << 24 | s[46] >>> 8;\n        b39 = s[46] << 24 | s[47] >>> 8;\n        b30 = s[8] << 27 | s[9] >>> 5;\n        b31 = s[9] << 27 | s[8] >>> 5;\n        b12 = s[18] << 20 | s[19] >>> 12;\n        b13 = s[19] << 20 | s[18] >>> 12;\n        b44 = s[29] << 7 | s[28] >>> 25;\n        b45 = s[28] << 7 | s[29] >>> 25;\n        b26 = s[38] << 8 | s[39] >>> 24;\n        b27 = s[39] << 8 | s[38] >>> 24;\n        b8 = s[48] << 14 | s[49] >>> 18;\n        b9 = s[49] << 14 | s[48] >>> 18;\n        s[0] = b0 ^ ~b2 & b4;\n        s[1] = b1 ^ ~b3 & b5;\n        s[10] = b10 ^ ~b12 & b14;\n        s[11] = b11 ^ ~b13 & b15;\n        s[20] = b20 ^ ~b22 & b24;\n        s[21] = b21 ^ ~b23 & b25;\n        s[30] = b30 ^ ~b32 & b34;\n        s[31] = b31 ^ ~b33 & b35;\n        s[40] = b40 ^ ~b42 & b44;\n        s[41] = b41 ^ ~b43 & b45;\n        s[2] = b2 ^ ~b4 & b6;\n        s[3] = b3 ^ ~b5 & b7;\n        s[12] = b12 ^ ~b14 & b16;\n        s[13] = b13 ^ ~b15 & b17;\n        s[22] = b22 ^ ~b24 & b26;\n        s[23] = b23 ^ ~b25 & b27;\n        s[32] = b32 ^ ~b34 & b36;\n        s[33] = b33 ^ ~b35 & b37;\n        s[42] = b42 ^ ~b44 & b46;\n        s[43] = b43 ^ ~b45 & b47;\n        s[4] = b4 ^ ~b6 & b8;\n        s[5] = b5 ^ ~b7 & b9;\n        s[14] = b14 ^ ~b16 & b18;\n        s[15] = b15 ^ ~b17 & b19;\n        s[24] = b24 ^ ~b26 & b28;\n        s[25] = b25 ^ ~b27 & b29;\n        s[34] = b34 ^ ~b36 & b38;\n        s[35] = b35 ^ ~b37 & b39;\n        s[44] = b44 ^ ~b46 & b48;\n        s[45] = b45 ^ ~b47 & b49;\n        s[6] = b6 ^ ~b8 & b0;\n        s[7] = b7 ^ ~b9 & b1;\n        s[16] = b16 ^ ~b18 & b10;\n        s[17] = b17 ^ ~b19 & b11;\n        s[26] = b26 ^ ~b28 & b20;\n        s[27] = b27 ^ ~b29 & b21;\n        s[36] = b36 ^ ~b38 & b30;\n        s[37] = b37 ^ ~b39 & b31;\n        s[46] = b46 ^ ~b48 & b40;\n        s[47] = b47 ^ ~b49 & b41;\n        s[8] = b8 ^ ~b0 & b2;\n        s[9] = b9 ^ ~b1 & b3;\n        s[18] = b18 ^ ~b10 & b12;\n        s[19] = b19 ^ ~b11 & b13;\n        s[28] = b28 ^ ~b20 & b22;\n        s[29] = b29 ^ ~b21 & b23;\n        s[38] = b38 ^ ~b30 & b32;\n        s[39] = b39 ^ ~b31 & b33;\n        s[48] = b48 ^ ~b40 & b42;\n        s[49] = b49 ^ ~b41 & b43;\n        s[0] ^= RC[n];\n        s[1] ^= RC[n + 1];\n      }\n    };\n\n    if (COMMON_JS) {\n      module.exports = methods;\n    } else {\n      for (var i = 0; i < methodNames.length; ++i) {\n        root[methodNames[i]] = methods[methodNames[i]];\n      }\n    }\n  })();\n});\n\nfunction keccak256(data) {\n  return '0x' + sha3.keccak_256(arrayify(data));\n}\n\nconst version$5 = \"rlp/5.0.4\";\nconst logger$6 = new Logger(version$5);\n\nfunction arrayifyInteger(value) {\n  const result = [];\n\n  while (value) {\n    result.unshift(value & 0xff);\n    value >>= 8;\n  }\n\n  return result;\n}\n\nfunction _encode(object) {\n  if (Array.isArray(object)) {\n    let payload = [];\n    object.forEach(function (child) {\n      payload = payload.concat(_encode(child));\n    });\n\n    if (payload.length <= 55) {\n      payload.unshift(0xc0 + payload.length);\n      return payload;\n    }\n\n    const length = arrayifyInteger(payload.length);\n    length.unshift(0xf7 + length.length);\n    return length.concat(payload);\n  }\n\n  if (!isBytesLike(object)) {\n    logger$6.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n  }\n\n  const data = Array.prototype.slice.call(arrayify(object));\n\n  if (data.length === 1 && data[0] <= 0x7f) {\n    return data;\n  } else if (data.length <= 55) {\n    data.unshift(0x80 + data.length);\n    return data;\n  }\n\n  const length = arrayifyInteger(data.length);\n  length.unshift(0xb7 + length.length);\n  return length.concat(data);\n}\n\nfunction encode(object) {\n  return hexlify(_encode(object));\n}\n\nconst version$6 = \"address/5.0.5\";\nconst logger$7 = new Logger(version$6);\n\nfunction getChecksumAddress(address) {\n  if (!isHexString(address, 20)) {\n    logger$7.throwArgumentError(\"invalid address\", \"address\", address);\n  }\n\n  address = address.toLowerCase();\n  const chars = address.substring(2).split(\"\");\n  const expanded = new Uint8Array(40);\n\n  for (let i = 0; i < 40; i++) {\n    expanded[i] = chars[i].charCodeAt(0);\n  }\n\n  const hashed = arrayify(keccak256(expanded));\n\n  for (let i = 0; i < 40; i += 2) {\n    if (hashed[i >> 1] >> 4 >= 8) {\n      chars[i] = chars[i].toUpperCase();\n    }\n\n    if ((hashed[i >> 1] & 0x0f) >= 8) {\n      chars[i + 1] = chars[i + 1].toUpperCase();\n    }\n  }\n\n  return \"0x\" + chars.join(\"\");\n} // Shims for environments that are missing some required constants and functions\n\n\nconst MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction log10(x) {\n  if (Math.log10) {\n    return Math.log10(x);\n  }\n\n  return Math.log(x) / Math.LN10;\n} // See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\n\n\nconst ibanLookup = {};\n\nfor (let i = 0; i < 10; i++) {\n  ibanLookup[String(i)] = String(i);\n}\n\nfor (let i = 0; i < 26; i++) {\n  ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n} // How many decimal digits can we process? (for 64-bit float, this is 15)\n\n\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address) {\n  address = address.toUpperCase();\n  address = address.substring(4) + address.substring(0, 2) + \"00\";\n  let expanded = address.split(\"\").map(c => {\n    return ibanLookup[c];\n  }).join(\"\"); // Javascript can handle integers safely up to 15 (decimal) digits\n\n  while (expanded.length >= safeDigits) {\n    let block = expanded.substring(0, safeDigits);\n    expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n  }\n\n  let checksum = String(98 - parseInt(expanded, 10) % 97);\n\n  while (checksum.length < 2) {\n    checksum = \"0\" + checksum;\n  }\n\n  return checksum;\n}\n\nfunction getAddress(address) {\n  let result = null;\n\n  if (typeof address !== \"string\") {\n    logger$7.throwArgumentError(\"invalid address\", \"address\", address);\n  }\n\n  if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n    // Missing the 0x prefix\n    if (address.substring(0, 2) !== \"0x\") {\n      address = \"0x\" + address;\n    }\n\n    result = getChecksumAddress(address); // It is a checksummed address with a bad checksum\n\n    if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n      logger$7.throwArgumentError(\"bad address checksum\", \"address\", address);\n    } // Maybe ICAP? (we only support direct mode)\n\n  } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n    // It is an ICAP address with a bad checksum\n    if (address.substring(2, 4) !== ibanChecksum(address)) {\n      logger$7.throwArgumentError(\"bad icap checksum\", \"address\", address);\n    }\n\n    result = new bn.BN(address.substring(4), 36).toString(16);\n\n    while (result.length < 40) {\n      result = \"0\" + result;\n    }\n\n    result = getChecksumAddress(\"0x\" + result);\n  } else {\n    logger$7.throwArgumentError(\"invalid address\", \"address\", address);\n  }\n\n  return result;\n} // http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\n\n\nfunction getContractAddress(transaction) {\n  let from = null;\n\n  try {\n    from = getAddress(transaction.from);\n  } catch (error) {\n    logger$7.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n  }\n\n  const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n  return getAddress(hexDataSlice(keccak256(encode([from, nonce])), 12));\n}\n\nclass AddressCoder extends Coder {\n  constructor(localName) {\n    super(\"address\", \"address\", localName, false);\n  }\n\n  encode(writer, value) {\n    try {\n      getAddress(value);\n    } catch (error) {\n      this._throwError(error.message, value);\n    }\n\n    return writer.writeValue(value);\n  }\n\n  decode(reader) {\n    return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n  }\n\n} // Clones the functionality of an existing Coder, but without a localName\n\n\nclass AnonymousCoder extends Coder {\n  constructor(coder) {\n    super(coder.name, coder.type, undefined, coder.dynamic);\n    this.coder = coder;\n  }\n\n  encode(writer, value) {\n    return this.coder.encode(writer, value);\n  }\n\n  decode(reader) {\n    return this.coder.decode(reader);\n  }\n\n}\n\nconst logger$8 = new Logger(version$4);\n\nfunction pack(writer, coders, values) {\n  let arrayValues = null;\n\n  if (Array.isArray(values)) {\n    arrayValues = values;\n  } else if (values && typeof values === \"object\") {\n    let unique = {};\n    arrayValues = coders.map(coder => {\n      const name = coder.localName;\n\n      if (!name) {\n        logger$8.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"values\",\n          coder: coder,\n          value: values\n        });\n      }\n\n      if (unique[name]) {\n        logger$8.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"values\",\n          coder: coder,\n          value: values\n        });\n      }\n\n      unique[name] = true;\n      return values[name];\n    });\n  } else {\n    logger$8.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n  }\n\n  if (coders.length !== arrayValues.length) {\n    logger$8.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n  }\n\n  let staticWriter = new Writer(writer.wordSize);\n  let dynamicWriter = new Writer(writer.wordSize);\n  let updateFuncs = [];\n  coders.forEach((coder, index) => {\n    let value = arrayValues[index];\n\n    if (coder.dynamic) {\n      // Get current dynamic offset (for the future pointer)\n      let dynamicOffset = dynamicWriter.length; // Encode the dynamic value into the dynamicWriter\n\n      coder.encode(dynamicWriter, value); // Prepare to populate the correct offset once we are done\n\n      let updateFunc = staticWriter.writeUpdatableValue();\n      updateFuncs.push(baseOffset => {\n        updateFunc(baseOffset + dynamicOffset);\n      });\n    } else {\n      coder.encode(staticWriter, value);\n    }\n  }); // Backfill all the dynamic offsets, now that we know the static length\n\n  updateFuncs.forEach(func => {\n    func(staticWriter.length);\n  });\n  let length = writer.appendWriter(staticWriter);\n  length += writer.appendWriter(dynamicWriter);\n  return length;\n}\n\nfunction unpack(reader, coders) {\n  let values = []; // A reader anchored to this base\n\n  let baseReader = reader.subReader(0);\n  coders.forEach(coder => {\n    let value = null;\n\n    if (coder.dynamic) {\n      let offset = reader.readValue();\n      let offsetReader = baseReader.subReader(offset.toNumber());\n\n      try {\n        value = coder.decode(offsetReader);\n      } catch (error) {\n        // Cannot recover from this\n        if (error.code === Logger.errors.BUFFER_OVERRUN) {\n          throw error;\n        }\n\n        value = error;\n        value.baseType = coder.name;\n        value.name = coder.localName;\n        value.type = coder.type;\n      }\n    } else {\n      try {\n        value = coder.decode(reader);\n      } catch (error) {\n        // Cannot recover from this\n        if (error.code === Logger.errors.BUFFER_OVERRUN) {\n          throw error;\n        }\n\n        value = error;\n        value.baseType = coder.name;\n        value.name = coder.localName;\n        value.type = coder.type;\n      }\n    }\n\n    if (value != undefined) {\n      values.push(value);\n    }\n  }); // We only output named properties for uniquely named coders\n\n  const uniqueNames = coders.reduce((accum, coder) => {\n    const name = coder.localName;\n\n    if (name) {\n      if (!accum[name]) {\n        accum[name] = 0;\n      }\n\n      accum[name]++;\n    }\n\n    return accum;\n  }, {}); // Add any named parameters (i.e. tuples)\n\n  coders.forEach((coder, index) => {\n    let name = coder.localName;\n\n    if (!name || uniqueNames[name] !== 1) {\n      return;\n    }\n\n    if (name === \"length\") {\n      name = \"_length\";\n    }\n\n    if (values[name] != null) {\n      return;\n    }\n\n    const value = values[index];\n\n    if (value instanceof Error) {\n      Object.defineProperty(values, name, {\n        get: () => {\n          throw value;\n        }\n      });\n    } else {\n      values[name] = value;\n    }\n  });\n\n  for (let i = 0; i < values.length; i++) {\n    const value = values[i];\n\n    if (value instanceof Error) {\n      Object.defineProperty(values, i, {\n        get: () => {\n          throw value;\n        }\n      });\n    }\n  }\n\n  return Object.freeze(values);\n}\n\nclass ArrayCoder extends Coder {\n  constructor(coder, length, localName) {\n    const type = coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\";\n    const dynamic = length === -1 || coder.dynamic;\n    super(\"array\", type, localName, dynamic);\n    this.coder = coder;\n    this.length = length;\n  }\n\n  encode(writer, value) {\n    if (!Array.isArray(value)) {\n      this._throwError(\"expected array value\", value);\n    }\n\n    let count = this.length;\n\n    if (count === -1) {\n      count = value.length;\n      writer.writeValue(value.length);\n    }\n\n    logger$8.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? \" \" + this.localName : \"\"));\n    let coders = [];\n\n    for (let i = 0; i < value.length; i++) {\n      coders.push(this.coder);\n    }\n\n    return pack(writer, coders, value);\n  }\n\n  decode(reader) {\n    let count = this.length;\n\n    if (count === -1) {\n      count = reader.readValue().toNumber();\n    }\n\n    let coders = [];\n\n    for (let i = 0; i < count; i++) {\n      coders.push(new AnonymousCoder(this.coder));\n    }\n\n    return reader.coerce(this.name, unpack(reader, coders));\n  }\n\n}\n\nclass BooleanCoder extends Coder {\n  constructor(localName) {\n    super(\"bool\", \"bool\", localName, false);\n  }\n\n  encode(writer, value) {\n    return writer.writeValue(value ? 1 : 0);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.type, !reader.readValue().isZero());\n  }\n\n}\n\nclass DynamicBytesCoder extends Coder {\n  constructor(type, localName) {\n    super(type, type, localName, true);\n  }\n\n  encode(writer, value) {\n    value = arrayify(value);\n    let length = writer.writeValue(value.length);\n    length += writer.writeBytes(value);\n    return length;\n  }\n\n  decode(reader) {\n    return reader.readBytes(reader.readValue().toNumber(), true);\n  }\n\n}\n\nclass BytesCoder extends DynamicBytesCoder {\n  constructor(localName) {\n    super(\"bytes\", localName);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, hexlify(super.decode(reader)));\n  }\n\n} // @TODO: Merge this with bytes\n\n\nclass FixedBytesCoder extends Coder {\n  constructor(size, localName) {\n    let name = \"bytes\" + String(size);\n    super(name, name, localName, false);\n    this.size = size;\n  }\n\n  encode(writer, value) {\n    let data = arrayify(value);\n\n    if (data.length !== this.size) {\n      this._throwError(\"incorrect data length\", value);\n    }\n\n    return writer.writeBytes(data);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n  }\n\n}\n\nclass NullCoder extends Coder {\n  constructor(localName) {\n    super(\"null\", \"\", localName, false);\n  }\n\n  encode(writer, value) {\n    if (value != null) {\n      this._throwError(\"not null\", value);\n    }\n\n    return writer.writeBytes([]);\n  }\n\n  decode(reader) {\n    reader.readBytes(0);\n    return reader.coerce(this.name, null);\n  }\n\n}\n\nconst NegativeOne$1 = BigNumber.from(-1);\nconst Zero$1 = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst Two = BigNumber.from(2);\nconst WeiPerEther = BigNumber.from(\"1000000000000000000\");\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nclass NumberCoder extends Coder {\n  constructor(size, signed, localName) {\n    const name = (signed ? \"int\" : \"uint\") + size * 8;\n    super(name, name, localName, false);\n    this.size = size;\n    this.signed = signed;\n  }\n\n  encode(writer, value) {\n    let v = BigNumber.from(value); // Check bounds are safe for encoding\n\n    let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n\n    if (this.signed) {\n      let bounds = maxUintValue.mask(this.size * 8 - 1);\n\n      if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne$1))) {\n        this._throwError(\"value out-of-bounds\", value);\n      }\n    } else if (v.lt(Zero$1) || v.gt(maxUintValue.mask(this.size * 8))) {\n      this._throwError(\"value out-of-bounds\", value);\n    }\n\n    v = v.toTwos(this.size * 8).mask(this.size * 8);\n\n    if (this.signed) {\n      v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n    }\n\n    return writer.writeValue(v);\n  }\n\n  decode(reader) {\n    let value = reader.readValue().mask(this.size * 8);\n\n    if (this.signed) {\n      value = value.fromTwos(this.size * 8);\n    }\n\n    return reader.coerce(this.name, value);\n  }\n\n}\n\nconst version$7 = \"strings/5.0.5\";\nconst logger$9 = new Logger(version$7); ///////////////////////////////\n\nvar UnicodeNormalizationForm;\n\n(function (UnicodeNormalizationForm) {\n  UnicodeNormalizationForm[\"current\"] = \"\";\n  UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n  UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n  UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n  UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\n\nvar Utf8ErrorReason;\n\n(function (Utf8ErrorReason) {\n  // A continuation byte was present where there was nothing to continue\n  // - offset = the index the codepoint began in\n  Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\"; // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n  // - offset = the index the codepoint began in\n\n  Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\"; // The string is too short to process the expected codepoint\n  // - offset = the index the codepoint began in\n\n  Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\"; // A missing continuation byte was expected but not found\n  // - offset = the index the continuation byte was expected at\n\n  Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\"; // The computed code point is outside the range for UTF-8\n  // - offset       = start of this codepoint\n  // - badCodepoint = the computed codepoint; outside the UTF-8 range\n\n  Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\"; // UTF-8 strings may not contain UTF-16 surrogate pairs\n  // - offset       = start of this codepoint\n  // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n\n  Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\"; // The string is an overlong reperesentation\n  // - offset       = start of this codepoint\n  // - badCodepoint = the computed codepoint; already bounds checked\n\n  Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\n\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n  return logger$9.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n  // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n  if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n    let i = 0;\n\n    for (let o = offset + 1; o < bytes.length; o++) {\n      if (bytes[o] >> 6 !== 0x02) {\n        break;\n      }\n\n      i++;\n    }\n\n    return i;\n  } // This byte runs us past the end of the string, so just jump to the end\n  // (but the first byte was read already read and therefore skipped)\n\n\n  if (reason === Utf8ErrorReason.OVERRUN) {\n    return bytes.length - offset - 1;\n  } // Nothing to skip\n\n\n  return 0;\n}\n\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n  // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n  if (reason === Utf8ErrorReason.OVERLONG) {\n    output.push(badCodepoint);\n    return 0;\n  } // Put the replacement character into the output\n\n\n  output.push(0xfffd); // Otherwise, process as if ignoring errors\n\n  return ignoreFunc(reason, offset, bytes);\n} // Common error handing strategies\n\n\nconst Utf8ErrorFuncs = Object.freeze({\n  error: errorFunc,\n  ignore: ignoreFunc,\n  replace: replaceFunc\n}); // http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\n\nfunction getUtf8CodePoints(bytes, onError) {\n  if (onError == null) {\n    onError = Utf8ErrorFuncs.error;\n  }\n\n  bytes = arrayify(bytes);\n  const result = [];\n  let i = 0; // Invalid bytes are ignored\n\n  while (i < bytes.length) {\n    const c = bytes[i++]; // 0xxx xxxx\n\n    if (c >> 7 === 0) {\n      result.push(c);\n      continue;\n    } // Multibyte; how many bytes left for this character?\n\n\n    let extraLength = null;\n    let overlongMask = null; // 110x xxxx 10xx xxxx\n\n    if ((c & 0xe0) === 0xc0) {\n      extraLength = 1;\n      overlongMask = 0x7f; // 1110 xxxx 10xx xxxx 10xx xxxx\n    } else if ((c & 0xf0) === 0xe0) {\n      extraLength = 2;\n      overlongMask = 0x7ff; // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n    } else if ((c & 0xf8) === 0xf0) {\n      extraLength = 3;\n      overlongMask = 0xffff;\n    } else {\n      if ((c & 0xc0) === 0x80) {\n        i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n      } else {\n        i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n      }\n\n      continue;\n    } // Do we have enough bytes in our data?\n\n\n    if (i - 1 + extraLength >= bytes.length) {\n      i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n      continue;\n    } // Remove the length prefix from the char\n\n\n    let res = c & (1 << 8 - extraLength - 1) - 1;\n\n    for (let j = 0; j < extraLength; j++) {\n      let nextChar = bytes[i]; // Invalid continuation byte\n\n      if ((nextChar & 0xc0) != 0x80) {\n        i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n        res = null;\n        break;\n      }\n\n      res = res << 6 | nextChar & 0x3f;\n      i++;\n    } // See above loop for invalid contimuation byte\n\n\n    if (res === null) {\n      continue;\n    } // Maximum code point\n\n\n    if (res > 0x10ffff) {\n      i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n      continue;\n    } // Reserved for UTF-16 surrogate halves\n\n\n    if (res >= 0xd800 && res <= 0xdfff) {\n      i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n      continue;\n    } // Check for overlong sequences (more bytes than needed)\n\n\n    if (res <= overlongMask) {\n      i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n      continue;\n    }\n\n    result.push(res);\n  }\n\n  return result;\n} // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n\n\nfunction toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n  if (form != UnicodeNormalizationForm.current) {\n    logger$9.checkNormalize();\n    str = str.normalize(form);\n  }\n\n  let result = [];\n\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n\n    if (c < 0x80) {\n      result.push(c);\n    } else if (c < 0x800) {\n      result.push(c >> 6 | 0xc0);\n      result.push(c & 0x3f | 0x80);\n    } else if ((c & 0xfc00) == 0xd800) {\n      i++;\n      const c2 = str.charCodeAt(i);\n\n      if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n        throw new Error(\"invalid utf-8 string\");\n      } // Surrogate Pair\n\n\n      const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n      result.push(pair >> 18 | 0xf0);\n      result.push(pair >> 12 & 0x3f | 0x80);\n      result.push(pair >> 6 & 0x3f | 0x80);\n      result.push(pair & 0x3f | 0x80);\n    } else {\n      result.push(c >> 12 | 0xe0);\n      result.push(c >> 6 & 0x3f | 0x80);\n      result.push(c & 0x3f | 0x80);\n    }\n  }\n\n  return arrayify(result);\n}\n\nfunction _toUtf8String(codePoints) {\n  return codePoints.map(codePoint => {\n    if (codePoint <= 0xffff) {\n      return String.fromCharCode(codePoint);\n    }\n\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10 & 0x3ff) + 0xd800, (codePoint & 0x3ff) + 0xdc00);\n  }).join(\"\");\n}\n\nfunction toUtf8String(bytes, onError) {\n  return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nfunction bytes2(data) {\n  if (data.length % 4 !== 0) {\n    throw new Error(\"bad data\");\n  }\n\n  let result = [];\n\n  for (let i = 0; i < data.length; i += 4) {\n    result.push(parseInt(data.substring(i, i + 4), 16));\n  }\n\n  return result;\n}\n\nfunction createTable(data, func) {\n  if (!func) {\n    func = function (value) {\n      return [parseInt(value, 16)];\n    };\n  }\n\n  let lo = 0;\n  let result = {};\n  data.split(\",\").forEach(pair => {\n    let comps = pair.split(\":\");\n    lo += parseInt(comps[0], 16);\n    result[lo] = func(comps[1]);\n  });\n  return result;\n}\n\nfunction createRangeTable(data) {\n  let hi = 0;\n  return data.split(\",\").map(v => {\n    let comps = v.split(\"-\");\n\n    if (comps.length === 1) {\n      comps[1] = \"0\";\n    } else if (comps[1] === \"\") {\n      comps[1] = \"1\";\n    }\n\n    let lo = hi + parseInt(comps[0], 16);\n    hi = parseInt(comps[1], 16);\n    return {\n      l: lo,\n      h: hi\n    };\n  });\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\nclass StringCoder extends DynamicBytesCoder {\n  constructor(localName) {\n    super(\"string\", localName);\n  }\n\n  encode(writer, value) {\n    return super.encode(writer, toUtf8Bytes(value));\n  }\n\n  decode(reader) {\n    return toUtf8String(super.decode(reader));\n  }\n\n}\n\nclass TupleCoder extends Coder {\n  constructor(coders, localName) {\n    let dynamic = false;\n    const types = [];\n    coders.forEach(coder => {\n      if (coder.dynamic) {\n        dynamic = true;\n      }\n\n      types.push(coder.type);\n    });\n    const type = \"tuple(\" + types.join(\",\") + \")\";\n    super(\"tuple\", type, localName, dynamic);\n    this.coders = coders;\n  }\n\n  encode(writer, value) {\n    return pack(writer, this.coders, value);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, unpack(reader, this.coders));\n  }\n\n}\n\nconst logger$a = new Logger(version$4);\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\nclass AbiCoder {\n  constructor(coerceFunc) {\n    logger$a.checkNew(new.target, AbiCoder);\n    defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n  }\n\n  _getCoder(param) {\n    switch (param.baseType) {\n      case \"address\":\n        return new AddressCoder(param.name);\n\n      case \"bool\":\n        return new BooleanCoder(param.name);\n\n      case \"string\":\n        return new StringCoder(param.name);\n\n      case \"bytes\":\n        return new BytesCoder(param.name);\n\n      case \"array\":\n        return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n\n      case \"tuple\":\n        return new TupleCoder((param.components || []).map(component => {\n          return this._getCoder(component);\n        }), param.name);\n\n      case \"\":\n        return new NullCoder(param.name);\n    } // u?int[0-9]*\n\n\n    let match = param.type.match(paramTypeNumber);\n\n    if (match) {\n      let size = parseInt(match[2] || \"256\");\n\n      if (size === 0 || size > 256 || size % 8 !== 0) {\n        logger$a.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n      }\n\n      return new NumberCoder(size / 8, match[1] === \"int\", param.name);\n    } // bytes[0-9]+\n\n\n    match = param.type.match(paramTypeBytes);\n\n    if (match) {\n      let size = parseInt(match[1]);\n\n      if (size === 0 || size > 32) {\n        logger$a.throwArgumentError(\"invalid bytes length\", \"param\", param);\n      }\n\n      return new FixedBytesCoder(size, param.name);\n    }\n\n    return logger$a.throwArgumentError(\"invalid type\", \"type\", param.type);\n  }\n\n  _getWordSize() {\n    return 32;\n  }\n\n  _getReader(data, allowLoose) {\n    return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n  }\n\n  _getWriter() {\n    return new Writer(this._getWordSize());\n  }\n\n  encode(types, values) {\n    if (types.length !== values.length) {\n      logger$a.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n        count: {\n          types: types.length,\n          values: values.length\n        },\n        value: {\n          types: types,\n          values: values\n        }\n      });\n    }\n\n    const coders = types.map(type => this._getCoder(ParamType.from(type)));\n    const coder = new TupleCoder(coders, \"_\");\n\n    const writer = this._getWriter();\n\n    coder.encode(writer, values);\n    return writer.data;\n  }\n\n  decode(types, data, loose) {\n    const coders = types.map(type => this._getCoder(ParamType.from(type)));\n    const coder = new TupleCoder(coders, \"_\");\n    return coder.decode(this._getReader(arrayify(data), loose));\n  }\n\n}\n\nconst defaultAbiCoder = new AbiCoder();\nconst version$8 = \"hash/5.0.5\";\nconst logger$b = new Logger(version$8);\n\nfunction id(text) {\n  return keccak256(toUtf8Bytes(text));\n}\n\nconst logger$c = new Logger(version$4);\n\nclass LogDescription extends Description {}\n\nclass TransactionDescription extends Description {}\n\nclass Indexed extends Description {\n  static isIndexed(value) {\n    return !!(value && value._isIndexed);\n  }\n\n}\n\nfunction wrapAccessError(property, error) {\n  const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n  wrap.error = error;\n  return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\n\n\nclass Interface {\n  constructor(fragments) {\n    logger$c.checkNew(new.target, Interface);\n    let abi = [];\n\n    if (typeof fragments === \"string\") {\n      abi = JSON.parse(fragments);\n    } else {\n      abi = fragments;\n    }\n\n    defineReadOnly(this, \"fragments\", abi.map(fragment => {\n      return Fragment.from(fragment);\n    }).filter(fragment => fragment != null));\n    defineReadOnly(this, \"_abiCoder\", getStatic(new.target, \"getAbiCoder\")());\n    defineReadOnly(this, \"functions\", {});\n    defineReadOnly(this, \"errors\", {});\n    defineReadOnly(this, \"events\", {});\n    defineReadOnly(this, \"structs\", {}); // Add all fragments by their signature\n\n    this.fragments.forEach(fragment => {\n      let bucket = null;\n\n      switch (fragment.type) {\n        case \"constructor\":\n          if (this.deploy) {\n            logger$c.warn(\"duplicate definition - constructor\");\n            return;\n          } //checkNames(fragment, \"input\", fragment.inputs);\n\n\n          defineReadOnly(this, \"deploy\", fragment);\n          return;\n\n        case \"function\":\n          //checkNames(fragment, \"input\", fragment.inputs);\n          //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n          bucket = this.functions;\n          break;\n\n        case \"event\":\n          //checkNames(fragment, \"input\", fragment.inputs);\n          bucket = this.events;\n          break;\n\n        default:\n          return;\n      }\n\n      let signature = fragment.format();\n\n      if (bucket[signature]) {\n        logger$c.warn(\"duplicate definition - \" + signature);\n        return;\n      }\n\n      bucket[signature] = fragment;\n    }); // If we do not have a constructor add a default\n\n    if (!this.deploy) {\n      defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n        payable: false,\n        type: \"constructor\"\n      }));\n    }\n\n    defineReadOnly(this, \"_isInterface\", true);\n  }\n\n  format(format) {\n    if (!format) {\n      format = FormatTypes.full;\n    }\n\n    if (format === FormatTypes.sighash) {\n      logger$c.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n    }\n\n    const abi = this.fragments.map(fragment => fragment.format(format)); // We need to re-bundle the JSON fragments a bit\n\n    if (format === FormatTypes.json) {\n      return JSON.stringify(abi.map(j => JSON.parse(j)));\n    }\n\n    return abi;\n  } // Sub-classes can override these to handle other blockchains\n\n\n  static getAbiCoder() {\n    return defaultAbiCoder;\n  }\n\n  static getAddress(address) {\n    return getAddress(address);\n  }\n\n  static getSighash(functionFragment) {\n    return hexDataSlice(id(functionFragment.format()), 0, 4);\n  }\n\n  static getEventTopic(eventFragment) {\n    return id(eventFragment.format());\n  } // Find a function definition by any means necessary (unless it is ambiguous)\n\n\n  getFunction(nameOrSignatureOrSighash) {\n    if (isHexString(nameOrSignatureOrSighash)) {\n      for (const name in this.functions) {\n        if (nameOrSignatureOrSighash === this.getSighash(name)) {\n          return this.functions[name];\n        }\n      }\n\n      logger$c.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n    } // It is a bare name, look up the function (will return null if ambiguous)\n\n\n    if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n      const name = nameOrSignatureOrSighash.trim();\n      const matching = Object.keys(this.functions).filter(f => f.split(\"(\"\n      /* fix:) */\n      )[0] === name);\n\n      if (matching.length === 0) {\n        logger$c.throwArgumentError(\"no matching function\", \"name\", name);\n      } else if (matching.length > 1) {\n        logger$c.throwArgumentError(\"multiple matching functions\", \"name\", name);\n      }\n\n      return this.functions[matching[0]];\n    } // Normlize the signature and lookup the function\n\n\n    const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n\n    if (!result) {\n      logger$c.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n    }\n\n    return result;\n  } // Find an event definition by any means necessary (unless it is ambiguous)\n\n\n  getEvent(nameOrSignatureOrTopic) {\n    if (isHexString(nameOrSignatureOrTopic)) {\n      const topichash = nameOrSignatureOrTopic.toLowerCase();\n\n      for (const name in this.events) {\n        if (topichash === this.getEventTopic(name)) {\n          return this.events[name];\n        }\n      }\n\n      logger$c.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n    } // It is a bare name, look up the function (will return null if ambiguous)\n\n\n    if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n      const name = nameOrSignatureOrTopic.trim();\n      const matching = Object.keys(this.events).filter(f => f.split(\"(\"\n      /* fix:) */\n      )[0] === name);\n\n      if (matching.length === 0) {\n        logger$c.throwArgumentError(\"no matching event\", \"name\", name);\n      } else if (matching.length > 1) {\n        logger$c.throwArgumentError(\"multiple matching events\", \"name\", name);\n      }\n\n      return this.events[matching[0]];\n    } // Normlize the signature and lookup the function\n\n\n    const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n\n    if (!result) {\n      logger$c.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n    }\n\n    return result;\n  } // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n\n\n  getSighash(functionFragment) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    return getStatic(this.constructor, \"getSighash\")(functionFragment);\n  } // Get the topic (the bytes32 hash) used by Solidity to identify an event\n\n\n  getEventTopic(eventFragment) {\n    if (typeof eventFragment === \"string\") {\n      eventFragment = this.getEvent(eventFragment);\n    }\n\n    return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n  }\n\n  _decodeParams(params, data) {\n    return this._abiCoder.decode(params, data);\n  }\n\n  _encodeParams(params, values) {\n    return this._abiCoder.encode(params, values);\n  }\n\n  encodeDeploy(values) {\n    return this._encodeParams(this.deploy.inputs, values || []);\n  } // Decode the data for a function call (e.g. tx.data)\n\n\n  decodeFunctionData(functionFragment, data) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    const bytes = arrayify(data);\n\n    if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n      logger$c.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", hexlify(bytes));\n    }\n\n    return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n  } // Encode the data for a function call (e.g. tx.data)\n\n\n  encodeFunctionData(functionFragment, values) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    return hexlify(concat([this.getSighash(functionFragment), this._encodeParams(functionFragment.inputs, values || [])]));\n  } // Decode the result from a function call (e.g. from eth_call)\n\n\n  decodeFunctionResult(functionFragment, data) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    let bytes = arrayify(data);\n    let reason = null;\n    let errorSignature = null;\n\n    switch (bytes.length % this._abiCoder._getWordSize()) {\n      case 0:\n        try {\n          return this._abiCoder.decode(functionFragment.outputs, bytes);\n        } catch (error) {}\n\n        break;\n\n      case 4:\n        if (hexlify(bytes.slice(0, 4)) === \"0x08c379a0\") {\n          errorSignature = \"Error(string)\";\n          reason = this._abiCoder.decode([\"string\"], bytes.slice(4))[0];\n        }\n\n        break;\n    }\n\n    return logger$c.throwError(\"call revert exception\", Logger.errors.CALL_EXCEPTION, {\n      method: functionFragment.format(),\n      errorSignature: errorSignature,\n      errorArgs: [reason],\n      reason: reason\n    });\n  } // Encode the result for a function call (e.g. for eth_call)\n\n\n  encodeFunctionResult(functionFragment, values) {\n    if (typeof functionFragment === \"string\") {\n      functionFragment = this.getFunction(functionFragment);\n    }\n\n    return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n  } // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n\n\n  encodeFilterTopics(eventFragment, values) {\n    if (typeof eventFragment === \"string\") {\n      eventFragment = this.getEvent(eventFragment);\n    }\n\n    if (values.length > eventFragment.inputs.length) {\n      logger$c.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n        argument: \"values\",\n        value: values\n      });\n    }\n\n    let topics = [];\n\n    if (!eventFragment.anonymous) {\n      topics.push(this.getEventTopic(eventFragment));\n    }\n\n    const encodeTopic = (param, value) => {\n      if (param.type === \"string\") {\n        return id(value);\n      } else if (param.type === \"bytes\") {\n        return keccak256(hexlify(value));\n      } // Check addresses are valid\n\n\n      if (param.type === \"address\") {\n        this._abiCoder.encode([\"address\"], [value]);\n      }\n\n      return hexZeroPad(hexlify(value), 32);\n    };\n\n    values.forEach((value, index) => {\n      let param = eventFragment.inputs[index];\n\n      if (!param.indexed) {\n        if (value != null) {\n          logger$c.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", \"contract.\" + param.name, value);\n        }\n\n        return;\n      }\n\n      if (value == null) {\n        topics.push(null);\n      } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n        logger$c.throwArgumentError(\"filtering with tuples or arrays not supported\", \"contract.\" + param.name, value);\n      } else if (Array.isArray(value)) {\n        topics.push(value.map(value => encodeTopic(param, value)));\n      } else {\n        topics.push(encodeTopic(param, value));\n      }\n    }); // Trim off trailing nulls\n\n    while (topics.length && topics[topics.length - 1] === null) {\n      topics.pop();\n    }\n\n    return topics;\n  }\n\n  encodeEventLog(eventFragment, values) {\n    if (typeof eventFragment === \"string\") {\n      eventFragment = this.getEvent(eventFragment);\n    }\n\n    const topics = [];\n    const dataTypes = [];\n    const dataValues = [];\n\n    if (!eventFragment.anonymous) {\n      topics.push(this.getEventTopic(eventFragment));\n    }\n\n    if (values.length !== eventFragment.inputs.length) {\n      logger$c.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n    }\n\n    eventFragment.inputs.forEach((param, index) => {\n      const value = values[index];\n\n      if (param.indexed) {\n        if (param.type === \"string\") {\n          topics.push(id(value));\n        } else if (param.type === \"bytes\") {\n          topics.push(keccak256(value));\n        } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n          // @TOOD\n          throw new Error(\"not implemented\");\n        } else {\n          topics.push(this._abiCoder.encode([param.type], [value]));\n        }\n      } else {\n        dataTypes.push(param);\n        dataValues.push(value);\n      }\n    });\n    return {\n      data: this._abiCoder.encode(dataTypes, dataValues),\n      topics: topics\n    };\n  } // Decode a filter for the event and the search criteria\n\n\n  decodeEventLog(eventFragment, data, topics) {\n    if (typeof eventFragment === \"string\") {\n      eventFragment = this.getEvent(eventFragment);\n    }\n\n    if (topics != null && !eventFragment.anonymous) {\n      let topicHash = this.getEventTopic(eventFragment);\n\n      if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n        logger$c.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, {\n          argument: \"topics[0]\",\n          expected: topicHash,\n          value: topics[0]\n        });\n      }\n\n      topics = topics.slice(1);\n    }\n\n    let indexed = [];\n    let nonIndexed = [];\n    let dynamic = [];\n    eventFragment.inputs.forEach((param, index) => {\n      if (param.indexed) {\n        if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n          indexed.push(ParamType.fromObject({\n            type: \"bytes32\",\n            name: param.name\n          }));\n          dynamic.push(true);\n        } else {\n          indexed.push(param);\n          dynamic.push(false);\n        }\n      } else {\n        nonIndexed.push(param);\n        dynamic.push(false);\n      }\n    });\n    let resultIndexed = topics != null ? this._abiCoder.decode(indexed, concat(topics)) : null;\n\n    let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n\n    let result = [];\n    let nonIndexedIndex = 0,\n        indexedIndex = 0;\n    eventFragment.inputs.forEach((param, index) => {\n      if (param.indexed) {\n        if (resultIndexed == null) {\n          result[index] = new Indexed({\n            _isIndexed: true,\n            hash: null\n          });\n        } else if (dynamic[index]) {\n          result[index] = new Indexed({\n            _isIndexed: true,\n            hash: resultIndexed[indexedIndex++]\n          });\n        } else {\n          try {\n            result[index] = resultIndexed[indexedIndex++];\n          } catch (error) {\n            result[index] = error;\n          }\n        }\n      } else {\n        try {\n          result[index] = resultNonIndexed[nonIndexedIndex++];\n        } catch (error) {\n          result[index] = error;\n        }\n      } // Add the keyword argument if named and safe\n\n\n      if (param.name && result[param.name] == null) {\n        const value = result[index]; // Make error named values throw on access\n\n        if (value instanceof Error) {\n          Object.defineProperty(result, param.name, {\n            get: () => {\n              throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value);\n            }\n          });\n        } else {\n          result[param.name] = value;\n        }\n      }\n    }); // Make all error indexed values throw on access\n\n    for (let i = 0; i < result.length; i++) {\n      const value = result[i];\n\n      if (value instanceof Error) {\n        Object.defineProperty(result, i, {\n          get: () => {\n            throw wrapAccessError(`index ${i}`, value);\n          }\n        });\n      }\n    }\n\n    return Object.freeze(result);\n  } // Given a transaction, find the matching function fragment (if any) and\n  // determine all its properties and call parameters\n\n\n  parseTransaction(tx) {\n    let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n\n    if (!fragment) {\n      return null;\n    }\n\n    return new TransactionDescription({\n      args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n      functionFragment: fragment,\n      name: fragment.name,\n      signature: fragment.format(),\n      sighash: this.getSighash(fragment),\n      value: BigNumber.from(tx.value || \"0\")\n    });\n  } // Given an event log, find the matching event fragment (if any) and\n  // determine all its properties and values\n\n\n  parseLog(log) {\n    let fragment = this.getEvent(log.topics[0]);\n\n    if (!fragment || fragment.anonymous) {\n      return null;\n    } // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n    //        Probably not, because just because it is the only event in the ABI does\n    //        not mean we have the full ABI; maybe jsut a fragment?\n\n\n    return new LogDescription({\n      eventFragment: fragment,\n      name: fragment.name,\n      signature: fragment.format(),\n      topic: this.getEventTopic(fragment),\n      args: this.decodeEventLog(fragment, log.data, log.topics)\n    });\n  }\n  /*\n  static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n      if (Interface.isInterface(value)) {\n          return value;\n      }\n      if (typeof(value) === \"string\") {\n          return new Interface(JSON.parse(value));\n      }\n      return new Interface(value);\n  }\n  */\n\n\n  static isInterface(value) {\n    return !!(value && value._isInterface);\n  }\n\n}\n\nconst version$9 = \"abstract-provider/5.0.5\";\nconst logger$d = new Logger(version$9); ///////////////////////////////\n// Exported Abstracts\n\nclass Provider {\n  constructor() {\n    logger$d.checkAbstract(new.target, Provider);\n    defineReadOnly(this, \"_isProvider\", true);\n  } // Alias for \"on\"\n\n\n  addListener(eventName, listener) {\n    return this.on(eventName, listener);\n  } // Alias for \"off\"\n\n\n  removeListener(eventName, listener) {\n    return this.off(eventName, listener);\n  }\n\n  static isProvider(value) {\n    return !!(value && value._isProvider);\n  }\n\n}\n\nconst version$a = \"abstract-signer/5.0.6\";\n\nvar __awaiter$1 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$e = new Logger(version$a);\nconst allowedTransactionKeys = [\"chainId\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"nonce\", \"to\", \"value\"];\nconst forwardErrors = [Logger.errors.INSUFFICIENT_FUNDS, Logger.errors.NONCE_EXPIRED, Logger.errors.REPLACEMENT_UNDERPRICED]; // Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\nclass Signer {\n  ///////////////////\n  // Sub-classes MUST call super\n  constructor() {\n    logger$e.checkAbstract(new.target, Signer);\n    defineReadOnly(this, \"_isSigner\", true);\n  } ///////////////////\n  // Sub-classes MAY override these\n\n\n  getBalance(blockTag) {\n    return __awaiter$1(this, void 0, void 0, function* () {\n      this._checkProvider(\"getBalance\");\n\n      return yield this.provider.getBalance(this.getAddress(), blockTag);\n    });\n  }\n\n  getTransactionCount(blockTag) {\n    return __awaiter$1(this, void 0, void 0, function* () {\n      this._checkProvider(\"getTransactionCount\");\n\n      return yield this.provider.getTransactionCount(this.getAddress(), blockTag);\n    });\n  } // Populates \"from\" if unspecified, and estimates the gas for the transation\n\n\n  estimateGas(transaction) {\n    return __awaiter$1(this, void 0, void 0, function* () {\n      this._checkProvider(\"estimateGas\");\n\n      const tx = yield resolveProperties(this.checkTransaction(transaction));\n      return yield this.provider.estimateGas(tx);\n    });\n  } // Populates \"from\" if unspecified, and calls with the transation\n\n\n  call(transaction, blockTag) {\n    return __awaiter$1(this, void 0, void 0, function* () {\n      this._checkProvider(\"call\");\n\n      const tx = yield resolveProperties(this.checkTransaction(transaction));\n      return yield this.provider.call(tx, blockTag);\n    });\n  } // Populates all fields in a transaction, signs it and sends it to the network\n\n\n  sendTransaction(transaction) {\n    this._checkProvider(\"sendTransaction\");\n\n    return this.populateTransaction(transaction).then(tx => {\n      return this.signTransaction(tx).then(signedTx => {\n        return this.provider.sendTransaction(signedTx);\n      });\n    });\n  }\n\n  getChainId() {\n    return __awaiter$1(this, void 0, void 0, function* () {\n      this._checkProvider(\"getChainId\");\n\n      const network = yield this.provider.getNetwork();\n      return network.chainId;\n    });\n  }\n\n  getGasPrice() {\n    return __awaiter$1(this, void 0, void 0, function* () {\n      this._checkProvider(\"getGasPrice\");\n\n      return yield this.provider.getGasPrice();\n    });\n  }\n\n  resolveName(name) {\n    return __awaiter$1(this, void 0, void 0, function* () {\n      this._checkProvider(\"resolveName\");\n\n      return yield this.provider.resolveName(name);\n    });\n  } // Checks a transaction does not contain invalid keys and if\n  // no \"from\" is provided, populates it.\n  // - does NOT require a provider\n  // - adds \"from\" is not present\n  // - returns a COPY (safe to mutate the result)\n  // By default called from: (overriding these prevents it)\n  //   - call\n  //   - estimateGas\n  //   - populateTransaction (and therefor sendTransaction)\n\n\n  checkTransaction(transaction) {\n    for (const key in transaction) {\n      if (allowedTransactionKeys.indexOf(key) === -1) {\n        logger$e.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n      }\n    }\n\n    const tx = shallowCopy(transaction);\n\n    if (tx.from == null) {\n      tx.from = this.getAddress();\n    } else {\n      // Make sure any provided address matches this signer\n      tx.from = Promise.all([Promise.resolve(tx.from), this.getAddress()]).then(result => {\n        if (result[0] !== result[1]) {\n          logger$e.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n        }\n\n        return result[0];\n      });\n    }\n\n    return tx;\n  } // Populates ALL keys for a transaction and checks that \"from\" matches\n  // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n  // By default called from: (overriding these prevents it)\n  //   - sendTransaction\n\n\n  populateTransaction(transaction) {\n    return __awaiter$1(this, void 0, void 0, function* () {\n      const tx = yield resolveProperties(this.checkTransaction(transaction));\n\n      if (tx.to != null) {\n        tx.to = Promise.resolve(tx.to).then(to => this.resolveName(to));\n      }\n\n      if (tx.gasPrice == null) {\n        tx.gasPrice = this.getGasPrice();\n      }\n\n      if (tx.nonce == null) {\n        tx.nonce = this.getTransactionCount(\"pending\");\n      }\n\n      if (tx.gasLimit == null) {\n        tx.gasLimit = this.estimateGas(tx).catch(error => {\n          if (forwardErrors.indexOf(error.code) >= 0) {\n            throw error;\n          }\n\n          return logger$e.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error: error,\n            tx: tx\n          });\n        });\n      }\n\n      if (tx.chainId == null) {\n        tx.chainId = this.getChainId();\n      } else {\n        tx.chainId = Promise.all([Promise.resolve(tx.chainId), this.getChainId()]).then(results => {\n          if (results[1] !== 0 && results[0] !== results[1]) {\n            logger$e.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n          }\n\n          return results[0];\n        });\n      }\n\n      return yield resolveProperties(tx);\n    });\n  } ///////////////////\n  // Sub-classes SHOULD leave these alone\n\n\n  _checkProvider(operation) {\n    if (!this.provider) {\n      logger$e.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: operation || \"_checkProvider\"\n      });\n    }\n  }\n\n  static isSigner(value) {\n    return !!(value && value._isSigner);\n  }\n\n}\n\nclass VoidSigner extends Signer {\n  constructor(address, provider) {\n    logger$e.checkNew(new.target, VoidSigner);\n    super();\n    defineReadOnly(this, \"address\", address);\n    defineReadOnly(this, \"provider\", provider || null);\n  }\n\n  getAddress() {\n    return Promise.resolve(this.address);\n  }\n\n  _fail(message, operation) {\n    return Promise.resolve().then(() => {\n      logger$e.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: operation\n      });\n    });\n  }\n\n  signMessage(message) {\n    return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n  }\n\n  signTransaction(transaction) {\n    return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n  }\n\n  connect(provider) {\n    return new VoidSigner(this.address, provider);\n  }\n\n}\n\nconst version$b = \"contracts/5.0.5\";\n\nvar __awaiter$2 = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst logger$f = new Logger(version$b); ///////////////////////////////\n\nconst allowedTransactionKeys$1 = {\n  chainId: true,\n  data: true,\n  from: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true\n};\n\nfunction resolveName(resolver, nameOrPromise) {\n  return __awaiter$2(this, void 0, void 0, function* () {\n    const name = yield nameOrPromise; // If it is already an address, just use it (after adding checksum)\n\n    try {\n      return getAddress(name);\n    } catch (error) {}\n\n    if (!resolver) {\n      logger$f.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"resolveName\"\n      });\n    }\n\n    const address = yield resolver.resolveName(name);\n\n    if (address == null) {\n      logger$f.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n    }\n\n    return address;\n  });\n} // Recursively replaces ENS names with promises to resolve the name and resolves all properties\n\n\nfunction resolveAddresses(resolver, value, paramType) {\n  return __awaiter$2(this, void 0, void 0, function* () {\n    if (Array.isArray(paramType)) {\n      return yield Promise.all(paramType.map((paramType, index) => {\n        return resolveAddresses(resolver, Array.isArray(value) ? value[index] : value[paramType.name], paramType);\n      }));\n    }\n\n    if (paramType.type === \"address\") {\n      return yield resolveName(resolver, value);\n    }\n\n    if (paramType.type === \"tuple\") {\n      return yield resolveAddresses(resolver, value, paramType.components);\n    }\n\n    if (paramType.baseType === \"array\") {\n      if (!Array.isArray(value)) {\n        return Promise.reject(new Error(\"invalid value for array\"));\n      }\n\n      return yield Promise.all(value.map(v => resolveAddresses(resolver, v, paramType.arrayChildren)));\n    }\n\n    return value;\n  });\n}\n\nfunction populateTransaction(contract, fragment, args) {\n  return __awaiter$2(this, void 0, void 0, function* () {\n    // If an extra argument is given, it is overrides\n    let overrides = {};\n\n    if (args.length === fragment.inputs.length + 1 && typeof args[args.length - 1] === \"object\") {\n      overrides = shallowCopy(args.pop());\n    } // Make sure the parameter count matches\n\n\n    logger$f.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\"); // Populate \"from\" override (allow promises)\n\n    if (contract.signer) {\n      if (overrides.from) {\n        // Contracts with a Signer are from the Signer's frame-of-reference;\n        // but we allow overriding \"from\" if it matches the signer\n        overrides.from = resolveProperties({\n          override: resolveName(contract.signer, overrides.from),\n          signer: contract.signer.getAddress()\n        }).then(check => __awaiter$2(this, void 0, void 0, function* () {\n          if (getAddress(check.signer) !== check.override) {\n            logger$f.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n              operation: \"overrides.from\"\n            });\n          }\n\n          return check.override;\n        }));\n      } else {\n        overrides.from = contract.signer.getAddress();\n      }\n    } else if (overrides.from) {\n      overrides.from = resolveName(contract.provider, overrides.from); //} else {\n      // Contracts without a signer can override \"from\", and if\n      // unspecified the zero address is used\n      //overrides.from = AddressZero;\n    } // Wait for all dependencies to be resolved (prefer the signer over the provider)\n\n\n    const resolved = yield resolveProperties({\n      args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n      address: contract.resolvedAddress,\n      overrides: resolveProperties(overrides) || {}\n    }); // The ABI coded transaction\n\n    const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n    const tx = {\n      data: data,\n      to: resolved.address\n    }; // Resolved Overrides\n\n    const ro = resolved.overrides; // Populate simple overrides\n\n    if (ro.nonce != null) {\n      tx.nonce = BigNumber.from(ro.nonce).toNumber();\n    }\n\n    if (ro.gasLimit != null) {\n      tx.gasLimit = BigNumber.from(ro.gasLimit);\n    }\n\n    if (ro.gasPrice != null) {\n      tx.gasPrice = BigNumber.from(ro.gasPrice);\n    }\n\n    if (ro.from != null) {\n      tx.from = ro.from;\n    } // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n\n\n    if (tx.gasLimit == null && fragment.gas != null) {\n      // Conmpute the intrinisic gas cost for this transaction\n      // @TODO: This is based on the yellow paper as of Petersburg; this is something\n      // we may wish to parameterize in v6 as part of the Network object. Since this\n      // is always a non-nil to address, we can ignore G_create, but may wish to add\n      // similar logic to the ContractFactory.\n      let intrinsic = 21000;\n      const bytes = arrayify(data);\n\n      for (let i = 0; i < bytes.length; i++) {\n        intrinsic += 4;\n\n        if (bytes[i]) {\n          intrinsic += 64;\n        }\n      }\n\n      tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n    } // Populate \"value\" override\n\n\n    if (ro.value) {\n      const roValue = BigNumber.from(ro.value);\n\n      if (!roValue.isZero() && !fragment.payable) {\n        logger$f.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"overrides.value\",\n          value: overrides.value\n        });\n      }\n\n      tx.value = roValue;\n    } // Remvoe the overrides\n\n\n    delete overrides.nonce;\n    delete overrides.gasLimit;\n    delete overrides.gasPrice;\n    delete overrides.from;\n    delete overrides.value; // Make sure there are no stray overrides, which may indicate a\n    // typo or using an unsupported key.\n\n    const leftovers = Object.keys(overrides).filter(key => overrides[key] != null);\n\n    if (leftovers.length) {\n      logger$f.throwError(`cannot override ${leftovers.map(l => JSON.stringify(l)).join(\",\")}`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"overrides\",\n        overrides: leftovers\n      });\n    }\n\n    return tx;\n  });\n}\n\nfunction buildPopulate(contract, fragment) {\n  return function (...args) {\n    return populateTransaction(contract, fragment, args);\n  };\n}\n\nfunction buildEstimate(contract, fragment) {\n  const signerOrProvider = contract.signer || contract.provider;\n  return function (...args) {\n    return __awaiter$2(this, void 0, void 0, function* () {\n      if (!signerOrProvider) {\n        logger$f.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"estimateGas\"\n        });\n      }\n\n      const tx = yield populateTransaction(contract, fragment, args);\n      return yield signerOrProvider.estimateGas(tx);\n    });\n  };\n}\n\nfunction buildCall(contract, fragment, collapseSimple) {\n  const signerOrProvider = contract.signer || contract.provider;\n  return function (...args) {\n    return __awaiter$2(this, void 0, void 0, function* () {\n      // Extract the \"blockTag\" override if present\n      let blockTag = undefined;\n\n      if (args.length === fragment.inputs.length + 1 && typeof args[args.length - 1] === \"object\") {\n        const overrides = shallowCopy(args.pop());\n\n        if (overrides.blockTag != null) {\n          blockTag = yield overrides.blockTag;\n        }\n\n        delete overrides.blockTag;\n        args.push(overrides);\n      } // If the contract was just deployed, wait until it is mined\n\n\n      if (contract.deployTransaction != null) {\n        yield contract._deployed(blockTag);\n      } // Call a node and get the result\n\n\n      const tx = yield populateTransaction(contract, fragment, args);\n      const result = yield signerOrProvider.call(tx, blockTag);\n\n      try {\n        let value = contract.interface.decodeFunctionResult(fragment, result);\n\n        if (collapseSimple && fragment.outputs.length === 1) {\n          value = value[0];\n        }\n\n        return value;\n      } catch (error) {\n        if (error.code === Logger.errors.CALL_EXCEPTION) {\n          error.address = contract.address;\n          error.args = args;\n          error.transaction = tx;\n        }\n\n        throw error;\n      }\n    });\n  };\n}\n\nfunction buildSend(contract, fragment) {\n  return function (...args) {\n    return __awaiter$2(this, void 0, void 0, function* () {\n      if (!contract.signer) {\n        logger$f.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"sendTransaction\"\n        });\n      } // If the contract was just deployed, wait until it is minded\n\n\n      if (contract.deployTransaction != null) {\n        yield contract._deployed();\n      }\n\n      const txRequest = yield populateTransaction(contract, fragment, args);\n      const tx = yield contract.signer.sendTransaction(txRequest); // Tweak the tw.wait so the receipt has extra properties\n\n      const wait = tx.wait.bind(tx);\n\n      tx.wait = confirmations => {\n        return wait(confirmations).then(receipt => {\n          receipt.events = receipt.logs.map(log => {\n            let event = deepCopy(log);\n            let parsed = null;\n\n            try {\n              parsed = contract.interface.parseLog(log);\n            } catch (e) {} // Successfully parsed the event log; include it\n\n\n            if (parsed) {\n              event.args = parsed.args;\n\n              event.decode = (data, topics) => {\n                return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n              };\n\n              event.event = parsed.name;\n              event.eventSignature = parsed.signature;\n            } // Useful operations\n\n\n            event.removeListener = () => {\n              return contract.provider;\n            };\n\n            event.getBlock = () => {\n              return contract.provider.getBlock(receipt.blockHash);\n            };\n\n            event.getTransaction = () => {\n              return contract.provider.getTransaction(receipt.transactionHash);\n            };\n\n            event.getTransactionReceipt = () => {\n              return Promise.resolve(receipt);\n            };\n\n            return event;\n          });\n          return receipt;\n        });\n      };\n\n      return tx;\n    });\n  };\n}\n\nfunction buildDefault(contract, fragment, collapseSimple) {\n  if (fragment.constant) {\n    return buildCall(contract, fragment, collapseSimple);\n  }\n\n  return buildSend(contract, fragment);\n}\n\nfunction getEventTag(filter) {\n  if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n    return \"*\";\n  }\n\n  return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map(topic => {\n    if (Array.isArray(topic)) {\n      return topic.join(\"|\");\n    }\n\n    return topic;\n  }).join(\":\") : \"\");\n}\n\nclass RunningEvent {\n  constructor(tag, filter) {\n    defineReadOnly(this, \"tag\", tag);\n    defineReadOnly(this, \"filter\", filter);\n    this._listeners = [];\n  }\n\n  addListener(listener, once) {\n    this._listeners.push({\n      listener: listener,\n      once: once\n    });\n  }\n\n  removeListener(listener) {\n    let done = false;\n    this._listeners = this._listeners.filter(item => {\n      if (done || item.listener !== listener) {\n        return true;\n      }\n\n      done = true;\n      return false;\n    });\n  }\n\n  removeAllListeners() {\n    this._listeners = [];\n  }\n\n  listeners() {\n    return this._listeners.map(i => i.listener);\n  }\n\n  listenerCount() {\n    return this._listeners.length;\n  }\n\n  run(args) {\n    const listenerCount = this.listenerCount();\n    this._listeners = this._listeners.filter(item => {\n      const argsCopy = args.slice(); // Call the callback in the next event loop\n\n      setTimeout(() => {\n        item.listener.apply(this, argsCopy);\n      }, 0); // Reschedule it if it not \"once\"\n\n      return !item.once;\n    });\n    return listenerCount;\n  }\n\n  prepareEvent(event) {} // Returns the array that will be applied to an emit\n\n\n  getEmit(event) {\n    return [event];\n  }\n\n}\n\nclass ErrorRunningEvent extends RunningEvent {\n  constructor() {\n    super(\"error\", null);\n  }\n\n} // @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additioanlly dereference the arguments when emitting\n\n\nclass FragmentRunningEvent extends RunningEvent {\n  constructor(address, contractInterface, fragment, topics) {\n    const filter = {\n      address: address\n    };\n    let topic = contractInterface.getEventTopic(fragment);\n\n    if (topics) {\n      if (topic !== topics[0]) {\n        logger$f.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n      }\n\n      filter.topics = topics.slice();\n    } else {\n      filter.topics = [topic];\n    }\n\n    super(getEventTag(filter), filter);\n    defineReadOnly(this, \"address\", address);\n    defineReadOnly(this, \"interface\", contractInterface);\n    defineReadOnly(this, \"fragment\", fragment);\n  }\n\n  prepareEvent(event) {\n    super.prepareEvent(event);\n    event.event = this.fragment.name;\n    event.eventSignature = this.fragment.format();\n\n    event.decode = (data, topics) => {\n      return this.interface.decodeEventLog(this.fragment, data, topics);\n    };\n\n    try {\n      event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n    } catch (error) {\n      event.args = null;\n      event.decodeError = error;\n    }\n  }\n\n  getEmit(event) {\n    const errors = checkResultErrors(event.args);\n\n    if (errors.length) {\n      throw errors[0].error;\n    }\n\n    const args = (event.args || []).slice();\n    args.push(event);\n    return args;\n  }\n\n} // A Wildard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\n\n\nclass WildcardRunningEvent extends RunningEvent {\n  constructor(address, contractInterface) {\n    super(\"*\", {\n      address: address\n    });\n    defineReadOnly(this, \"address\", address);\n    defineReadOnly(this, \"interface\", contractInterface);\n  }\n\n  prepareEvent(event) {\n    super.prepareEvent(event);\n\n    try {\n      const parsed = this.interface.parseLog(event);\n      event.event = parsed.name;\n      event.eventSignature = parsed.signature;\n\n      event.decode = (data, topics) => {\n        return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n      };\n\n      event.args = parsed.args;\n    } catch (error) {// No matching event\n    }\n  }\n\n}\n\nclass Contract {\n  constructor(addressOrName, contractInterface, signerOrProvider) {\n    logger$f.checkNew(new.target, Contract); // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n    //address = getAddress(address);\n\n    defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n\n    if (signerOrProvider == null) {\n      defineReadOnly(this, \"provider\", null);\n      defineReadOnly(this, \"signer\", null);\n    } else if (Signer.isSigner(signerOrProvider)) {\n      defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n      defineReadOnly(this, \"signer\", signerOrProvider);\n    } else if (Provider.isProvider(signerOrProvider)) {\n      defineReadOnly(this, \"provider\", signerOrProvider);\n      defineReadOnly(this, \"signer\", null);\n    } else {\n      logger$f.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n    }\n\n    defineReadOnly(this, \"callStatic\", {});\n    defineReadOnly(this, \"estimateGas\", {});\n    defineReadOnly(this, \"functions\", {});\n    defineReadOnly(this, \"populateTransaction\", {});\n    defineReadOnly(this, \"filters\", {});\n    {\n      const uniqueFilters = {};\n      Object.keys(this.interface.events).forEach(eventSignature => {\n        const event = this.interface.events[eventSignature];\n        defineReadOnly(this.filters, eventSignature, (...args) => {\n          return {\n            address: this.address,\n            topics: this.interface.encodeFilterTopics(event, args)\n          };\n        });\n\n        if (!uniqueFilters[event.name]) {\n          uniqueFilters[event.name] = [];\n        }\n\n        uniqueFilters[event.name].push(eventSignature);\n      });\n      Object.keys(uniqueFilters).forEach(name => {\n        const filters = uniqueFilters[name];\n\n        if (filters.length === 1) {\n          defineReadOnly(this.filters, name, this.filters[filters[0]]);\n        } else {\n          logger$f.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n        }\n      });\n    }\n    defineReadOnly(this, \"_runningEvents\", {});\n    defineReadOnly(this, \"_wrappedEmits\", {});\n    defineReadOnly(this, \"address\", addressOrName);\n\n    if (this.provider) {\n      defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n    } else {\n      try {\n        defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n      } catch (error) {\n        // Without a provider, we cannot use ENS names\n        logger$f.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"new Contract\"\n        });\n      }\n    }\n\n    const uniqueNames = {};\n    const uniqueSignatures = {};\n    Object.keys(this.interface.functions).forEach(signature => {\n      const fragment = this.interface.functions[signature]; // Check that the signature is unique; if not the ABI generation has\n      // not been cleaned or may be incorrectly generated\n\n      if (uniqueSignatures[signature]) {\n        logger$f.warn(`Duplicate ABI entry for ${JSON.stringify(name)}`);\n        return;\n      }\n\n      uniqueSignatures[signature] = true; // Track unique names; we only expose bare named functions if they\n      // are ambiguous\n\n      {\n        const name = fragment.name;\n\n        if (!uniqueNames[name]) {\n          uniqueNames[name] = [];\n        }\n\n        uniqueNames[name].push(signature);\n      }\n\n      if (this[signature] == null) {\n        defineReadOnly(this, signature, buildDefault(this, fragment, true));\n      } // We do not collapse simple calls on this bucket, which allows\n      // frameworks to safely use this without introspection as well as\n      // allows decoding error recovery.\n\n\n      if (this.functions[signature] == null) {\n        defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n      }\n\n      if (this.callStatic[signature] == null) {\n        defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n      }\n\n      if (this.populateTransaction[signature] == null) {\n        defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n      }\n\n      if (this.estimateGas[signature] == null) {\n        defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n      }\n    });\n    Object.keys(uniqueNames).forEach(name => {\n      // Ambiguous names to not get attached as bare names\n      const signatures = uniqueNames[name];\n\n      if (signatures.length > 1) {\n        return;\n      }\n\n      const signature = signatures[0];\n\n      if (this[name] == null) {\n        defineReadOnly(this, name, this[signature]);\n      }\n\n      if (this.functions[name] == null) {\n        defineReadOnly(this.functions, name, this.functions[signature]);\n      }\n\n      if (this.callStatic[name] == null) {\n        defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n      }\n\n      if (this.populateTransaction[name] == null) {\n        defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n      }\n\n      if (this.estimateGas[name] == null) {\n        defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n      }\n    });\n  }\n\n  static getContractAddress(transaction) {\n    return getContractAddress(transaction);\n  }\n\n  static getInterface(contractInterface) {\n    if (Interface.isInterface(contractInterface)) {\n      return contractInterface;\n    }\n\n    return new Interface(contractInterface);\n  } // @TODO: Allow timeout?\n\n\n  deployed() {\n    return this._deployed();\n  }\n\n  _deployed(blockTag) {\n    if (!this._deployedPromise) {\n      // If we were just deployed, we know the transaction we should occur in\n      if (this.deployTransaction) {\n        this._deployedPromise = this.deployTransaction.wait().then(() => {\n          return this;\n        });\n      } else {\n        // @TODO: Once we allow a timeout to be passed in, we will wait\n        // up to that many blocks for getCode\n        // Otherwise, poll for our code to be deployed\n        this._deployedPromise = this.provider.getCode(this.address, blockTag).then(code => {\n          if (code === \"0x\") {\n            logger$f.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n              contractAddress: this.address,\n              operation: \"getDeployed\"\n            });\n          }\n\n          return this;\n        });\n      }\n    }\n\n    return this._deployedPromise;\n  } // @TODO:\n  // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n  // @TODO:\n  // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n\n\n  fallback(overrides) {\n    if (!this.signer) {\n      logger$f.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"sendTransaction(fallback)\"\n      });\n    }\n\n    const tx = shallowCopy(overrides || {});\n    [\"from\", \"to\"].forEach(function (key) {\n      if (tx[key] == null) {\n        return;\n      }\n\n      logger$f.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: key\n      });\n    });\n    tx.to = this.resolvedAddress;\n    return this.deployed().then(() => {\n      return this.signer.sendTransaction(tx);\n    });\n  } // Reconnect to a different signer or provider\n\n\n  connect(signerOrProvider) {\n    if (typeof signerOrProvider === \"string\") {\n      signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n    }\n\n    const contract = new this.constructor(this.address, this.interface, signerOrProvider);\n\n    if (this.deployTransaction) {\n      defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n    }\n\n    return contract;\n  } // Re-attach to a different on-chain instance of this contract\n\n\n  attach(addressOrName) {\n    return new this.constructor(addressOrName, this.interface, this.signer || this.provider);\n  }\n\n  static isIndexed(value) {\n    return Indexed.isIndexed(value);\n  }\n\n  _normalizeRunningEvent(runningEvent) {\n    // Already have an instance of this event running; we can re-use it\n    if (this._runningEvents[runningEvent.tag]) {\n      return this._runningEvents[runningEvent.tag];\n    }\n\n    return runningEvent;\n  }\n\n  _getRunningEvent(eventName) {\n    if (typeof eventName === \"string\") {\n      // Listen for \"error\" events (if your contract has an error event, include\n      // the full signature to bypass this special event keyword)\n      if (eventName === \"error\") {\n        return this._normalizeRunningEvent(new ErrorRunningEvent());\n      } // Listen for any event that is registered\n\n\n      if (eventName === \"event\") {\n        return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n      } // Listen for any event\n\n\n      if (eventName === \"*\") {\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n      } // Get the event Fragment (throws if ambiguous/unknown event)\n\n\n      const fragment = this.interface.getEvent(eventName);\n      return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n    } // We have topics to filter by...\n\n\n    if (eventName.topics && eventName.topics.length > 0) {\n      // Is it a known topichash? (throws if no matching topichash)\n      try {\n        const topic = eventName.topics[0];\n\n        if (typeof topic !== \"string\") {\n          throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n        }\n\n        const fragment = this.interface.getEvent(topic);\n        return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n      } catch (error) {} // Filter by the unknown topichash\n\n\n      const filter = {\n        address: this.address,\n        topics: eventName.topics\n      };\n      return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n    }\n\n    return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n  }\n\n  _checkRunningEvents(runningEvent) {\n    if (runningEvent.listenerCount() === 0) {\n      delete this._runningEvents[runningEvent.tag]; // If we have a poller for this, remove it\n\n      const emit = this._wrappedEmits[runningEvent.tag];\n\n      if (emit) {\n        this.provider.off(runningEvent.filter, emit);\n        delete this._wrappedEmits[runningEvent.tag];\n      }\n    }\n  } // Subclasses can override this to gracefully recover\n  // from parse errors if they wish\n\n\n  _wrapEvent(runningEvent, log, listener) {\n    const event = deepCopy(log);\n\n    event.removeListener = () => {\n      if (!listener) {\n        return;\n      }\n\n      runningEvent.removeListener(listener);\n\n      this._checkRunningEvents(runningEvent);\n    };\n\n    event.getBlock = () => {\n      return this.provider.getBlock(log.blockHash);\n    };\n\n    event.getTransaction = () => {\n      return this.provider.getTransaction(log.transactionHash);\n    };\n\n    event.getTransactionReceipt = () => {\n      return this.provider.getTransactionReceipt(log.transactionHash);\n    }; // This may throw if the topics and data mismatch the signature\n\n\n    runningEvent.prepareEvent(event);\n    return event;\n  }\n\n  _addEventListener(runningEvent, listener, once) {\n    if (!this.provider) {\n      logger$f.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"once\"\n      });\n    }\n\n    runningEvent.addListener(listener, once); // Track this running event and its listeners (may already be there; but no hard in updating)\n\n    this._runningEvents[runningEvent.tag] = runningEvent; // If we are not polling the provider, start polling\n\n    if (!this._wrappedEmits[runningEvent.tag]) {\n      const wrappedEmit = log => {\n        let event = this._wrapEvent(runningEvent, log, listener); // Try to emit the result for the parameterized event...\n\n\n        if (event.decodeError == null) {\n          try {\n            const args = runningEvent.getEmit(event);\n            this.emit(runningEvent.filter, ...args);\n          } catch (error) {\n            event.decodeError = error.error;\n          }\n        } // Always emit \"event\" for fragment-base events\n\n\n        if (runningEvent.filter != null) {\n          this.emit(\"event\", event);\n        } // Emit \"error\" if there was an error\n\n\n        if (event.decodeError != null) {\n          this.emit(\"error\", event.decodeError, event);\n        }\n      };\n\n      this._wrappedEmits[runningEvent.tag] = wrappedEmit; // Special events, like \"error\" do not have a filter\n\n      if (runningEvent.filter != null) {\n        this.provider.on(runningEvent.filter, wrappedEmit);\n      }\n    }\n  }\n\n  queryFilter(event, fromBlockOrBlockhash, toBlock) {\n    const runningEvent = this._getRunningEvent(event);\n\n    const filter = shallowCopy(runningEvent.filter);\n\n    if (typeof fromBlockOrBlockhash === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n      if (toBlock != null) {\n        logger$f.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n      }\n\n      filter.blockHash = fromBlockOrBlockhash;\n    } else {\n      filter.fromBlock = fromBlockOrBlockhash != null ? fromBlockOrBlockhash : 0;\n      filter.toBlock = toBlock != null ? toBlock : \"latest\";\n    }\n\n    return this.provider.getLogs(filter).then(logs => {\n      return logs.map(log => this._wrapEvent(runningEvent, log, null));\n    });\n  }\n\n  on(event, listener) {\n    this._addEventListener(this._getRunningEvent(event), listener, false);\n\n    return this;\n  }\n\n  once(event, listener) {\n    this._addEventListener(this._getRunningEvent(event), listener, true);\n\n    return this;\n  }\n\n  emit(eventName, ...args) {\n    if (!this.provider) {\n      return false;\n    }\n\n    const runningEvent = this._getRunningEvent(eventName);\n\n    const result = runningEvent.run(args) > 0; // May have drained all the \"once\" events; check for living events\n\n    this._checkRunningEvents(runningEvent);\n\n    return result;\n  }\n\n  listenerCount(eventName) {\n    if (!this.provider) {\n      return 0;\n    }\n\n    return this._getRunningEvent(eventName).listenerCount();\n  }\n\n  listeners(eventName) {\n    if (!this.provider) {\n      return [];\n    }\n\n    if (eventName == null) {\n      const result = [];\n\n      for (let tag in this._runningEvents) {\n        this._runningEvents[tag].listeners().forEach(listener => {\n          result.push(listener);\n        });\n      }\n\n      return result;\n    }\n\n    return this._getRunningEvent(eventName).listeners();\n  }\n\n  removeAllListeners(eventName) {\n    if (!this.provider) {\n      return this;\n    }\n\n    if (eventName == null) {\n      for (const tag in this._runningEvents) {\n        const runningEvent = this._runningEvents[tag];\n        runningEvent.removeAllListeners();\n\n        this._checkRunningEvents(runningEvent);\n      }\n\n      return this;\n    } // Delete any listeners\n\n\n    const runningEvent = this._getRunningEvent(eventName);\n\n    runningEvent.removeAllListeners();\n\n    this._checkRunningEvents(runningEvent);\n\n    return this;\n  }\n\n  off(eventName, listener) {\n    if (!this.provider) {\n      return this;\n    }\n\n    const runningEvent = this._getRunningEvent(eventName);\n\n    runningEvent.removeListener(listener);\n\n    this._checkRunningEvents(runningEvent);\n\n    return this;\n  }\n\n  removeListener(eventName, listener) {\n    return this.off(eventName, listener);\n  }\n\n}\n\nclass ContractFactory {\n  constructor(contractInterface, bytecode, signer) {\n    let bytecodeHex = null;\n\n    if (typeof bytecode === \"string\") {\n      bytecodeHex = bytecode;\n    } else if (isBytes(bytecode)) {\n      bytecodeHex = hexlify(bytecode);\n    } else if (bytecode && typeof bytecode.object === \"string\") {\n      // Allow the bytecode object from the Solidity compiler\n      bytecodeHex = bytecode.object;\n    } else {\n      // Crash in the next verification step\n      bytecodeHex = \"!\";\n    } // Make sure it is 0x prefixed\n\n\n    if (bytecodeHex.substring(0, 2) !== \"0x\") {\n      bytecodeHex = \"0x\" + bytecodeHex;\n    } // Make sure the final result is valid bytecode\n\n\n    if (!isHexString(bytecodeHex) || bytecodeHex.length % 2) {\n      logger$f.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n    } // If we have a signer, make sure it is valid\n\n\n    if (signer && !Signer.isSigner(signer)) {\n      logger$f.throwArgumentError(\"invalid signer\", \"signer\", signer);\n    }\n\n    defineReadOnly(this, \"bytecode\", bytecodeHex);\n    defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n    defineReadOnly(this, \"signer\", signer || null);\n  } // @TODO: Future; rename to populteTransaction?\n\n\n  getDeployTransaction(...args) {\n    let tx = {}; // If we have 1 additional argument, we allow transaction overrides\n\n    if (args.length === this.interface.deploy.inputs.length + 1 && typeof args[args.length - 1] === \"object\") {\n      tx = shallowCopy(args.pop());\n\n      for (const key in tx) {\n        if (!allowedTransactionKeys$1[key]) {\n          throw new Error(\"unknown transaction override \" + key);\n        }\n      }\n    } // Do not allow these to be overridden in a deployment transaction\n\n\n    [\"data\", \"from\", \"to\"].forEach(key => {\n      if (tx[key] == null) {\n        return;\n      }\n\n      logger$f.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: key\n      });\n    }); // Make sure the call matches the constructor signature\n\n    logger$f.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\"); // Set the data to the bytecode + the encoded constructor arguments\n\n    tx.data = hexlify(concat([this.bytecode, this.interface.encodeDeploy(args)]));\n    return tx;\n  }\n\n  deploy(...args) {\n    return __awaiter$2(this, void 0, void 0, function* () {\n      let overrides = {}; // If 1 extra parameter was passed in, it contains overrides\n\n      if (args.length === this.interface.deploy.inputs.length + 1) {\n        overrides = args.pop();\n      } // Make sure the call matches the constructor signature\n\n\n      logger$f.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\"); // Resolve ENS names and promises in the arguments\n\n      const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n      params.push(overrides); // Get the deployment transaction (with optional overrides)\n\n      const unsignedTx = this.getDeployTransaction(...params); // Send the deployment transaction\n\n      const tx = yield this.signer.sendTransaction(unsignedTx);\n      const address = getStatic(this.constructor, \"getContractAddress\")(tx);\n      const contract = getStatic(this.constructor, \"getContract\")(address, this.interface, this.signer);\n      defineReadOnly(contract, \"deployTransaction\", tx);\n      return contract;\n    });\n  }\n\n  attach(address) {\n    return this.constructor.getContract(address, this.interface, this.signer);\n  }\n\n  connect(signer) {\n    return new this.constructor(this.interface, this.bytecode, signer);\n  }\n\n  static fromSolidity(compilerOutput, signer) {\n    if (compilerOutput == null) {\n      logger$f.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, {\n        argument: \"compilerOutput\"\n      });\n    }\n\n    if (typeof compilerOutput === \"string\") {\n      compilerOutput = JSON.parse(compilerOutput);\n    }\n\n    const abi = compilerOutput.abi;\n    let bytecode = null;\n\n    if (compilerOutput.bytecode) {\n      bytecode = compilerOutput.bytecode;\n    } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n      bytecode = compilerOutput.evm.bytecode;\n    }\n\n    return new this(abi, bytecode, signer);\n  }\n\n  static getInterface(contractInterface) {\n    return Contract.getInterface(contractInterface);\n  }\n\n  static getContractAddress(tx) {\n    return getContractAddress(tx);\n  }\n\n  static getContract(address, contractInterface, signer) {\n    return new Contract(address, contractInterface, signer);\n  }\n\n}\n/* Autogenerated file. Do not edit manually. */\n\n\nclass BridgeFactory extends ContractFactory {\n  constructor(signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(chainID, initialRelayers, initialRelayerThreshold, fee, expiry, overrides) {\n    return super.deploy(chainID, initialRelayers, initialRelayerThreshold, fee, expiry, overrides || {});\n  }\n\n  getDeployTransaction(chainID, initialRelayers, initialRelayerThreshold, fee, expiry, overrides) {\n    return super.getDeployTransaction(chainID, initialRelayers, initialRelayerThreshold, fee, expiry, overrides || {});\n  }\n\n  attach(address) {\n    return super.attach(address);\n  }\n\n  connect(signer) {\n    return super.connect(signer);\n  }\n\n  static connect(address, signerOrProvider) {\n    return new Contract(address, _abi, signerOrProvider);\n  }\n\n}\n\nconst _abi = [{\n  inputs: [{\n    internalType: \"uint8\",\n    name: \"chainID\",\n    type: \"uint8\"\n  }, {\n    internalType: \"address[]\",\n    name: \"initialRelayers\",\n    type: \"address[]\"\n  }, {\n    internalType: \"uint256\",\n    name: \"initialRelayerThreshold\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint256\",\n    name: \"fee\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint256\",\n    name: \"expiry\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"constructor\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"uint8\",\n    name: \"destinationChainID\",\n    type: \"uint8\"\n  }, {\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"resourceID\",\n    type: \"bytes32\"\n  }, {\n    indexed: true,\n    internalType: \"uint64\",\n    name: \"depositNonce\",\n    type: \"uint64\"\n  }],\n  name: \"Deposit\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"Paused\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"uint8\",\n    name: \"originChainID\",\n    type: \"uint8\"\n  }, {\n    indexed: true,\n    internalType: \"uint64\",\n    name: \"depositNonce\",\n    type: \"uint64\"\n  }, {\n    indexed: true,\n    internalType: \"enum Bridge.ProposalStatus\",\n    name: \"status\",\n    type: \"uint8\"\n  }, {\n    indexed: false,\n    internalType: \"bytes32\",\n    name: \"resourceID\",\n    type: \"bytes32\"\n  }, {\n    indexed: false,\n    internalType: \"bytes32\",\n    name: \"dataHash\",\n    type: \"bytes32\"\n  }],\n  name: \"ProposalEvent\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"uint8\",\n    name: \"originChainID\",\n    type: \"uint8\"\n  }, {\n    indexed: true,\n    internalType: \"uint64\",\n    name: \"depositNonce\",\n    type: \"uint64\"\n  }, {\n    indexed: true,\n    internalType: \"enum Bridge.ProposalStatus\",\n    name: \"status\",\n    type: \"uint8\"\n  }, {\n    indexed: false,\n    internalType: \"bytes32\",\n    name: \"resourceID\",\n    type: \"bytes32\"\n  }],\n  name: \"ProposalVote\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"relayer\",\n    type: \"address\"\n  }],\n  name: \"RelayerAdded\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"relayer\",\n    type: \"address\"\n  }],\n  name: \"RelayerRemoved\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"uint256\",\n    name: \"newThreshold\",\n    type: \"uint256\"\n  }],\n  name: \"RelayerThresholdChanged\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"sender\",\n    type: \"address\"\n  }],\n  name: \"RoleGranted\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"sender\",\n    type: \"address\"\n  }],\n  name: \"RoleRevoked\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: false,\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"Unpaused\",\n  type: \"event\"\n}, {\n  inputs: [],\n  name: \"DEFAULT_ADMIN_ROLE\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"RELAYER_ROLE\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"_chainID\",\n  outputs: [{\n    internalType: \"uint8\",\n    name: \"\",\n    type: \"uint8\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint8\",\n    name: \"\",\n    type: \"uint8\"\n  }],\n  name: \"_depositCounts\",\n  outputs: [{\n    internalType: \"uint64\",\n    name: \"\",\n    type: \"uint64\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint64\",\n    name: \"\",\n    type: \"uint64\"\n  }, {\n    internalType: \"uint8\",\n    name: \"\",\n    type: \"uint8\"\n  }],\n  name: \"_depositRecords\",\n  outputs: [{\n    internalType: \"bytes\",\n    name: \"\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"_expiry\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"_fee\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint72\",\n    name: \"\",\n    type: \"uint72\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"address\",\n    name: \"\",\n    type: \"address\"\n  }],\n  name: \"_hasVotedOnProposal\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint72\",\n    name: \"\",\n    type: \"uint72\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  name: \"_proposals\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"_resourceID\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"_dataHash\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"enum Bridge.ProposalStatus\",\n    name: \"_status\",\n    type: \"uint8\"\n  }, {\n    internalType: \"uint256\",\n    name: \"_proposedBlock\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"_relayerThreshold\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  name: \"_resourceIDToHandlerAddress\",\n  outputs: [{\n    internalType: \"address\",\n    name: \"\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"_totalProposals\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"_totalRelayers\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }],\n  name: \"getRoleAdmin\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"uint256\",\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  name: \"getRoleMember\",\n  outputs: [{\n    internalType: \"address\",\n    name: \"\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }],\n  name: \"getRoleMemberCount\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"grantRole\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"hasRole\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"paused\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"renounceRole\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"bytes32\",\n    name: \"role\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"revokeRole\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"relayer\",\n    type: \"address\"\n  }],\n  name: \"isRelayer\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"newAdmin\",\n    type: \"address\"\n  }],\n  name: \"renounceAdmin\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"adminPauseTransfers\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"adminUnpauseTransfers\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"newThreshold\",\n    type: \"uint256\"\n  }],\n  name: \"adminChangeRelayerThreshold\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"relayerAddress\",\n    type: \"address\"\n  }],\n  name: \"adminAddRelayer\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"relayerAddress\",\n    type: \"address\"\n  }],\n  name: \"adminRemoveRelayer\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"handlerAddress\",\n    type: \"address\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"resourceID\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"address\",\n    name: \"tokenAddress\",\n    type: \"address\"\n  }],\n  name: \"adminSetResource\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"handlerAddress\",\n    type: \"address\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"resourceID\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"address\",\n    name: \"contractAddress\",\n    type: \"address\"\n  }, {\n    internalType: \"bytes4\",\n    name: \"depositFunctionSig\",\n    type: \"bytes4\"\n  }, {\n    internalType: \"bytes4\",\n    name: \"executeFunctionSig\",\n    type: \"bytes4\"\n  }],\n  name: \"adminSetGenericResource\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"handlerAddress\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"tokenAddress\",\n    type: \"address\"\n  }],\n  name: \"adminSetBurnable\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint8\",\n    name: \"originChainID\",\n    type: \"uint8\"\n  }, {\n    internalType: \"uint64\",\n    name: \"depositNonce\",\n    type: \"uint64\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"dataHash\",\n    type: \"bytes32\"\n  }],\n  name: \"getProposal\",\n  outputs: [{\n    components: [{\n      internalType: \"bytes32\",\n      name: \"_resourceID\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"bytes32\",\n      name: \"_dataHash\",\n      type: \"bytes32\"\n    }, {\n      internalType: \"address[]\",\n      name: \"_yesVotes\",\n      type: \"address[]\"\n    }, {\n      internalType: \"address[]\",\n      name: \"_noVotes\",\n      type: \"address[]\"\n    }, {\n      internalType: \"enum Bridge.ProposalStatus\",\n      name: \"_status\",\n      type: \"uint8\"\n    }, {\n      internalType: \"uint256\",\n      name: \"_proposedBlock\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct Bridge.Proposal\",\n    name: \"\",\n    type: \"tuple\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint256\",\n    name: \"newFee\",\n    type: \"uint256\"\n  }],\n  name: \"adminChangeFee\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"handlerAddress\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"tokenAddress\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"amountOrTokenID\",\n    type: \"uint256\"\n  }],\n  name: \"adminWithdraw\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint8\",\n    name: \"destinationChainID\",\n    type: \"uint8\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"resourceID\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"bytes\",\n    name: \"data\",\n    type: \"bytes\"\n  }],\n  name: \"deposit\",\n  outputs: [],\n  stateMutability: \"payable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint8\",\n    name: \"chainID\",\n    type: \"uint8\"\n  }, {\n    internalType: \"uint64\",\n    name: \"depositNonce\",\n    type: \"uint64\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"resourceID\",\n    type: \"bytes32\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"dataHash\",\n    type: \"bytes32\"\n  }],\n  name: \"voteProposal\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint8\",\n    name: \"chainID\",\n    type: \"uint8\"\n  }, {\n    internalType: \"uint64\",\n    name: \"depositNonce\",\n    type: \"uint64\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"dataHash\",\n    type: \"bytes32\"\n  }],\n  name: \"cancelProposal\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"uint8\",\n    name: \"chainID\",\n    type: \"uint8\"\n  }, {\n    internalType: \"uint64\",\n    name: \"depositNonce\",\n    type: \"uint64\"\n  }, {\n    internalType: \"bytes\",\n    name: \"data\",\n    type: \"bytes\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"resourceID\",\n    type: \"bytes32\"\n  }],\n  name: \"executeProposal\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address payable[]\",\n    name: \"addrs\",\n    type: \"address[]\"\n  }, {\n    internalType: \"uint256[]\",\n    name: \"amounts\",\n    type: \"uint256[]\"\n  }],\n  name: \"transferFunds\",\n  outputs: [],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];\nconst _bytecode = \"0x60806040523480156200001157600080fd5b5060405162004d8938038062004d898339818101604052810190620000379190620004bc565b60008060006101000a81548160ff02191690831515021790555084600260006101000a81548160ff021916908360ff160217905550826003819055508160068190555080600781905550620000966000801b336200013460201b60201c565b620000c0604051620000a89062000601565b60405180910390206000801b6200014a60201b60201c565b60005b8451811015620001285762000108604051620000df9062000601565b6040518091039020868381518110620000f457fe5b60200260200101516200016960201b60201c565b6004600081548092919060010191905055508080600101915050620000c3565b50505050505062000746565b620001468282620001f860201b60201c565b5050565b8060016000848152602001908152602001600020600201819055505050565b620001a06001600084815260200190815260200160002060020154620001946200029c60201b60201c565b620002a460201b60201c565b620001e2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001d99062000618565b60405180910390fd5b620001f48282620001f860201b60201c565b5050565b620002278160016000858152602001908152602001600020600001620002dd60201b6200285b1790919060201c565b1562000298576200023d6200029c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b6000620002d582600160008681526020019081526020016000206000016200031560201b620027601790919060201c565b905092915050565b60006200030d836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200034d60201b60201c565b905092915050565b600062000345836000018373ffffffffffffffffffffffffffffffffffffffff1660001b620003c760201b60201c565b905092915050565b6000620003618383620003c760201b60201c565b620003bc578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050620003c1565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081519050620003fb81620006f8565b92915050565b600082601f8301126200041357600080fd5b81516200042a620004248262000668565b6200063a565b915081818352602084019350602081019050838560208402820111156200045057600080fd5b60005b83811015620004845781620004698882620003ea565b84526020840193506020830192505060018101905062000453565b5050505092915050565b6000815190506200049f8162000712565b92915050565b600081519050620004b6816200072c565b92915050565b600080600080600060a08688031215620004d557600080fd5b6000620004e588828901620004a5565b955050602086015167ffffffffffffffff8111156200050357600080fd5b620005118882890162000401565b945050604062000524888289016200048e565b935050606062000537888289016200048e565b92505060806200054a888289016200048e565b9150509295509295909350565b600062000566602f8362000691565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b6000620005ce600c83620006a2565b91507f52454c415945525f524f4c4500000000000000000000000000000000000000006000830152600c82019050919050565b60006200060e82620005bf565b9150819050919050565b60006020820190508181036000830152620006338162000557565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156200065e57600080fd5b8060405250919050565b600067ffffffffffffffff8211156200068057600080fd5b602082029050602081019050919050565b600082825260208201905092915050565b600081905092915050565b6000620006ba82620006c1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6200070381620006ad565b81146200070f57600080fd5b50565b6200071d81620006e1565b81146200072957600080fd5b50565b6200073781620006eb565b81146200074357600080fd5b50565b61463380620007566000396000f3fe6080604052600436106102305760003560e01c806384db809f1161012e578063beab7131116100ab578063cdb0f73a1161006f578063cdb0f73a14610877578063d547741f146108a0578063d7a9cd79146108c9578063e8437ee7146108f4578063ffaac0eb1461091d57610230565b8063beab713114610790578063c5b37c22146107bb578063c5ec8970146107e6578063ca15c87314610811578063cb10f2151461084e57610230565b8063926d7d7f116100f2578063926d7d7f146106a95780639d5773e0146106d45780639d82dd63146106ff578063a217fddf14610728578063a9cf69fa1461075357610230565b806384db809f146105a05780638c0c2631146105dd5780639010d07c1461060657806391c404ac1461064357806391d148541461066c57610230565b80634b0b919d116101bc5780635e1fab0f116101805780635e1fab0f146104cf578063780cf004146104f85780637febe63f14610521578063802aabe81461055e57806380ae1c281461058957610230565b80634b0b919d146103c15780634e056005146103fe5780635059871914610427578063541d5548146104675780635c975abb146104a457610230565b80632f2ff15d116102035780632f2ff15d146102e057806336568abe146103095780633ee7094a146103325780634454b20d1461036f5780634603ae381461039857610230565b806305e2ca171461023557806317f03ce5146102515780631ff013f11461027a578063248a9ca3146102a3575b600080fd5b61024f600480360381019061024a9190613229565b610934565b005b34801561025d57600080fd5b5061027860048036038101906102739190613295565b610b91565b005b34801561028657600080fd5b506102a1600480360381019061029c91906132e4565b610d3e565b005b3480156102af57600080fd5b506102ca60048036038101906102c5919061306f565b6114bf565b6040516102d79190613df0565b60405180910390f35b3480156102ec57600080fd5b5061030760048036038101906103029190613098565b6114df565b005b34801561031557600080fd5b50610330600480360381019061032b9190613098565b611553565b005b34801561033e57600080fd5b5061035960048036038101906103549190613139565b6115d6565b6040516103669190613f75565b60405180910390f35b34801561037b57600080fd5b5061039660048036038101906103919190613347565b611693565b005b3480156103a457600080fd5b506103bf60048036038101906103ba9190612ffa565b6119d4565b005b3480156103cd57600080fd5b506103e860048036038101906103e39190613200565b611a7a565b6040516103f591906142d6565b60405180910390f35b34801561040a57600080fd5b5061042560048036038101906104209190613110565b611aa1565b005b34801561043357600080fd5b5061044e60048036038101906104499190613175565b611ae0565b60405161045e9493929190613ea2565b60405180910390f35b34801561047357600080fd5b5061048e60048036038101906104899190612e43565b611b2a565b60405161049b9190613dd5565b60405180910390f35b3480156104b057600080fd5b506104b9611b50565b6040516104c69190613dd5565b60405180910390f35b3480156104db57600080fd5b506104f660048036038101906104f19190612e43565b611b66565b005b34801561050457600080fd5b5061051f600480360381019061051a9190612ed1565b611b8b565b005b34801561052d57600080fd5b50610548600480360381019061054391906131b1565b611c0e565b6040516105559190613dd5565b60405180910390f35b34801561056a57600080fd5b50610573611c4a565b60405161058091906142bb565b60405180910390f35b34801561059557600080fd5b5061059e611c50565b005b3480156105ac57600080fd5b506105c760048036038101906105c2919061306f565b611c62565b6040516105d49190613d68565b60405180910390f35b3480156105e957600080fd5b5061060460048036038101906105ff9190612e95565b611c95565b005b34801561061257600080fd5b5061062d600480360381019061062891906130d4565b611d12565b60405161063a9190613d68565b60405180910390f35b34801561064f57600080fd5b5061066a60048036038101906106659190613110565b611d44565b005b34801561067857600080fd5b50610693600480360381019061068e9190613098565b611d9b565b6040516106a09190613dd5565b60405180910390f35b3480156106b557600080fd5b506106be611dcd565b6040516106cb9190613df0565b60405180910390f35b3480156106e057600080fd5b506106e9611de4565b6040516106f691906142bb565b60405180910390f35b34801561070b57600080fd5b5061072660048036038101906107219190612e43565b611dea565b005b34801561073457600080fd5b5061073d611ec4565b60405161074a9190613df0565b60405180910390f35b34801561075f57600080fd5b5061077a60048036038101906107759190613295565b611ecb565b6040516107879190614299565b60405180910390f35b34801561079c57600080fd5b506107a56120ac565b6040516107b291906142f1565b60405180910390f35b3480156107c757600080fd5b506107d06120bf565b6040516107dd91906142bb565b60405180910390f35b3480156107f257600080fd5b506107fb6120c5565b60405161080891906142bb565b60405180910390f35b34801561081d57600080fd5b506108386004803603810190610833919061306f565b6120cb565b60405161084591906142bb565b60405180910390f35b34801561085a57600080fd5b5061087560048036038101906108709190612f34565b6120f2565b005b34801561088357600080fd5b5061089e60048036038101906108999190612e43565b6121c4565b005b3480156108ac57600080fd5b506108c760048036038101906108c29190613098565b61229e565b005b3480156108d557600080fd5b506108de612312565b6040516108eb91906142bb565b60405180910390f35b34801561090057600080fd5b5061091b60048036038101906109169190612f83565b612318565b005b34801561092957600080fd5b506109326123f0565b005b61093c612402565b6006543414610980576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610977906140b9565b60405180910390fd5b60006009600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1f90614119565b60405180910390fd5b6000600860008760ff1660ff168152602001908152602001600020600081819054906101000a900467ffffffffffffffff1660010191906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905590508383600a60008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008960ff1660ff1681526020019081526020016000209190610ad1929190612b04565b5060008290508073ffffffffffffffffffffffffffffffffffffffff166338995da9878985338a8a6040518763ffffffff1660e01b8152600401610b1a96959493929190613f19565b600060405180830381600087803b158015610b3457600080fd5b505af1158015610b48573d6000803e3d6000fd5b505050508167ffffffffffffffff16868860ff167fdbb69440df8433824a026ef190652f29929eb64b4d1d5d2a69be8afe3e6eaed860405160405180910390a450505050505050565b610b99612453565b60008360ff1660088467ffffffffffffffff1668ffffffffffffffffff16901b1790506000600b60008368ffffffffffffffffff1668ffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000209050600480811115610c0657fe5b8160040160009054906101000a900460ff166004811115610c2357fe5b1415610c64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5b906140f9565b60405180910390fd5b600754610c754383600501546124c5565b11610cb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cac90614159565b60405180910390fd5b60048160040160006101000a81548160ff02191690836004811115610cd657fe5b0217905550600480811115610ce757fe5b8467ffffffffffffffff168660ff167f803c5a12f6bde629cea32e63d4b92d1b560816a6fb72e939d3c89e1cab65041784600001548560010154604051610d2f929190613e79565b60405180910390a45050505050565b610d4661250f565b610d4e612402565b60008460ff1660088567ffffffffffffffff1668ffffffffffffffffff16901b1790506000600b60008368ffffffffffffffffff1668ffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff166009600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4990614259565b60405180910390fd5b60018160040160009054906101000a900460ff166004811115610e7157fe5b1115610eb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea9906141b9565b60405180910390fd5b600c60008368ffffffffffffffffff1668ffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610f77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6e90614059565b60405180910390fd5b60008160040160009054906101000a900460ff166004811115610f9657fe5b14156111b657600560008154600101919050819055506040518060c001604052808581526020018481526020016001604051908082528060200260200182016040528015610ff35781602001602082028036833780820191505090505b50815260200160006040519080825280602002602001820160405280156110295781602001602082028036833780820191505090505b5081526020016001600481111561103c57fe5b815260200143815250600b60008468ffffffffffffffffff1668ffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600082015181600001556020820151816001015560408201518160020190805190602001906110af929190612b84565b5060608201518160030190805190602001906110cc929190612b84565b5060808201518160040160006101000a81548160ff021916908360048111156110f157fe5b021790555060a08201518160050155905050338160020160008154811061111457fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600481111561116957fe5b8567ffffffffffffffff168760ff167f803c5a12f6bde629cea32e63d4b92d1b560816a6fb72e939d3c89e1cab65041787876040516111a9929190613e79565b60405180910390a46112f9565b6007546111c74383600501546124c5565b111561124c5760048160040160006101000a81548160ff021916908360048111156111ee57fe5b02179055506004808111156111ff57fe5b8567ffffffffffffffff168760ff167f803c5a12f6bde629cea32e63d4b92d1b560816a6fb72e939d3c89e1cab650417878760405161123f929190613e79565b60405180910390a46112f8565b80600101548314611292576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128990614239565b60405180910390fd5b80600201339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b60048081111561130557fe5b8160040160009054906101000a900460ff16600481111561132257fe5b146114b7576001600c60008468ffffffffffffffffff1668ffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060040160009054906101000a900460ff1660048111156113d457fe5b8567ffffffffffffffff168760ff167f25f8daaa4635a7729927ba3f5b3d59cc3320aca7c32c9db4e7ca7b9574343640876040516114129190613df0565b60405180910390a460016003541115806114355750600354816002018054905010155b156114b65760028160040160006101000a81548160ff0219169083600481111561145b57fe5b02179055506002600481111561146d57fe5b8567ffffffffffffffff168760ff167f803c5a12f6bde629cea32e63d4b92d1b560816a6fb72e939d3c89e1cab65041787876040516114ad929190613e79565b60405180910390a45b5b505050505050565b600060016000838152602001908152602001600020600201549050919050565b611506600160008481526020019081526020016000206002015461150161256d565b611d9b565b611545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153c90614039565b60405180910390fd5b61154f8282612575565b5050565b61155b61256d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146115c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115bf90614279565b60405180910390fd5b6115d28282612609565b5050565b600a602052816000526040600020602052806000526040600020600091509150508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561168b5780601f106116605761010080835404028352916020019161168b565b820191906000526020600020905b81548152906001019060200180831161166e57829003601f168201915b505050505081565b61169b61250f565b6116a3612402565b60006009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008660ff1660088767ffffffffffffffff1668ffffffffffffffffff16901b179050600082868660405160200161171593929190613d29565b6040516020818303038152906040528051906020012090506000600b60008468ffffffffffffffffff1668ffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002090506000600481111561177857fe5b8160040160009054906101000a900460ff16600481111561179557fe5b14156117d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117cd90613fd9565b60405180910390fd5b600260048111156117e357fe5b8160040160009054906101000a900460ff16600481111561180057fe5b14611840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183790613fb9565b60405180910390fd5b80600101548214611886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187d906140d9565b60405180910390fd5b60038160040160006101000a81548160ff021916908360048111156118a757fe5b02179055506000600960008360000154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663e248cff283600001548a8a6040518463ffffffff1660e01b815260040161192993929190613ee7565b600060405180830381600087803b15801561194357600080fd5b505af1158015611957573d6000803e3d6000fd5b505050508160040160009054906101000a900460ff16600481111561197857fe5b8967ffffffffffffffff168b60ff167f803c5a12f6bde629cea32e63d4b92d1b560816a6fb72e939d3c89e1cab650417856000015486600101546040516119c0929190613e79565b60405180910390a450505050505050505050565b6119dc61269d565b60008090505b84849050811015611a73578484828181106119f957fe5b9050602002016020810190611a0e9190612e6c565b73ffffffffffffffffffffffffffffffffffffffff166108fc848484818110611a3357fe5b905060200201359081150290604051600060405180830381858888f19350505050158015611a65573d6000803e3d6000fd5b5080806001019150506119e2565b5050505050565b60086020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b611aa961269d565b80600381905550807fa20d6b84cd798a24038be305eff8a45ca82ef54a2aa2082005d8e14c0a4746c860405160405180910390a250565b600b602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060040160009054906101000a900460ff16908060050154905084565b6000611b49604051611b3b90613d53565b604051809103902083611d9b565b9050919050565b60008060009054906101000a900460ff16905090565b611b6e61269d565b611b7b6000801b826114df565b611b886000801b33611553565b50565b611b9361269d565b60008490508073ffffffffffffffffffffffffffffffffffffffff1663d9caed128585856040518463ffffffff1660e01b8152600401611bd593929190613d9e565b600060405180830381600087803b158015611bef57600080fd5b505af1158015611c03573d6000803e3d6000fd5b505050505050505050565b600c602052826000526040600020602052816000526040600020602052806000526040600020600092509250509054906101000a900460ff1681565b60045481565b611c5861269d565b611c606126eb565b565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611c9d61269d565b60008290508073ffffffffffffffffffffffffffffffffffffffff166307b7ed99836040518263ffffffff1660e01b8152600401611cdb9190613d68565b600060405180830381600087803b158015611cf557600080fd5b505af1158015611d09573d6000803e3d6000fd5b50505050505050565b6000611d3c826001600086815260200190815260200160002060000161274690919063ffffffff16565b905092915050565b611d4c61269d565b806006541415611d91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8890614219565b60405180910390fd5b8060068190555050565b6000611dc5826001600086815260200190815260200160002060000161276090919063ffffffff16565b905092915050565b604051611dd990613d53565b604051809103902081565b60055481565b611df261269d565b611e0f604051611e0190613d53565b604051809103902082611d9b565b611e4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4590614099565b60405180910390fd5b611e6b604051611e5d90613d53565b60405180910390208261229e565b8073ffffffffffffffffffffffffffffffffffffffff167f10e1f7ce9fd7d1b90a66d13a2ab3cb8dd7f29f3f8d520b143b063ccfbab6906b60405160405180910390a26004600081548092919060019003919050555050565b6000801b81565b611ed3612c0e565b60008460ff1660088567ffffffffffffffff1668ffffffffffffffffff16901b179050600b60008268ffffffffffffffffff1668ffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206040518060c0016040529081600082015481526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020018280548015611fd457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611f8a575b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561206257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612018575b505050505081526020016004820160009054906101000a900460ff16600481111561208957fe5b600481111561209457fe5b81526020016005820154815250509150509392505050565b600260009054906101000a900460ff1681565b60065481565b60075481565b60006120eb60016000848152602001908152602001600020600001612790565b9050919050565b6120fa61269d565b826009600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008390508073ffffffffffffffffffffffffffffffffffffffff1663b8fa373684846040518363ffffffff1660e01b815260040161218c929190613e0b565b600060405180830381600087803b1580156121a657600080fd5b505af11580156121ba573d6000803e3d6000fd5b5050505050505050565b6121cc61269d565b6121e96040516121db90613d53565b604051809103902082611d9b565b15612229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161222090614199565b60405180910390fd5b61224660405161223890613d53565b6040518091039020826114df565b8073ffffffffffffffffffffffffffffffffffffffff167f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c560405160405180910390a260046000815480929190600101919050555050565b6122c560016000848152602001908152602001600020600201546122c061256d565b611d9b565b612304576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122fb90614139565b60405180910390fd5b61230e8282612609565b5050565b60035481565b61232061269d565b846009600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008590508073ffffffffffffffffffffffffffffffffffffffff1663bba8185a868686866040518563ffffffff1660e01b81526004016123b69493929190613e34565b600060405180830381600087803b1580156123d057600080fd5b505af11580156123e4573d6000803e3d6000fd5b50505050505050505050565b6123f861269d565b6124006127a5565b565b6000809054906101000a900460ff1615612451576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161244890614179565b60405180910390fd5b565b6124606000801b33611d9b565b80612484575061248360405161247590613d53565b604051809103902033611d9b565b5b6124c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124ba90614019565b60405180910390fd5b565b600061250783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612800565b905092915050565b61252c60405161251e90613d53565b604051809103902033611d9b565b61256b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612562906141d9565b60405180910390fd5b565b600033905090565b61259d816001600085815260200190815260200160002060000161285b90919063ffffffff16565b15612605576125aa61256d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b612631816001600085815260200190815260200160002060000161288b90919063ffffffff16565b156126995761263e61256d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6126aa6000801b33611d9b565b6126e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126e0906141f9565b60405180910390fd5b565b6126f3612402565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583360405161273c9190613d83565b60405180910390a1565b600061275583600001836128bb565b60001c905092915050565b6000612788836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612928565b905092915050565b600061279e8260000161294b565b9050919050565b6127ad61295c565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336040516127f69190613d83565b60405180910390a1565b6000838311158290612848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161283f9190613f97565b60405180910390fd5b5060008385039050809150509392505050565b6000612883836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6129ac565b905092915050565b60006128b3836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612a1c565b905092915050565b600081836000018054905011612906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128fd90613ff9565b60405180910390fd5b82600001828154811061291557fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6000809054906101000a900460ff166129aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129a190614079565b60405180910390fd5b565b60006129b88383612928565b612a11578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612a16565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114612af85760006001820390506000600186600001805490500390506000866000018281548110612a6757fe5b9060005260206000200154905080876000018481548110612a8457fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480612abc57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050612afe565b60009150505b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612b4557803560ff1916838001178555612b73565b82800160010185558215612b73579182015b82811115612b72578235825591602001919060010190612b57565b5b509050612b809190612c55565b5090565b828054828255906000526020600020908101928215612bfd579160200282015b82811115612bfc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612ba4565b5b509050612c0a9190612c7a565b5090565b6040518060c001604052806000801916815260200160008019168152602001606081526020016060815260200160006004811115612c4857fe5b8152602001600081525090565b612c7791905b80821115612c73576000816000905550600101612c5b565b5090565b90565b612cba91905b80821115612cb657600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101612c80565b5090565b90565b600081359050612ccc81614545565b92915050565b600081359050612ce18161455c565b92915050565b60008083601f840112612cf957600080fd5b8235905067ffffffffffffffff811115612d1257600080fd5b602083019150836020820283011115612d2a57600080fd5b9250929050565b60008083601f840112612d4357600080fd5b8235905067ffffffffffffffff811115612d5c57600080fd5b602083019150836020820283011115612d7457600080fd5b9250929050565b600081359050612d8a81614573565b92915050565b600081359050612d9f8161458a565b92915050565b60008083601f840112612db757600080fd5b8235905067ffffffffffffffff811115612dd057600080fd5b602083019150836001820283011115612de857600080fd5b9250929050565b600081359050612dfe816145a1565b92915050565b600081359050612e13816145b8565b92915050565b600081359050612e28816145cf565b92915050565b600081359050612e3d816145e6565b92915050565b600060208284031215612e5557600080fd5b6000612e6384828501612cbd565b91505092915050565b600060208284031215612e7e57600080fd5b6000612e8c84828501612cd2565b91505092915050565b60008060408385031215612ea857600080fd5b6000612eb685828601612cbd565b9250506020612ec785828601612cbd565b9150509250929050565b60008060008060808587031215612ee757600080fd5b6000612ef587828801612cbd565b9450506020612f0687828801612cbd565b9350506040612f1787828801612cbd565b9250506060612f2887828801612def565b91505092959194509250565b600080600060608486031215612f4957600080fd5b6000612f5786828701612cbd565b9350506020612f6886828701612d7b565b9250506040612f7986828701612cbd565b9150509250925092565b600080600080600060a08688031215612f9b57600080fd5b6000612fa988828901612cbd565b9550506020612fba88828901612d7b565b9450506040612fcb88828901612cbd565b9350506060612fdc88828901612d90565b9250506080612fed88828901612d90565b9150509295509295909350565b6000806000806040858703121561301057600080fd5b600085013567ffffffffffffffff81111561302a57600080fd5b61303687828801612ce7565b9450945050602085013567ffffffffffffffff81111561305557600080fd5b61306187828801612d31565b925092505092959194509250565b60006020828403121561308157600080fd5b600061308f84828501612d7b565b91505092915050565b600080604083850312156130ab57600080fd5b60006130b985828601612d7b565b92505060206130ca85828601612cbd565b9150509250929050565b600080604083850312156130e757600080fd5b60006130f585828601612d7b565b925050602061310685828601612def565b9150509250929050565b60006020828403121561312257600080fd5b600061313084828501612def565b91505092915050565b6000806040838503121561314c57600080fd5b600061315a85828601612e04565b925050602061316b85828601612e2e565b9150509250929050565b6000806040838503121561318857600080fd5b600061319685828601612e19565b92505060206131a785828601612d7b565b9150509250929050565b6000806000606084860312156131c657600080fd5b60006131d486828701612e19565b93505060206131e586828701612d7b565b92505060406131f686828701612cbd565b9150509250925092565b60006020828403121561321257600080fd5b600061322084828501612e2e565b91505092915050565b6000806000806060858703121561323f57600080fd5b600061324d87828801612e2e565b945050602061325e87828801612d7b565b935050604085013567ffffffffffffffff81111561327b57600080fd5b61328787828801612da5565b925092505092959194509250565b6000806000606084860312156132aa57600080fd5b60006132b886828701612e2e565b93505060206132c986828701612e04565b92505060406132da86828701612d7b565b9150509250925092565b600080600080608085870312156132fa57600080fd5b600061330887828801612e2e565b945050602061331987828801612e04565b935050604061332a87828801612d7b565b925050606061333b87828801612d7b565b91505092959194509250565b60008060008060006080868803121561335f57600080fd5b600061336d88828901612e2e565b955050602061337e88828901612e04565b945050604086013567ffffffffffffffff81111561339b57600080fd5b6133a788828901612da5565b935093505060606133ba88828901612d7b565b9150509295509295909350565b60006133d383836133ee565b60208301905092915050565b6133e88161446c565b82525050565b6133f781614393565b82525050565b61340681614393565b82525050565b61341d61341882614393565b6144f6565b82525050565b600061342e8261431c565b613438818561434a565b93506134438361430c565b8060005b8381101561347457815161345b88826133c7565b97506134668361433d565b925050600181019050613447565b5085935050505092915050565b61348a816143b7565b82525050565b613499816143c3565b82525050565b6134a8816143c3565b82525050565b6134b7816143cd565b82525050565b60006134c9838561435b565b93506134d68385846144b4565b6134df8361451a565b840190509392505050565b60006134f6838561436c565b93506135038385846144b4565b82840190509392505050565b600061351a82614327565b613524818561435b565b93506135348185602086016144c3565b61353d8161451a565b840191505092915050565b6135518161447e565b82525050565b6135608161447e565b82525050565b600061357182614332565b61357b8185614377565b935061358b8185602086016144c3565b6135948161451a565b840191505092915050565b60006135ac601c83614377565b91507f70726f706f73616c20616c7265616479207472616e73666572726564000000006000830152602082019050919050565b60006135ec601683614377565b91507f70726f706f73616c206973206e6f7420616374697665000000000000000000006000830152602082019050919050565b600061362c602283614377565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613692601e83614377565b91507f73656e646572206973206e6f742072656c61796572206f722061646d696e00006000830152602082019050919050565b60006136d2602f83614377565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b6000613738601583614377565b91507f72656c6179657220616c726561647920766f74656400000000000000000000006000830152602082019050919050565b6000613778601483614377565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b60006137b8601f83614377565b91507f6164647220646f65736e277420686176652072656c6179657220726f6c6521006000830152602082019050919050565b60006137f8601683614377565b91507f496e636f72726563742066656520737570706c696564000000000000000000006000830152602082019050919050565b6000613838601b83614377565b91507f6461746120646f65736e2774206d6174636820646174616861736800000000006000830152602082019050919050565b6000613878601a83614377565b91507f50726f706f73616c20616c72656164792063616e63656c6c65640000000000006000830152602082019050919050565b60006138b8602083614377565b91507f7265736f757263654944206e6f74206d617070656420746f2068616e646c65726000830152602082019050919050565b60006138f8603083614377565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b600061395e602083614377565b91507f50726f706f73616c206e6f7420617420657870697279207468726573686f6c646000830152602082019050919050565b600061399e601083614377565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b60006139de601e83614377565b91507f6164647220616c7265616479206861732072656c6179657220726f6c652100006000830152602082019050919050565b6000613a1e602a83614377565b91507f70726f706f73616c20616c7265616479207061737365642f657865637574656460008301527f2f63616e63656c6c6564000000000000000000000000000000000000000000006020830152604082019050919050565b6000613a84602083614377565b91507f73656e64657220646f65736e277420686176652072656c6179657220726f6c656000830152602082019050919050565b6000613ac4601e83614377565b91507f73656e64657220646f65736e277420686176652061646d696e20726f6c6500006000830152602082019050919050565b6000613b04601f83614377565b91507f43757272656e742066656520697320657175616c20746f206e657720666565006000830152602082019050919050565b6000613b44600c83614388565b91507f52454c415945525f524f4c4500000000000000000000000000000000000000006000830152600c82019050919050565b6000613b84601183614377565b91507f6461746168617368206d69736d617463680000000000000000000000000000006000830152602082019050919050565b6000613bc4601983614377565b91507f6e6f2068616e646c657220666f72207265736f757263654944000000000000006000830152602082019050919050565b6000613c04602f83614377565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b600060c083016000830151613c756000860182613490565b506020830151613c886020860182613490565b5060408301518482036040860152613ca08282613423565b91505060608301518482036060860152613cba8282613423565b9150506080830151613ccf6080860182613548565b5060a0830151613ce260a0860182613ced565b508091505092915050565b613cf68161442c565b82525050565b613d058161442c565b82525050565b613d1481614436565b82525050565b613d238161445f565b82525050565b6000613d35828661340c565b601482019150613d468284866134ea565b9150819050949350505050565b6000613d5e82613b37565b9150819050919050565b6000602082019050613d7d60008301846133fd565b92915050565b6000602082019050613d9860008301846133df565b92915050565b6000606082019050613db360008301866133fd565b613dc060208301856133fd565b613dcd6040830184613cfc565b949350505050565b6000602082019050613dea6000830184613481565b92915050565b6000602082019050613e05600083018461349f565b92915050565b6000604082019050613e20600083018561349f565b613e2d60208301846133fd565b9392505050565b6000608082019050613e49600083018761349f565b613e5660208301866133fd565b613e6360408301856134ae565b613e7060608301846134ae565b95945050505050565b6000604082019050613e8e600083018561349f565b613e9b602083018461349f565b9392505050565b6000608082019050613eb7600083018761349f565b613ec4602083018661349f565b613ed16040830185613557565b613ede6060830184613cfc565b95945050505050565b6000604082019050613efc600083018661349f565b8181036020830152613f0f8184866134bd565b9050949350505050565b600060a082019050613f2e600083018961349f565b613f3b6020830188613d1a565b613f486040830187613d0b565b613f5560608301866133df565b8181036080830152613f688184866134bd565b9050979650505050505050565b60006020820190508181036000830152613f8f818461350f565b905092915050565b60006020820190508181036000830152613fb18184613566565b905092915050565b60006020820190508181036000830152613fd28161359f565b9050919050565b60006020820190508181036000830152613ff2816135df565b9050919050565b600060208201905081810360008301526140128161361f565b9050919050565b6000602082019050818103600083015261403281613685565b9050919050565b60006020820190508181036000830152614052816136c5565b9050919050565b600060208201905081810360008301526140728161372b565b9050919050565b600060208201905081810360008301526140928161376b565b9050919050565b600060208201905081810360008301526140b2816137ab565b9050919050565b600060208201905081810360008301526140d2816137eb565b9050919050565b600060208201905081810360008301526140f28161382b565b9050919050565b600060208201905081810360008301526141128161386b565b9050919050565b60006020820190508181036000830152614132816138ab565b9050919050565b60006020820190508181036000830152614152816138eb565b9050919050565b6000602082019050818103600083015261417281613951565b9050919050565b6000602082019050818103600083015261419281613991565b9050919050565b600060208201905081810360008301526141b2816139d1565b9050919050565b600060208201905081810360008301526141d281613a11565b9050919050565b600060208201905081810360008301526141f281613a77565b9050919050565b6000602082019050818103600083015261421281613ab7565b9050919050565b6000602082019050818103600083015261423281613af7565b9050919050565b6000602082019050818103600083015261425281613b77565b9050919050565b6000602082019050818103600083015261427281613bb7565b9050919050565b6000602082019050818103600083015261429281613bf7565b9050919050565b600060208201905081810360008301526142b38184613c5d565b905092915050565b60006020820190506142d06000830184613cfc565b92915050565b60006020820190506142eb6000830184613d0b565b92915050565b60006020820190506143066000830184613d1a565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061439e8261440c565b9050919050565b60006143b08261440c565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600081905061440782614538565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600068ffffffffffffffffff82169050919050565b600060ff82169050919050565b600061447782614490565b9050919050565b6000614489826143f9565b9050919050565b600061449b826144a2565b9050919050565b60006144ad8261440c565b9050919050565b82818337600083830152505050565b60005b838110156144e15780820151818401526020810190506144c6565b838111156144f0576000848401525b50505050565b600061450182614508565b9050919050565b60006145138261452b565b9050919050565b6000601f19601f8301169050919050565b60008160601b9050919050565b6005811061454257fe5b50565b61454e81614393565b811461455957600080fd5b50565b614565816143a5565b811461457057600080fd5b50565b61457c816143c3565b811461458757600080fd5b50565b614593816143cd565b811461459e57600080fd5b50565b6145aa8161442c565b81146145b557600080fd5b50565b6145c181614436565b81146145cc57600080fd5b50565b6145d88161444a565b81146145e357600080fd5b50565b6145ef8161445f565b81146145fa57600080fd5b5056fea26469706673582212203d95382235563e3e1b61df9b42f1f346dcfd092c23ca4bbc0e149d9eb4e25fd964736f6c63430006040033\";\n/* Autogenerated file. Do not edit manually. */\n\nclass Ierc20Factory {\n  static connect(address, signerOrProvider) {\n    return new ethers.Contract(address, _abi$1, signerOrProvider);\n  }\n\n}\n\nconst _abi$1 = [{\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"uint256\",\n    name: \"value\",\n    type: \"uint256\"\n  }],\n  name: \"Approval\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    internalType: \"address\",\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    internalType: \"uint256\",\n    name: \"value\",\n    type: \"uint256\"\n  }],\n  name: \"Transfer\",\n  type: \"event\"\n}, {\n  inputs: [],\n  name: \"totalSupply\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"transfer\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"spender\",\n    type: \"address\"\n  }],\n  name: \"allowance\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"approve\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"transferFrom\",\n  outputs: [{\n    internalType: \"bool\",\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];\nexports.BridgeFactory = BridgeFactory;\nexports.Ierc20Factory = Ierc20Factory;","map":{"version":3,"sources":["../node_modules/bn.js/lib/bn.js","../node_modules/@ethersproject/logger/lib.esm/_version.js","../node_modules/@ethersproject/logger/lib.esm/index.js","../node_modules/@ethersproject/bytes/lib.esm/_version.js","../node_modules/@ethersproject/bytes/lib.esm/index.js","../node_modules/@ethersproject/bignumber/lib.esm/_version.js","../node_modules/@ethersproject/bignumber/lib.esm/bignumber.js","../node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js","../node_modules/@ethersproject/properties/lib.esm/_version.js","../node_modules/@ethersproject/properties/lib.esm/index.js","../node_modules/@ethersproject/abi/lib.esm/_version.js","../node_modules/@ethersproject/abi/lib.esm/fragments.js","../node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js","../node_modules/js-sha3/src/sha3.js","../node_modules/@ethersproject/keccak256/lib.esm/index.js","../node_modules/@ethersproject/rlp/lib.esm/_version.js","../node_modules/@ethersproject/rlp/lib.esm/index.js","../node_modules/@ethersproject/address/lib.esm/_version.js","../node_modules/@ethersproject/address/lib.esm/index.js","../node_modules/@ethersproject/abi/lib.esm/coders/address.js","../node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js","../node_modules/@ethersproject/abi/lib.esm/coders/array.js","../node_modules/@ethersproject/abi/lib.esm/coders/boolean.js","../node_modules/@ethersproject/abi/lib.esm/coders/bytes.js","../node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js","../node_modules/@ethersproject/abi/lib.esm/coders/null.js","../node_modules/@ethersproject/constants/lib.esm/index.js","../node_modules/@ethersproject/abi/lib.esm/coders/number.js","../node_modules/@ethersproject/strings/lib.esm/_version.js","../node_modules/@ethersproject/strings/lib.esm/utf8.js","../node_modules/@ethersproject/strings/lib.esm/idna.js","../node_modules/@ethersproject/abi/lib.esm/coders/string.js","../node_modules/@ethersproject/abi/lib.esm/coders/tuple.js","../node_modules/@ethersproject/abi/lib.esm/abi-coder.js","../node_modules/@ethersproject/hash/lib.esm/_version.js","../node_modules/@ethersproject/hash/lib.esm/index.js","../node_modules/@ethersproject/abi/lib.esm/interface.js","../node_modules/@ethersproject/abstract-provider/lib.esm/_version.js","../node_modules/@ethersproject/abstract-provider/lib.esm/index.js","../node_modules/@ethersproject/abstract-signer/lib.esm/_version.js","../node_modules/@ethersproject/abstract-signer/lib.esm/index.js","../node_modules/@ethersproject/contracts/lib.esm/_version.js","../node_modules/@ethersproject/contracts/lib.esm/index.js","../src/ethers/BridgeFactory.ts","../src/ethers/Ierc20Factory.ts"],"names":["require$$0","this","version","logger","BN","_constructorGuard","throwFault","global","NegativeOne","Zero","__awaiter","allowedTransactionKeys","Contract","_abi"],"mappings":"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","sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","export const version = \"logger/5.0.6\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficien funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n})(ErrorCode || (ErrorCode = {}));\n;\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            try {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key]));\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"bytes/5.0.5\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (value.length == null) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (v < 0 || v >= 256 || (v % 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0x0f] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0\n    };\n    if (isBytesLike(signature)) {\n        const bytes = arrayify(signature);\n        if (bytes.length !== 65) {\n            logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n        }\n        // Get the r, s and v\n        result.r = hexlify(bytes.slice(0, 32));\n        result.s = hexlify(bytes.slice(32, 64));\n        result.v = bytes[64];\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else if (result.recoveryParam !== (1 - (result.v % 2))) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","export const version = \"bignumber/5.0.8\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardles.\n *\n */\nimport { BN } from \"bn.js\";\nimport { hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\nexport function isBigNumberish(value) {\n    return (value != null) && (BigNumber.isBigNumber(value) ||\n        (typeof (value) === \"number\" && (value % 1) === 0) ||\n        (typeof (value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof (value) === \"bigint\") ||\n        isBytes(value));\n}\nexport class BigNumber {\n    constructor(constructorGuard, hex) {\n        logger.checkNew(new.target, BigNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    fromTwos(value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n    toTwos(value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n    abs() {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n    add(other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n    sub(other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n    div(other) {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division by zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n    mul(other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n    mod(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot modulo negative values\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n    pow(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot raise to negative values\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n    and(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'and' negative values\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n    or(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'or' negative values\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n    xor(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'xor' negative values\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n    mask(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot mask negative values\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n    shl(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n    shr(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n    eq(other) {\n        return toBN(this).eq(toBN(other));\n    }\n    lt(other) {\n        return toBN(this).lt(toBN(other));\n    }\n    lte(other) {\n        return toBN(this).lte(toBN(other));\n    }\n    gt(other) {\n        return toBN(this).gt(toBN(other));\n    }\n    gte(other) {\n        return toBN(this).gte(toBN(other));\n    }\n    isNegative() {\n        return (this._hex[0] === \"-\");\n    }\n    isZero() {\n        return toBN(this).isZero();\n    }\n    toNumber() {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toString() {\n        // Lots of people expect this, which we do not support, so check\n        if (arguments.length !== 0) {\n            logger.throwError(\"bigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n        }\n        return toBN(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    toJSON(key) {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n    static from(value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        const anyValue = value;\n        if (typeof (anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n        if (anyValue) {\n            // Hexable interface (takes piority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof (hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n            }\n            else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n                if (typeof (hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n    static isBigNumber(value) {\n        return !!(value && value._isBigNumber);\n    }\n}\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have mulitple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n//# sourceMappingURL=bignumber.js.map","\"use strict\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nconst _constructorGuard = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nexport function formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    value = whole + \".\" + fraction;\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexport function parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.,]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    if (multiplier.length - 1 === 0) {\n        return BigNumber.from(value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Prevent underflow\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else if (value != null) {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        logger.checkNew(new.target, FixedNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    floor() {\n        let comps = this.toString().split(\".\");\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE);\n        }\n        return result;\n    }\n    ceiling() {\n        let comps = this.toString().split(\".\");\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE);\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        let comps = this.toString().split(\".\");\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals));\n        return this.mulUnsafe(factor).addUnsafe(BUMP).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (this._value === \"0.0\");\n    }\n    isNegative() {\n        return (this._value[0] === \"-\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map","export const version = \"properties/5.0.4\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function defineReadOnly(object, name, value) {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n// Crawl up the constructor chain to find a static method\nexport function getStatic(ctor, key) {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) {\n            return ctor[key];\n        }\n        if (!ctor.prototype || typeof (ctor.prototype) !== \"object\") {\n            break;\n        }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\nexport function resolveProperties(object) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const promises = Object.keys(object).map((key) => {\n            const value = object[key];\n            return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n        });\n        const results = yield Promise.all(promises);\n        return results.reduce((accum, result) => {\n            accum[(result.key)] = result.value;\n            return accum;\n        }, {});\n    });\n}\nexport function checkProperties(object, properties) {\n    if (!object || typeof (object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\nexport function shallowCopy(object) {\n    const result = {};\n    for (const key in object) {\n        result[key] = object[key];\n    }\n    return result;\n}\nconst opaque = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\nfunction _isFrozen(object) {\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof (object)]) {\n        return true;\n    }\n    if (Array.isArray(object) || typeof (object) === \"object\") {\n        if (!Object.isFrozen(object)) {\n            return false;\n        }\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            if (!_isFrozen(object[keys[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object) {\n    if (_isFrozen(object)) {\n        return object;\n    }\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n    if (typeof (object) === \"object\") {\n        const result = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) {\n                continue;\n            }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n        return result;\n    }\n    return logger.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, \"object\", object);\n}\nexport function deepCopy(object) {\n    return _deepCopy(object);\n}\nexport class Description {\n    constructor(info) {\n        for (const key in info) {\n            this[key] = deepCopy(info[key]);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"abi/5.0.7\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nconst _constructorGuard = {};\nlet ModifiersBytes = { calldata: true, memory: true, storage: true };\nlet ModifiersNest = { calldata: true, memory: true };\nfunction checkModifier(type, name) {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) {\n            return true;\n        }\n    }\n    else if (type === \"address\") {\n        if (name === \"payable\") {\n            return true;\n        }\n    }\n    else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) {\n            return true;\n        }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param, allowIndexed) {\n    let originalParam = param;\n    function throwError(i) {\n        logger.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n    function newNode(parent) {\n        let node = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) {\n            node.indexed = false;\n        }\n        return node;\n    }\n    let parent = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                }\n                else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [newNode(node)];\n                node = node.components[0];\n                break;\n            case \")\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case \",\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let sibling = newNode(node.parent);\n                //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case \" \":\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) {\n                                throwError(i);\n                            }\n                            if (node.indexed) {\n                                throwError(i);\n                            }\n                            node.indexed = true;\n                            node.name = \"\";\n                        }\n                        else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case \"[\":\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case \"]\":\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        logger.throwArgumentError(\"unexpected eof\", \"param\", param);\n    }\n    delete parent.state;\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) {\n            throwError(originalParam.length - 7);\n        }\n        if (node.indexed) {\n            throwError(originalParam.length - 7);\n        }\n        node.indexed = true;\n        node.name = \"\";\n    }\n    else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\nfunction populate(object, params) {\n    for (let key in params) {\n        defineReadOnly(object, key, params[key]);\n    }\n}\nexport const FormatTypes = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n    // Human-Readble with nice spacing, including all names\n    full: \"full\",\n    // JSON-format a la Solidity\n    json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nexport class ParamType {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new ParamType()\"\n            });\n        }\n        populate(this, params);\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        }\n        else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\" : this.type)\n            });\n        }\n        this._isParamType = true;\n        Object.freeze(this);\n    }\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, addres bar) indexed baz\"\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n        }\n        else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    static from(value, allowIndexed) {\n        if (typeof (value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ParamType.isParamType(value)) {\n            return value;\n        }\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null : !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject) : null)\n        });\n    }\n    static fromString(value, allowIndexed) {\n        function ParamTypify(node) {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n    static isParamType(value) {\n        return !!(value != null && value._isParamType);\n    }\n}\n;\nfunction parseParams(value, allowIndex) {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\nexport class Fragment {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n        this._isFragment = true;\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n        return Fragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n    static fromString(value) {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n        if (value.split(\" \")[0] === \"event\") {\n            return EventFragment.fromString(value.substring(5).trim());\n        }\n        else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        }\n        else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        }\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n    static isFragment(value) {\n        return !!(value && value._isFragment);\n    }\n}\nexport class EventFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (EventFragment.isEventFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n        const params = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n        return new EventFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch (modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n    static isEventFragment(value) {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\nfunction parseGas(value, params) {\n    params.gas = null;\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n    return value;\n}\nfunction parseModifiers(value, params) {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\nfunction verifyState(value) {\n    let result = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n    }\n    else if (value.payable != null) {\n        result.payable = !!value.payable;\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n        result.constant = !!value.constant;\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        }\n        else {\n            result.stateMutability = (result.payable ? \"payable\" : \"nonpayable\");\n        }\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n    }\n    else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\" : \"payable\");\n    }\n    else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n    return result;\n}\nexport class ConstructorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payble: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n        let result = \"constructor(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ConstructorFragment.isConstructorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n        const params = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"constructor\" };\n        value = parseGas(value, params);\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n        params.inputs = parseParams(parens[2].trim(), false);\n        parseModifiers(parens[3].trim(), params);\n        return ConstructorFragment.fromObject(params);\n    }\n    static isConstructorFragment(value) {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\nexport class FunctionFragment extends ConstructorFragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payble: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                ouputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            }\n            else if (this.constant) {\n                result += \"view \";\n            }\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map((output) => output.format(format)).join(\", \") + \") \";\n            }\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (FunctionFragment.isFunctionFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new FunctionFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"function\" };\n        value = parseGas(value, params);\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        parseModifiers(parens[3].trim(), params);\n        // We have outputs\n        if (comps.length > 1) {\n            let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        }\n        else {\n            params.outputs = [];\n        }\n        return FunctionFragment.fromObject(params);\n    }\n    static isFunctionFragment(value) {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n//export class ErrorFragment extends Fragment {\n//}\n//export class StructFragment extends Fragment {\n//}\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n    // @TODO: more verification\n    return type;\n}\nconst regexIdentifier = new RegExp(\"^[A-Za-z_][A-Za-z0-9_]*$\");\nfunction verifyIdentifier(value) {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n    }\n    return value;\n}\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nfunction splitNesting(value) {\n    value = value.trim();\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        }\n        else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            }\n            else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n//# sourceMappingURL=fragments.js.map","\"use strict\";\nimport { arrayify, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nexport class Coder {\n    constructor(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    _throwError(message, value) {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n}\nexport class Writer {\n    constructor(wordSize) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n    get data() {\n        return hexConcat(this._data);\n    }\n    get length() { return this._dataLength; }\n    _writeData(data) {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this._writeData(concat(writer._data));\n    }\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value) {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([bytes, this._padding.slice(paddingOffset)]);\n        }\n        return this._writeData(bytes);\n    }\n    _getValue(value) {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value) {\n        return this._writeData(this._getValue(value));\n    }\n    writeUpdatableValue() {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\nexport class Reader {\n    constructor(data, wordSize, coerceFunc, allowLoose) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n        this._offset = 0;\n    }\n    get data() { return hexlify(this._data); }\n    get consumed() { return this._offset; }\n    // The default Coerce function\n    static coerce(name, value) {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return Reader.coerce(name, value);\n    }\n    _peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            }\n            else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n    subReader(offset) {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n    readBytes(length, loose) {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    readValue() {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map","/**\r\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\r\n *\r\n * @version 0.5.7\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2015-2016\r\n * @license MIT\r\n */\r\n/*jslint bitwise: true */\r\n(function () {\r\n  'use strict';\r\n\r\n  var root = typeof window === 'object' ? window : {};\r\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\r\n  if (NODE_JS) {\r\n    root = global;\r\n  }\r\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\r\n  var HEX_CHARS = '0123456789abcdef'.split('');\r\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\r\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\r\n  var PADDING = [6, 1536, 393216, 100663296];\r\n  var SHIFT = [0, 8, 16, 24];\r\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\r\n            0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\r\n            2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\r\n            2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\r\n            2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\r\n  var BITS = [224, 256, 384, 512];\r\n  var SHAKE_BITS = [128, 256];\r\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array'];\r\n\r\n  var createOutputMethod = function (bits, padding, outputType) {\r\n    return function (message) {\r\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  var createShakeOutputMethod = function (bits, padding, outputType) {\r\n    return function (message, outputBits) {\r\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  var createMethod = function (bits, padding) {\r\n    var method = createOutputMethod(bits, padding, 'hex');\r\n    method.create = function () {\r\n      return new Keccak(bits, padding, bits);\r\n    };\r\n    method.update = function (message) {\r\n      return method.create().update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createOutputMethod(bits, padding, type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var createShakeMethod = function (bits, padding) {\r\n    var method = createShakeOutputMethod(bits, padding, 'hex');\r\n    method.create = function (outputBits) {\r\n      return new Keccak(bits, padding, outputBits);\r\n    };\r\n    method.update = function (message, outputBits) {\r\n      return method.create(outputBits).update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createShakeOutputMethod(bits, padding, type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var algorithms = [\r\n    {name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod},\r\n    {name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod},\r\n    {name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod}\r\n  ];\r\n\r\n  var methods = {}, methodNames = [];\r\n\r\n  for (var i = 0; i < algorithms.length; ++i) {\r\n    var algorithm = algorithms[i];\r\n    var bits  = algorithm.bits;\r\n    for (var j = 0; j < bits.length; ++j) {\r\n      var methodName = algorithm.name +'_' + bits[j];\r\n      methodNames.push(methodName);\r\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\r\n    }\r\n  }\r\n\r\n  function Keccak(bits, padding, outputBits) {\r\n    this.blocks = [];\r\n    this.s = [];\r\n    this.padding = padding;\r\n    this.outputBits = outputBits;\r\n    this.reset = true;\r\n    this.block = 0;\r\n    this.start = 0;\r\n    this.blockCount = (1600 - (bits << 1)) >> 5;\r\n    this.byteCount = this.blockCount << 2;\r\n    this.outputBlocks = outputBits >> 5;\r\n    this.extraBytes = (outputBits & 31) >> 3;\r\n\r\n    for (var i = 0; i < 50; ++i) {\r\n      this.s[i] = 0;\r\n    }\r\n  }\r\n\r\n  Keccak.prototype.update = function (message) {\r\n    var notString = typeof message !== 'string';\r\n    if (notString && message.constructor === ArrayBuffer) {\r\n      message = new Uint8Array(message);\r\n    }\r\n    var length = message.length, blocks = this.blocks, byteCount = this.byteCount,\r\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\r\n\r\n    while (index < length) {\r\n      if (this.reset) {\r\n        this.reset = false;\r\n        blocks[0] = this.block;\r\n        for (i = 1; i < blockCount + 1; ++i) {\r\n          blocks[i] = 0;\r\n        }\r\n      }\r\n      if (notString) {\r\n        for (i = this.start; index < length && i < byteCount; ++index) {\r\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\r\n        }\r\n      } else {\r\n        for (i = this.start; index < length && i < byteCount; ++index) {\r\n          code = message.charCodeAt(index);\r\n          if (code < 0x80) {\r\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\r\n          } else if (code < 0x800) {\r\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          } else if (code < 0xd800 || code >= 0xe000) {\r\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          } else {\r\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\r\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          }\r\n        }\r\n      }\r\n      this.lastByteIndex = i;\r\n      if (i >= byteCount) {\r\n        this.start = i - byteCount;\r\n        this.block = blocks[blockCount];\r\n        for (i = 0; i < blockCount; ++i) {\r\n          s[i] ^= blocks[i];\r\n        }\r\n        f(s);\r\n        this.reset = true;\r\n      } else {\r\n        this.start = i;\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  Keccak.prototype.finalize = function () {\r\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\r\n    blocks[i >> 2] |= this.padding[i & 3];\r\n    if (this.lastByteIndex === this.byteCount) {\r\n      blocks[0] = blocks[blockCount];\r\n      for (i = 1; i < blockCount + 1; ++i) {\r\n        blocks[i] = 0;\r\n      }\r\n    }\r\n    blocks[blockCount - 1] |= 0x80000000;\r\n    for (i = 0; i < blockCount; ++i) {\r\n      s[i] ^= blocks[i];\r\n    }\r\n    f(s);\r\n  };\r\n\r\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var hex = '', block;\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        block = s[i];\r\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\r\n               HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\r\n               HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\r\n               HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n        i = 0;\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      block = s[i];\r\n      if (extraBytes > 0) {\r\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\r\n      }\r\n      if (extraBytes > 1) {\r\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\r\n      }\r\n      if (extraBytes > 2) {\r\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\r\n      }\r\n    }\r\n    return hex;\r\n  };\r\n\r\n  Keccak.prototype.arrayBuffer = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var bytes = this.outputBits >> 3;\r\n    var buffer;\r\n    if (extraBytes) {\r\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\r\n    } else {\r\n      buffer = new ArrayBuffer(bytes);\r\n    }\r\n    var array = new Uint32Array(buffer);\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        array[j] = s[i];\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      array[i] = s[i];\r\n      buffer = buffer.slice(0, bytes);\r\n    }\r\n    return buffer;\r\n  };\r\n\r\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\r\n\r\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var array = [], offset, block;\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        offset = j << 2;\r\n        block = s[i];\r\n        array[offset] = block & 0xFF;\r\n        array[offset + 1] = (block >> 8) & 0xFF;\r\n        array[offset + 2] = (block >> 16) & 0xFF;\r\n        array[offset + 3] = (block >> 24) & 0xFF;\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      offset = j << 2;\r\n      block = s[i];\r\n      if (extraBytes > 0) {\r\n        array[offset] = block & 0xFF;\r\n      }\r\n      if (extraBytes > 1) {\r\n        array[offset + 1] = (block >> 8) & 0xFF;\r\n      }\r\n      if (extraBytes > 2) {\r\n        array[offset + 2] = (block >> 16) & 0xFF;\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  var f = function (s) {\r\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\r\n        b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\r\n        b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\r\n        b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\r\n    for (n = 0; n < 48; n += 2) {\r\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\r\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\r\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\r\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\r\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\r\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\r\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\r\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\r\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\r\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\r\n\r\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\r\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\r\n      s[0] ^= h;\r\n      s[1] ^= l;\r\n      s[10] ^= h;\r\n      s[11] ^= l;\r\n      s[20] ^= h;\r\n      s[21] ^= l;\r\n      s[30] ^= h;\r\n      s[31] ^= l;\r\n      s[40] ^= h;\r\n      s[41] ^= l;\r\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\r\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\r\n      s[2] ^= h;\r\n      s[3] ^= l;\r\n      s[12] ^= h;\r\n      s[13] ^= l;\r\n      s[22] ^= h;\r\n      s[23] ^= l;\r\n      s[32] ^= h;\r\n      s[33] ^= l;\r\n      s[42] ^= h;\r\n      s[43] ^= l;\r\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\r\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\r\n      s[4] ^= h;\r\n      s[5] ^= l;\r\n      s[14] ^= h;\r\n      s[15] ^= l;\r\n      s[24] ^= h;\r\n      s[25] ^= l;\r\n      s[34] ^= h;\r\n      s[35] ^= l;\r\n      s[44] ^= h;\r\n      s[45] ^= l;\r\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\r\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\r\n      s[6] ^= h;\r\n      s[7] ^= l;\r\n      s[16] ^= h;\r\n      s[17] ^= l;\r\n      s[26] ^= h;\r\n      s[27] ^= l;\r\n      s[36] ^= h;\r\n      s[37] ^= l;\r\n      s[46] ^= h;\r\n      s[47] ^= l;\r\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\r\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\r\n      s[8] ^= h;\r\n      s[9] ^= l;\r\n      s[18] ^= h;\r\n      s[19] ^= l;\r\n      s[28] ^= h;\r\n      s[29] ^= l;\r\n      s[38] ^= h;\r\n      s[39] ^= l;\r\n      s[48] ^= h;\r\n      s[49] ^= l;\r\n\r\n      b0 = s[0];\r\n      b1 = s[1];\r\n      b32 = (s[11] << 4) | (s[10] >>> 28);\r\n      b33 = (s[10] << 4) | (s[11] >>> 28);\r\n      b14 = (s[20] << 3) | (s[21] >>> 29);\r\n      b15 = (s[21] << 3) | (s[20] >>> 29);\r\n      b46 = (s[31] << 9) | (s[30] >>> 23);\r\n      b47 = (s[30] << 9) | (s[31] >>> 23);\r\n      b28 = (s[40] << 18) | (s[41] >>> 14);\r\n      b29 = (s[41] << 18) | (s[40] >>> 14);\r\n      b20 = (s[2] << 1) | (s[3] >>> 31);\r\n      b21 = (s[3] << 1) | (s[2] >>> 31);\r\n      b2 = (s[13] << 12) | (s[12] >>> 20);\r\n      b3 = (s[12] << 12) | (s[13] >>> 20);\r\n      b34 = (s[22] << 10) | (s[23] >>> 22);\r\n      b35 = (s[23] << 10) | (s[22] >>> 22);\r\n      b16 = (s[33] << 13) | (s[32] >>> 19);\r\n      b17 = (s[32] << 13) | (s[33] >>> 19);\r\n      b48 = (s[42] << 2) | (s[43] >>> 30);\r\n      b49 = (s[43] << 2) | (s[42] >>> 30);\r\n      b40 = (s[5] << 30) | (s[4] >>> 2);\r\n      b41 = (s[4] << 30) | (s[5] >>> 2);\r\n      b22 = (s[14] << 6) | (s[15] >>> 26);\r\n      b23 = (s[15] << 6) | (s[14] >>> 26);\r\n      b4 = (s[25] << 11) | (s[24] >>> 21);\r\n      b5 = (s[24] << 11) | (s[25] >>> 21);\r\n      b36 = (s[34] << 15) | (s[35] >>> 17);\r\n      b37 = (s[35] << 15) | (s[34] >>> 17);\r\n      b18 = (s[45] << 29) | (s[44] >>> 3);\r\n      b19 = (s[44] << 29) | (s[45] >>> 3);\r\n      b10 = (s[6] << 28) | (s[7] >>> 4);\r\n      b11 = (s[7] << 28) | (s[6] >>> 4);\r\n      b42 = (s[17] << 23) | (s[16] >>> 9);\r\n      b43 = (s[16] << 23) | (s[17] >>> 9);\r\n      b24 = (s[26] << 25) | (s[27] >>> 7);\r\n      b25 = (s[27] << 25) | (s[26] >>> 7);\r\n      b6 = (s[36] << 21) | (s[37] >>> 11);\r\n      b7 = (s[37] << 21) | (s[36] >>> 11);\r\n      b38 = (s[47] << 24) | (s[46] >>> 8);\r\n      b39 = (s[46] << 24) | (s[47] >>> 8);\r\n      b30 = (s[8] << 27) | (s[9] >>> 5);\r\n      b31 = (s[9] << 27) | (s[8] >>> 5);\r\n      b12 = (s[18] << 20) | (s[19] >>> 12);\r\n      b13 = (s[19] << 20) | (s[18] >>> 12);\r\n      b44 = (s[29] << 7) | (s[28] >>> 25);\r\n      b45 = (s[28] << 7) | (s[29] >>> 25);\r\n      b26 = (s[38] << 8) | (s[39] >>> 24);\r\n      b27 = (s[39] << 8) | (s[38] >>> 24);\r\n      b8 = (s[48] << 14) | (s[49] >>> 18);\r\n      b9 = (s[49] << 14) | (s[48] >>> 18);\r\n\r\n      s[0] = b0 ^ (~b2 & b4);\r\n      s[1] = b1 ^ (~b3 & b5);\r\n      s[10] = b10 ^ (~b12 & b14);\r\n      s[11] = b11 ^ (~b13 & b15);\r\n      s[20] = b20 ^ (~b22 & b24);\r\n      s[21] = b21 ^ (~b23 & b25);\r\n      s[30] = b30 ^ (~b32 & b34);\r\n      s[31] = b31 ^ (~b33 & b35);\r\n      s[40] = b40 ^ (~b42 & b44);\r\n      s[41] = b41 ^ (~b43 & b45);\r\n      s[2] = b2 ^ (~b4 & b6);\r\n      s[3] = b3 ^ (~b5 & b7);\r\n      s[12] = b12 ^ (~b14 & b16);\r\n      s[13] = b13 ^ (~b15 & b17);\r\n      s[22] = b22 ^ (~b24 & b26);\r\n      s[23] = b23 ^ (~b25 & b27);\r\n      s[32] = b32 ^ (~b34 & b36);\r\n      s[33] = b33 ^ (~b35 & b37);\r\n      s[42] = b42 ^ (~b44 & b46);\r\n      s[43] = b43 ^ (~b45 & b47);\r\n      s[4] = b4 ^ (~b6 & b8);\r\n      s[5] = b5 ^ (~b7 & b9);\r\n      s[14] = b14 ^ (~b16 & b18);\r\n      s[15] = b15 ^ (~b17 & b19);\r\n      s[24] = b24 ^ (~b26 & b28);\r\n      s[25] = b25 ^ (~b27 & b29);\r\n      s[34] = b34 ^ (~b36 & b38);\r\n      s[35] = b35 ^ (~b37 & b39);\r\n      s[44] = b44 ^ (~b46 & b48);\r\n      s[45] = b45 ^ (~b47 & b49);\r\n      s[6] = b6 ^ (~b8 & b0);\r\n      s[7] = b7 ^ (~b9 & b1);\r\n      s[16] = b16 ^ (~b18 & b10);\r\n      s[17] = b17 ^ (~b19 & b11);\r\n      s[26] = b26 ^ (~b28 & b20);\r\n      s[27] = b27 ^ (~b29 & b21);\r\n      s[36] = b36 ^ (~b38 & b30);\r\n      s[37] = b37 ^ (~b39 & b31);\r\n      s[46] = b46 ^ (~b48 & b40);\r\n      s[47] = b47 ^ (~b49 & b41);\r\n      s[8] = b8 ^ (~b0 & b2);\r\n      s[9] = b9 ^ (~b1 & b3);\r\n      s[18] = b18 ^ (~b10 & b12);\r\n      s[19] = b19 ^ (~b11 & b13);\r\n      s[28] = b28 ^ (~b20 & b22);\r\n      s[29] = b29 ^ (~b21 & b23);\r\n      s[38] = b38 ^ (~b30 & b32);\r\n      s[39] = b39 ^ (~b31 & b33);\r\n      s[48] = b48 ^ (~b40 & b42);\r\n      s[49] = b49 ^ (~b41 & b43);\r\n\r\n      s[0] ^= RC[n];\r\n      s[1] ^= RC[n + 1];\r\n    }\r\n  };\r\n\r\n  if (COMMON_JS) {\r\n    module.exports = methods;\r\n  } else {\r\n    for (var i = 0; i < methodNames.length; ++i) {\r\n      root[methodNames[i]] = methods[methodNames[i]];\r\n    }\r\n  }\r\n})();\r\n","\"use strict\";\nimport sha3 from \"js-sha3\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function keccak256(data) {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n//# sourceMappingURL=index.js.map","export const version = \"rlp/5.0.4\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n//See: https://github.com/ethereum/wiki/wiki/RLP\nimport { arrayify, hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction arrayifyInteger(value) {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        let payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n    const data = Array.prototype.slice.call(arrayify(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nexport function encode(object) {\n    return hexlify(_encode(object));\n}\nfunction _decodeChildren(data, offset, childOffset, length) {\n    const result = [];\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, {});\n        }\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\nexport function decode(data) {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n//# sourceMappingURL=index.js.map","export const version = \"address/5.0.5\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n// We use this for base 36 maths\nimport { BN } from \"bn.js\";\nimport { arrayify, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction getChecksumAddress(address) {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = arrayify(keccak256(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nconst ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\n;\nexport function getAddress(address) {\n    let result = null;\n    if (typeof (address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") {\n            address = \"0x\" + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n        result = (new BN(address.substring(4), 36)).toString(16);\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        result = getChecksumAddress(\"0x\" + result);\n    }\n    else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    return result;\n}\nexport function isAddress(address) {\n    try {\n        getAddress(address);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getIcapAddress(address) {\n    let base36 = (new BN(getAddress(address).substring(2), 16)).toString(36).toUpperCase();\n    while (base36.length < 30) {\n        base36 = \"0\" + base36;\n    }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction) {\n    let from = null;\n    try {\n        from = getAddress(transaction.from);\n    }\n    catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n    return getAddress(hexDataSlice(keccak256(encode([from, nonce])), 12));\n}\nexport function getCreate2Address(from, salt, initCodeHash) {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([\"0xff\", getAddress(from), salt, initCodeHash])), 12));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    encode(writer, value) {\n        try {\n            getAddress(value);\n        }\n        catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nimport { Coder, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\nexport function pack(writer, coders, values) {\n    let arrayValues = null;\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\nexport function unpack(reader, coders) {\n    let values = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) {\n                accum[name] = 0;\n            }\n            accum[name]++;\n        }\n        return accum;\n    }, {});\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder, index) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) {\n            return;\n        }\n        if (name === \"length\") {\n            name = \"_length\";\n        }\n        if (values[name] != null) {\n            return;\n        }\n        const value = values[index];\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                get: () => { throw value; }\n            });\n        }\n        else {\n            values[name] = value;\n        }\n    });\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                get: () => { throw value; }\n            });\n        }\n    }\n    return Object.freeze(values);\n}\nexport class ArrayCoder extends Coder {\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        this.coder = coder;\n        this.length = length;\n    }\n    encode(writer, value) {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n//# sourceMappingURL=array.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    encode(writer, value) {\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    encode(writer, value) {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n    encode(writer, value) {\n        let data = arrayify(value);\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes([]);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n//# sourceMappingURL=null.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nconst AddressZero = \"0x0000000000000000000000000000000000000000\";\nconst HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n// NFKC (composed)             // (decomposed)\nconst EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\nconst NegativeOne = BigNumber.from(-1);\nconst Zero = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst Two = BigNumber.from(2);\nconst WeiPerEther = BigNumber.from(\"1000000000000000000\");\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nexport { AddressZero, HashZero, EtherSymbol, NegativeOne, Zero, One, Two, WeiPerEther, MaxUint256 };\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\nimport { Coder } from \"./abstract-coder\";\nexport class NumberCoder extends Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        this.size = size;\n        this.signed = signed;\n    }\n    encode(writer, value) {\n        let v = BigNumber.from(value);\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        }\n        else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n        return writer.writeValue(v);\n    }\n    decode(reader) {\n        let value = reader.readValue().mask(this.size * 8);\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n//# sourceMappingURL=number.js.map","export const version = \"strings/5.0.5\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nexport var UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\n;\nexport var Utf8ErrorReason;\n(function (Utf8ErrorReason) {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\";\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n    // The string is an overlong reperesentation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason || (Utf8ErrorReason = {}));\n;\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    return logger.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n// Common error handing strategies\nexport const Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes, onError) {\n    if (onError == null) {\n        onError = Utf8ErrorFuncs.error;\n    }\n    bytes = arrayify(bytes);\n    const result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        const c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            }\n            else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid contimuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return arrayify(result);\n}\n;\nfunction escapeChar(value) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\nexport function _toEscapedUtf8String(bytes, onError) {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8: return \"\\\\b\";\n                case 9: return \"\\\\t\";\n                case 10: return \"\\\\n\";\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\nexport function _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\nexport function toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\nexport function toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n//# sourceMappingURL=utf8.js.map","\"use strict\";\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nexport function _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nexport function _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nexport function _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nexport function nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    // IDNA: 4.2.4\n    if (name.length > 63) {\n        throw new Error(\"too long\");\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map","\"use strict\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { DynamicBytesCoder } from \"./bytes\";\nexport class StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    encode(writer, value) {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport class TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    encode(writer, value) {\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n//# sourceMappingURL=tuple.js.map","\"use strict\";\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Reader, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\nimport { ParamType } from \"./fragments\";\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nexport class AbiCoder {\n    constructor(coerceFunc) {\n        logger.checkNew(new.target, AbiCoder);\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n    _getCoder(param) {\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n    _getWordSize() { return 32; }\n    _getReader(data, allowLoose) {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n    _getWriter() {\n        return new Writer(this._getWordSize());\n    }\n    encode(types, values) {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    decode(types, data, loose) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\nexport const defaultAbiCoder = new AbiCoder();\n//# sourceMappingURL=abi-coder.js.map","export const version = \"hash/5.0.5\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { concat, hexlify } from \"@ethersproject/bytes\";\nimport { nameprep, toUtf8Bytes } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nconst Zeros = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nexport function isValidName(name) {\n    try {\n        const comps = name.split(\".\");\n        for (let i = 0; i < comps.length; i++) {\n            if (nameprep(comps[i]).length === 0) {\n                throw new Error(\"empty\");\n            }\n        }\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        logger.throwArgumentError(\"invalid address - \" + String(name), \"name\", name);\n    }\n    let result = Zeros;\n    while (name.length) {\n        const partition = name.match(Partition);\n        const label = toUtf8Bytes(nameprep(partition[3]));\n        result = keccak256(concat([result, keccak256(label)]));\n        name = partition[2] || \"\";\n    }\n    return hexlify(result);\n}\nexport function id(text) {\n    return keccak256(toUtf8Bytes(text));\n}\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\nimport { defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport { checkResultErrors };\nexport class LogDescription extends Description {\n}\nexport class TransactionDescription extends Description {\n}\nexport class Indexed extends Description {\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n}\nfunction wrapAccessError(property, error) {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n    wrap.error = error;\n    return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    constructor(fragments) {\n        logger.checkNew(new.target, Interface);\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n        defineReadOnly(this, \"_abiCoder\", getStatic((new.target), \"getAbiCoder\")());\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"errors\", {});\n        defineReadOnly(this, \"events\", {});\n        defineReadOnly(this, \"structs\", {});\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                default:\n                    return;\n            }\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n            bucket[signature] = fragment;\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n    format(format) {\n        if (!format) {\n            format = FormatTypes.full;\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n            return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        return abi;\n    }\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder() {\n        return defaultAbiCoder;\n    }\n    static getAddress(address) {\n        return getAddress(address);\n    }\n    static getSighash(functionFragment) {\n        return hexDataSlice(id(functionFragment.format()), 0, 4);\n    }\n    static getEventTopic(eventFragment) {\n        return id(eventFragment.format());\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n            return this.functions[matching[0]];\n        }\n        // Normlize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic) {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n            return this.events[matching[0]];\n        }\n        // Normlize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(functionFragment) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return getStatic(this.constructor, \"getSighash\")(functionFragment);\n    }\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n    _decodeParams(params, data) {\n        return this._abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this._abiCoder.encode(params, values);\n    }\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [])\n        ]));\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        let bytes = arrayify(data);\n        let reason = null;\n        let errorSignature = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                }\n                catch (error) { }\n                break;\n            case 4:\n                if (hexlify(bytes.slice(0, 4)) === \"0x08c379a0\") {\n                    errorSignature = \"Error(string)\";\n                    reason = this._abiCoder.decode([\"string\"], bytes.slice(4))[0];\n                }\n                break;\n        }\n        return logger.throwError(\"call revert exception\", Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            errorSignature: errorSignature,\n            errorArgs: [reason],\n            reason: reason\n        });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            });\n        }\n        let topics = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this._abiCoder.encode([\"address\"], [value]);\n            }\n            return hexZeroPad(hexlify(value), 32);\n        };\n        values.forEach((value, index) => {\n            let param = eventFragment.inputs[index];\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TOOD\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this._abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this._abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment, data, topics) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n        let indexed = [];\n        let nonIndexed = [];\n        let dynamic = [];\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)) : null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n        let result = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n                }\n                else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n                }\n                else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        result[index] = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    result[index] = error;\n                }\n            }\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }\n                    });\n                }\n                else {\n                    result[param.name] = value;\n                }\n            }\n        });\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    get: () => { throw wrapAccessError(`index ${i}`, value); }\n                });\n            }\n        }\n        return Object.freeze(result);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx) {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log) {\n        let fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe jsut a fragment?\n        return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n    static isInterface(value) {\n        return !!(value && value._isInterface);\n    }\n}\n//# sourceMappingURL=interface.js.map","export const version = \"abstract-provider/5.0.5\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Description, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\nexport class ForkEvent extends Description {\n    static isForkEvent(value) {\n        return !!(value && value._isForkEvent);\n    }\n}\nexport class BlockForkEvent extends ForkEvent {\n    constructor(blockHash, expiry) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\nexport class TransactionForkEvent extends ForkEvent {\n    constructor(hash, expiry) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\nexport class TransactionOrderForkEvent extends ForkEvent {\n    constructor(beforeHash, afterHash, expiry) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n///////////////////////////////\n// Exported Abstracts\nexport class Provider {\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n    // Alias for \"on\"\n    addListener(eventName, listener) {\n        return this.on(eventName, listener);\n    }\n    // Alias for \"off\"\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n    static isProvider(value) {\n        return !!(value && value._isProvider);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"abstract-signer/5.0.6\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst allowedTransactionKeys = [\n    \"chainId\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"nonce\", \"to\", \"value\"\n];\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\nexport class Signer {\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n    ///////////////////\n    // Sub-classes MAY override these\n    getBalance(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getBalance\");\n            return yield this.provider.getBalance(this.getAddress(), blockTag);\n        });\n    }\n    getTransactionCount(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getTransactionCount\");\n            return yield this.provider.getTransactionCount(this.getAddress(), blockTag);\n        });\n    }\n    // Populates \"from\" if unspecified, and estimates the gas for the transation\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"estimateGas\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.estimateGas(tx);\n        });\n    }\n    // Populates \"from\" if unspecified, and calls with the transation\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"call\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.call(tx, blockTag);\n        });\n    }\n    // Populates all fields in a transaction, signs it and sends it to the network\n    sendTransaction(transaction) {\n        this._checkProvider(\"sendTransaction\");\n        return this.populateTransaction(transaction).then((tx) => {\n            return this.signTransaction(tx).then((signedTx) => {\n                return this.provider.sendTransaction(signedTx);\n            });\n        });\n    }\n    getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getChainId\");\n            const network = yield this.provider.getNetwork();\n            return network.chainId;\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getGasPrice\");\n            return yield this.provider.getGasPrice();\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"resolveName\");\n            return yield this.provider.resolveName(name);\n        });\n    }\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction) {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n        const tx = shallowCopy(transaction);\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n        }\n        else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0] !== result[1]) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n        return tx;\n    }\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    populateTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            if (tx.to != null) {\n                tx.to = Promise.resolve(tx.to).then((to) => this.resolveName(to));\n            }\n            if (tx.gasPrice == null) {\n                tx.gasPrice = this.getGasPrice();\n            }\n            if (tx.nonce == null) {\n                tx.nonce = this.getTransactionCount(\"pending\");\n            }\n            if (tx.gasLimit == null) {\n                tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                    if (forwardErrors.indexOf(error.code) >= 0) {\n                        throw error;\n                    }\n                    return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                        error: error,\n                        tx: tx\n                    });\n                });\n            }\n            if (tx.chainId == null) {\n                tx.chainId = this.getChainId();\n            }\n            else {\n                tx.chainId = Promise.all([\n                    Promise.resolve(tx.chainId),\n                    this.getChainId()\n                ]).then((results) => {\n                    if (results[1] !== 0 && results[0] !== results[1]) {\n                        logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                    }\n                    return results[0];\n                });\n            }\n            return yield resolveProperties(tx);\n        });\n    }\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n    _checkProvider(operation) {\n        if (!this.provider) {\n            logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: (operation || \"_checkProvider\")\n            });\n        }\n    }\n    static isSigner(value) {\n        return !!(value && value._isSigner);\n    }\n}\nexport class VoidSigner extends Signer {\n    constructor(address, provider) {\n        logger.checkNew(new.target, VoidSigner);\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    _fail(message, operation) {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n    signMessage(message) {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n    signTransaction(transaction) {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n    connect(provider) {\n        return new VoidSigner(this.address, provider);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"contracts/5.0.5\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { checkResultErrors, Indexed, Interface } from \"@ethersproject/abi\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n// @TOOD remove dependences transactions\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n///////////////////////////////\nconst allowedTransactionKeys = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true\n};\nfunction resolveName(resolver, nameOrPromise) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const name = yield nameOrPromise;\n        // If it is already an address, just use it (after adding checksum)\n        try {\n            return getAddress(name);\n        }\n        catch (error) { }\n        if (!resolver) {\n            logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"resolveName\"\n            });\n        }\n        const address = yield resolver.resolveName(name);\n        if (address == null) {\n            logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n        }\n        return address;\n    });\n}\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nfunction resolveAddresses(resolver, value, paramType) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (Array.isArray(paramType)) {\n            return yield Promise.all(paramType.map((paramType, index) => {\n                return resolveAddresses(resolver, ((Array.isArray(value)) ? value[index] : value[paramType.name]), paramType);\n            }));\n        }\n        if (paramType.type === \"address\") {\n            return yield resolveName(resolver, value);\n        }\n        if (paramType.type === \"tuple\") {\n            return yield resolveAddresses(resolver, value, paramType.components);\n        }\n        if (paramType.baseType === \"array\") {\n            if (!Array.isArray(value)) {\n                return Promise.reject(new Error(\"invalid value for array\"));\n            }\n            return yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n        }\n        return value;\n    });\n}\nfunction populateTransaction(contract, fragment, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // If an extra argument is given, it is overrides\n        let overrides = {};\n        if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            overrides = shallowCopy(args.pop());\n        }\n        // Make sure the parameter count matches\n        logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n        // Populate \"from\" override (allow promises)\n        if (contract.signer) {\n            if (overrides.from) {\n                // Contracts with a Signer are from the Signer's frame-of-reference;\n                // but we allow overriding \"from\" if it matches the signer\n                overrides.from = resolveProperties({\n                    override: resolveName(contract.signer, overrides.from),\n                    signer: contract.signer.getAddress()\n                }).then((check) => __awaiter(this, void 0, void 0, function* () {\n                    if (getAddress(check.signer) !== check.override) {\n                        logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"overrides.from\"\n                        });\n                    }\n                    return check.override;\n                }));\n            }\n            else {\n                overrides.from = contract.signer.getAddress();\n            }\n        }\n        else if (overrides.from) {\n            overrides.from = resolveName(contract.provider, overrides.from);\n            //} else {\n            // Contracts without a signer can override \"from\", and if\n            // unspecified the zero address is used\n            //overrides.from = AddressZero;\n        }\n        // Wait for all dependencies to be resolved (prefer the signer over the provider)\n        const resolved = yield resolveProperties({\n            args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n            address: contract.resolvedAddress,\n            overrides: (resolveProperties(overrides) || {})\n        });\n        // The ABI coded transaction\n        const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n        const tx = {\n            data: data,\n            to: resolved.address\n        };\n        // Resolved Overrides\n        const ro = resolved.overrides;\n        // Populate simple overrides\n        if (ro.nonce != null) {\n            tx.nonce = BigNumber.from(ro.nonce).toNumber();\n        }\n        if (ro.gasLimit != null) {\n            tx.gasLimit = BigNumber.from(ro.gasLimit);\n        }\n        if (ro.gasPrice != null) {\n            tx.gasPrice = BigNumber.from(ro.gasPrice);\n        }\n        if (ro.from != null) {\n            tx.from = ro.from;\n        }\n        // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n        if (tx.gasLimit == null && fragment.gas != null) {\n            // Conmpute the intrinisic gas cost for this transaction\n            // @TODO: This is based on the yellow paper as of Petersburg; this is something\n            // we may wish to parameterize in v6 as part of the Network object. Since this\n            // is always a non-nil to address, we can ignore G_create, but may wish to add\n            // similar logic to the ContractFactory.\n            let intrinsic = 21000;\n            const bytes = arrayify(data);\n            for (let i = 0; i < bytes.length; i++) {\n                intrinsic += 4;\n                if (bytes[i]) {\n                    intrinsic += 64;\n                }\n            }\n            tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n        }\n        // Populate \"value\" override\n        if (ro.value) {\n            const roValue = BigNumber.from(ro.value);\n            if (!roValue.isZero() && !fragment.payable) {\n                logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: overrides.value\n                });\n            }\n            tx.value = roValue;\n        }\n        // Remvoe the overrides\n        delete overrides.nonce;\n        delete overrides.gasLimit;\n        delete overrides.gasPrice;\n        delete overrides.from;\n        delete overrides.value;\n        // Make sure there are no stray overrides, which may indicate a\n        // typo or using an unsupported key.\n        const leftovers = Object.keys(overrides).filter((key) => (overrides[key] != null));\n        if (leftovers.length) {\n            logger.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(\",\")}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides\",\n                overrides: leftovers\n            });\n        }\n        return tx;\n    });\n}\nfunction buildPopulate(contract, fragment) {\n    return function (...args) {\n        return populateTransaction(contract, fragment, args);\n    };\n}\nfunction buildEstimate(contract, fragment) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!signerOrProvider) {\n                logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"estimateGas\"\n                });\n            }\n            const tx = yield populateTransaction(contract, fragment, args);\n            return yield signerOrProvider.estimateGas(tx);\n        });\n    };\n}\nfunction buildCall(contract, fragment, collapseSimple) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Extract the \"blockTag\" override if present\n            let blockTag = undefined;\n            if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n                const overrides = shallowCopy(args.pop());\n                if (overrides.blockTag != null) {\n                    blockTag = yield overrides.blockTag;\n                }\n                delete overrides.blockTag;\n                args.push(overrides);\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed(blockTag);\n            }\n            // Call a node and get the result\n            const tx = yield populateTransaction(contract, fragment, args);\n            const result = yield signerOrProvider.call(tx, blockTag);\n            try {\n                let value = contract.interface.decodeFunctionResult(fragment, result);\n                if (collapseSimple && fragment.outputs.length === 1) {\n                    value = value[0];\n                }\n                return value;\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    error.address = contract.address;\n                    error.args = args;\n                    error.transaction = tx;\n                }\n                throw error;\n            }\n        });\n    };\n}\nfunction buildSend(contract, fragment) {\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!contract.signer) {\n                logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"sendTransaction\"\n                });\n            }\n            // If the contract was just deployed, wait until it is minded\n            if (contract.deployTransaction != null) {\n                yield contract._deployed();\n            }\n            const txRequest = yield populateTransaction(contract, fragment, args);\n            const tx = yield contract.signer.sendTransaction(txRequest);\n            // Tweak the tw.wait so the receipt has extra properties\n            const wait = tx.wait.bind(tx);\n            tx.wait = (confirmations) => {\n                return wait(confirmations).then((receipt) => {\n                    receipt.events = receipt.logs.map((log) => {\n                        let event = deepCopy(log);\n                        let parsed = null;\n                        try {\n                            parsed = contract.interface.parseLog(log);\n                        }\n                        catch (e) { }\n                        // Successfully parsed the event log; include it\n                        if (parsed) {\n                            event.args = parsed.args;\n                            event.decode = (data, topics) => {\n                                return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                            };\n                            event.event = parsed.name;\n                            event.eventSignature = parsed.signature;\n                        }\n                        // Useful operations\n                        event.removeListener = () => { return contract.provider; };\n                        event.getBlock = () => {\n                            return contract.provider.getBlock(receipt.blockHash);\n                        };\n                        event.getTransaction = () => {\n                            return contract.provider.getTransaction(receipt.transactionHash);\n                        };\n                        event.getTransactionReceipt = () => {\n                            return Promise.resolve(receipt);\n                        };\n                        return event;\n                    });\n                    return receipt;\n                });\n            };\n            return tx;\n        });\n    };\n}\nfunction buildDefault(contract, fragment, collapseSimple) {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\nfunction getEventTag(filter) {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\") : \"\");\n}\nclass RunningEvent {\n    constructor(tag, filter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [];\n    }\n    addListener(listener, once) {\n        this._listeners.push({ listener: listener, once: once });\n    }\n    removeListener(listener) {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) {\n                return true;\n            }\n            done = true;\n            return false;\n        });\n    }\n    removeAllListeners() {\n        this._listeners = [];\n    }\n    listeners() {\n        return this._listeners.map((i) => i.listener);\n    }\n    listenerCount() {\n        return this._listeners.length;\n    }\n    run(args) {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n            const argsCopy = args.slice();\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n        return listenerCount;\n    }\n    prepareEvent(event) {\n    }\n    // Returns the array that will be applied to an emit\n    getEmit(event) {\n        return [event];\n    }\n}\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additioanlly dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    constructor(address, contractInterface, fragment, topics) {\n        const filter = {\n            address: address\n        };\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) {\n                logger.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n            }\n            filter.topics = topics.slice();\n        }\n        else {\n            filter.topics = [topic];\n        }\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n        event.decode = (data, topics) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        }\n        catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n    getEmit(event) {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) {\n            throw errors[0].error;\n        }\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n// A Wildard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    constructor(address, contractInterface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n            event.decode = (data, topics) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n            event.args = parsed.args;\n        }\n        catch (error) {\n            // No matching event\n        }\n    }\n}\nexport class Contract {\n    constructor(addressOrName, contractInterface, signerOrProvider) {\n        logger.checkNew(new.target, Contract);\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic((new.target), \"getInterface\")(contractInterface));\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        }\n        else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n        defineReadOnly(this, \"callStatic\", {});\n        defineReadOnly(this, \"estimateGas\", {});\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"populateTransaction\", {});\n        defineReadOnly(this, \"filters\", {});\n        {\n            const uniqueFilters = {};\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                    };\n                });\n                if (!uniqueFilters[event.name]) {\n                    uniqueFilters[event.name] = [];\n                }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                }\n                else {\n                    logger.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n                }\n            });\n        }\n        defineReadOnly(this, \"_runningEvents\", {});\n        defineReadOnly(this, \"_wrappedEmits\", {});\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        }\n        else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            }\n            catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n        const uniqueNames = {};\n        const uniqueSignatures = {};\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${JSON.stringify(name)}`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[name]) {\n                    uniqueNames[name] = [];\n                }\n                uniqueNames[name].push(signature);\n            }\n            if (this[signature] == null) {\n                defineReadOnly(this, signature, buildDefault(this, fragment, true));\n            }\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) {\n                return;\n            }\n            const signature = signatures[0];\n            if (this[name] == null) {\n                defineReadOnly(this, name, this[signature]);\n            }\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n    static getContractAddress(transaction) {\n        return getContractAddress(transaction);\n    }\n    static getInterface(contractInterface) {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n    // @TODO: Allow timeout?\n    deployed() {\n        return this._deployed();\n    }\n    _deployed(blockTag) {\n        if (!this._deployedPromise) {\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n            }\n            else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n        return this._deployedPromise;\n    }\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n    fallback(overrides) {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" });\n        }\n        const tx = shallowCopy(overrides || {});\n        [\"from\", \"to\"].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider) {\n        if (typeof (signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n        const contract = new (this.constructor)(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n        return contract;\n    }\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName) {\n        return new (this.constructor)(addressOrName, this.interface, this.signer || this.provider);\n    }\n    static isIndexed(value) {\n        return Indexed.isIndexed(value);\n    }\n    _normalizeRunningEvent(runningEvent) {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n        }\n        return runningEvent;\n    }\n    _getRunningEvent(eventName) {\n        if (typeof (eventName) === \"string\") {\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName);\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof (topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            }\n            catch (error) { }\n            // Filter by the unknown topichash\n            const filter = {\n                address: this.address,\n                topics: eventName.topics\n            };\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n    _checkRunningEvents(runningEvent) {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent, log, listener) {\n        const event = deepCopy(log);\n        event.removeListener = () => {\n            if (!listener) {\n                return;\n            }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); };\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); };\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); };\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n        return event;\n    }\n    _addEventListener(runningEvent, listener, once) {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" });\n        }\n        runningEvent.addListener(listener, once);\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    }\n                    catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n    queryFilter(event, fromBlockOrBlockhash, toBlock) {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n        if (typeof (fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            filter.blockHash = fromBlockOrBlockhash;\n        }\n        else {\n            filter.fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash : 0);\n            filter.toBlock = ((toBlock != null) ? toBlock : \"latest\");\n        }\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n    on(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n    once(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n    emit(eventName, ...args) {\n        if (!this.provider) {\n            return false;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!this.provider) {\n            return 0;\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n    listeners(eventName) {\n        if (!this.provider) {\n            return [];\n        }\n        if (eventName == null) {\n            const result = [];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener);\n                });\n            }\n            return result;\n        }\n        return this._getRunningEvent(eventName).listeners();\n    }\n    removeAllListeners(eventName) {\n        if (!this.provider) {\n            return this;\n        }\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    off(eventName, listener) {\n        if (!this.provider) {\n            return this;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n}\nexport class ContractFactory {\n    constructor(contractInterface, bytecode, signer) {\n        let bytecodeHex = null;\n        if (typeof (bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        }\n        else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        }\n        else if (bytecode && typeof (bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = bytecode.object;\n        }\n        else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") {\n            bytecodeHex = \"0x\" + bytecodeHex;\n        }\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic((new.target), \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n    // @TODO: Future; rename to populteTransaction?\n    getDeployTransaction(...args) {\n        let tx = {};\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n        return tx;\n    }\n    deploy(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let overrides = {};\n            // If 1 extra parameter was passed in, it contains overrides\n            if (args.length === this.interface.deploy.inputs.length + 1) {\n                overrides = args.pop();\n            }\n            // Make sure the call matches the constructor signature\n            logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n            // Resolve ENS names and promises in the arguments\n            const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n            params.push(overrides);\n            // Get the deployment transaction (with optional overrides)\n            const unsignedTx = this.getDeployTransaction(...params);\n            // Send the deployment transaction\n            const tx = yield this.signer.sendTransaction(unsignedTx);\n            const address = getStatic(this.constructor, \"getContractAddress\")(tx);\n            const contract = getStatic(this.constructor, \"getContract\")(address, this.interface, this.signer);\n            defineReadOnly(contract, \"deployTransaction\", tx);\n            return contract;\n        });\n    }\n    attach(address) {\n        return (this.constructor).getContract(address, this.interface, this.signer);\n    }\n    connect(signer) {\n        return new (this.constructor)(this.interface, this.bytecode, signer);\n    }\n    static fromSolidity(compilerOutput, signer) {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n        if (typeof (compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n        const abi = compilerOutput.abi;\n        let bytecode = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        }\n        else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n        return new this(abi, bytecode, signer);\n    }\n    static getInterface(contractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n    static getContractAddress(tx) {\n        return getContractAddress(tx);\n    }\n    static getContract(address, contractInterface, signer) {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n//# sourceMappingURL=index.js.map","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, BigNumberish } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport { Contract, ContractFactory, Overrides } from \"@ethersproject/contracts\";\n\nimport type { Bridge } from \"./Bridge\";\n\nexport class BridgeFactory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    chainID: BigNumberish,\n    initialRelayers: string[],\n    initialRelayerThreshold: BigNumberish,\n    fee: BigNumberish,\n    expiry: BigNumberish,\n    overrides?: Overrides\n  ): Promise<Bridge> {\n    return super.deploy(\n      chainID,\n      initialRelayers,\n      initialRelayerThreshold,\n      fee,\n      expiry,\n      overrides || {}\n    ) as Promise<Bridge>;\n  }\n  getDeployTransaction(\n    chainID: BigNumberish,\n    initialRelayers: string[],\n    initialRelayerThreshold: BigNumberish,\n    fee: BigNumberish,\n    expiry: BigNumberish,\n    overrides?: Overrides\n  ): TransactionRequest {\n    return super.getDeployTransaction(\n      chainID,\n      initialRelayers,\n      initialRelayerThreshold,\n      fee,\n      expiry,\n      overrides || {}\n    );\n  }\n  attach(address: string): Bridge {\n    return super.attach(address) as Bridge;\n  }\n  connect(signer: Signer): BridgeFactory {\n    return super.connect(signer) as BridgeFactory;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): Bridge {\n    return new Contract(address, _abi, signerOrProvider) as Bridge;\n  }\n}\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"uint8\",\n        name: \"chainID\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"address[]\",\n        name: \"initialRelayers\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"initialRelayerThreshold\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"fee\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expiry\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint8\",\n        name: \"destinationChainID\",\n        type: \"uint8\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"resourceID\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint64\",\n        name: \"depositNonce\",\n        type: \"uint64\",\n      },\n    ],\n    name: \"Deposit\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Paused\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint8\",\n        name: \"originChainID\",\n        type: \"uint8\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint64\",\n        name: \"depositNonce\",\n        type: \"uint64\",\n      },\n      {\n        indexed: true,\n        internalType: \"enum Bridge.ProposalStatus\",\n        name: \"status\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"resourceID\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"dataHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"ProposalEvent\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint8\",\n        name: \"originChainID\",\n        type: \"uint8\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint64\",\n        name: \"depositNonce\",\n        type: \"uint64\",\n      },\n      {\n        indexed: true,\n        internalType: \"enum Bridge.ProposalStatus\",\n        name: \"status\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes32\",\n        name: \"resourceID\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"ProposalVote\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"relayer\",\n        type: \"address\",\n      },\n    ],\n    name: \"RelayerAdded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"relayer\",\n        type: \"address\",\n      },\n    ],\n    name: \"RelayerRemoved\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"newThreshold\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RelayerThresholdChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"Unpaused\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"RELAYER_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"_chainID\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"_depositCounts\",\n    outputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint64\",\n        name: \"\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"_depositRecords\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"_expiry\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"_fee\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint72\",\n        name: \"\",\n        type: \"uint72\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"_hasVotedOnProposal\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint72\",\n        name: \"\",\n        type: \"uint72\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"_proposals\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"_resourceID\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"_dataHash\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"enum Bridge.ProposalStatus\",\n        name: \"_status\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_proposedBlock\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"_relayerThreshold\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"_resourceIDToHandlerAddress\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"_totalProposals\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"_totalRelayers\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getRoleMember\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleMemberCount\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"paused\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"relayer\",\n        type: \"address\",\n      },\n    ],\n    name: \"isRelayer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"newAdmin\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceAdmin\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"adminPauseTransfers\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"adminUnpauseTransfers\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"newThreshold\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"adminChangeRelayerThreshold\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"relayerAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"adminAddRelayer\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"relayerAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"adminRemoveRelayer\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"handlerAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"resourceID\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"adminSetResource\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"handlerAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"resourceID\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"contractAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes4\",\n        name: \"depositFunctionSig\",\n        type: \"bytes4\",\n      },\n      {\n        internalType: \"bytes4\",\n        name: \"executeFunctionSig\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"adminSetGenericResource\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"handlerAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"adminSetBurnable\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint8\",\n        name: \"originChainID\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"depositNonce\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"dataHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getProposal\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"bytes32\",\n            name: \"_resourceID\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"bytes32\",\n            name: \"_dataHash\",\n            type: \"bytes32\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"_yesVotes\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"address[]\",\n            name: \"_noVotes\",\n            type: \"address[]\",\n          },\n          {\n            internalType: \"enum Bridge.ProposalStatus\",\n            name: \"_status\",\n            type: \"uint8\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"_proposedBlock\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct Bridge.Proposal\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"newFee\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"adminChangeFee\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"handlerAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenAddress\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amountOrTokenID\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"adminWithdraw\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint8\",\n        name: \"destinationChainID\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"resourceID\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"deposit\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint8\",\n        name: \"chainID\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"depositNonce\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"resourceID\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"dataHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"voteProposal\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint8\",\n        name: \"chainID\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"depositNonce\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"dataHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"cancelProposal\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint8\",\n        name: \"chainID\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint64\",\n        name: \"depositNonce\",\n        type: \"uint64\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"resourceID\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"executeProposal\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address payable[]\",\n        name: \"addrs\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"amounts\",\n        type: \"uint256[]\",\n      },\n    ],\n    name: \"transferFunds\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b5060405162004d8938038062004d898339818101604052810190620000379190620004bc565b60008060006101000a81548160ff02191690831515021790555084600260006101000a81548160ff021916908360ff160217905550826003819055508160068190555080600781905550620000966000801b336200013460201b60201c565b620000c0604051620000a89062000601565b60405180910390206000801b6200014a60201b60201c565b60005b8451811015620001285762000108604051620000df9062000601565b6040518091039020868381518110620000f457fe5b60200260200101516200016960201b60201c565b6004600081548092919060010191905055508080600101915050620000c3565b50505050505062000746565b620001468282620001f860201b60201c565b5050565b8060016000848152602001908152602001600020600201819055505050565b620001a06001600084815260200190815260200160002060020154620001946200029c60201b60201c565b620002a460201b60201c565b620001e2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001d99062000618565b60405180910390fd5b620001f48282620001f860201b60201c565b5050565b620002278160016000858152602001908152602001600020600001620002dd60201b6200285b1790919060201c565b1562000298576200023d6200029c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b6000620002d582600160008681526020019081526020016000206000016200031560201b620027601790919060201c565b905092915050565b60006200030d836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200034d60201b60201c565b905092915050565b600062000345836000018373ffffffffffffffffffffffffffffffffffffffff1660001b620003c760201b60201c565b905092915050565b6000620003618383620003c760201b60201c565b620003bc578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050620003c1565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081519050620003fb81620006f8565b92915050565b600082601f8301126200041357600080fd5b81516200042a620004248262000668565b6200063a565b915081818352602084019350602081019050838560208402820111156200045057600080fd5b60005b83811015620004845781620004698882620003ea565b84526020840193506020830192505060018101905062000453565b5050505092915050565b6000815190506200049f8162000712565b92915050565b600081519050620004b6816200072c565b92915050565b600080600080600060a08688031215620004d557600080fd5b6000620004e588828901620004a5565b955050602086015167ffffffffffffffff8111156200050357600080fd5b620005118882890162000401565b945050604062000524888289016200048e565b935050606062000537888289016200048e565b92505060806200054a888289016200048e565b9150509295509295909350565b600062000566602f8362000691565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b6000620005ce600c83620006a2565b91507f52454c415945525f524f4c4500000000000000000000000000000000000000006000830152600c82019050919050565b60006200060e82620005bf565b9150819050919050565b60006020820190508181036000830152620006338162000557565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156200065e57600080fd5b8060405250919050565b600067ffffffffffffffff8211156200068057600080fd5b602082029050602081019050919050565b600082825260208201905092915050565b600081905092915050565b6000620006ba82620006c1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6200070381620006ad565b81146200070f57600080fd5b50565b6200071d81620006e1565b81146200072957600080fd5b50565b6200073781620006eb565b81146200074357600080fd5b50565b61463380620007566000396000f3fe6080604052600436106102305760003560e01c806384db809f1161012e578063beab7131116100ab578063cdb0f73a1161006f578063cdb0f73a14610877578063d547741f146108a0578063d7a9cd79146108c9578063e8437ee7146108f4578063ffaac0eb1461091d57610230565b8063beab713114610790578063c5b37c22146107bb578063c5ec8970146107e6578063ca15c87314610811578063cb10f2151461084e57610230565b8063926d7d7f116100f2578063926d7d7f146106a95780639d5773e0146106d45780639d82dd63146106ff578063a217fddf14610728578063a9cf69fa1461075357610230565b806384db809f146105a05780638c0c2631146105dd5780639010d07c1461060657806391c404ac1461064357806391d148541461066c57610230565b80634b0b919d116101bc5780635e1fab0f116101805780635e1fab0f146104cf578063780cf004146104f85780637febe63f14610521578063802aabe81461055e57806380ae1c281461058957610230565b80634b0b919d146103c15780634e056005146103fe5780635059871914610427578063541d5548146104675780635c975abb146104a457610230565b80632f2ff15d116102035780632f2ff15d146102e057806336568abe146103095780633ee7094a146103325780634454b20d1461036f5780634603ae381461039857610230565b806305e2ca171461023557806317f03ce5146102515780631ff013f11461027a578063248a9ca3146102a3575b600080fd5b61024f600480360381019061024a9190613229565b610934565b005b34801561025d57600080fd5b5061027860048036038101906102739190613295565b610b91565b005b34801561028657600080fd5b506102a1600480360381019061029c91906132e4565b610d3e565b005b3480156102af57600080fd5b506102ca60048036038101906102c5919061306f565b6114bf565b6040516102d79190613df0565b60405180910390f35b3480156102ec57600080fd5b5061030760048036038101906103029190613098565b6114df565b005b34801561031557600080fd5b50610330600480360381019061032b9190613098565b611553565b005b34801561033e57600080fd5b5061035960048036038101906103549190613139565b6115d6565b6040516103669190613f75565b60405180910390f35b34801561037b57600080fd5b5061039660048036038101906103919190613347565b611693565b005b3480156103a457600080fd5b506103bf60048036038101906103ba9190612ffa565b6119d4565b005b3480156103cd57600080fd5b506103e860048036038101906103e39190613200565b611a7a565b6040516103f591906142d6565b60405180910390f35b34801561040a57600080fd5b5061042560048036038101906104209190613110565b611aa1565b005b34801561043357600080fd5b5061044e60048036038101906104499190613175565b611ae0565b60405161045e9493929190613ea2565b60405180910390f35b34801561047357600080fd5b5061048e60048036038101906104899190612e43565b611b2a565b60405161049b9190613dd5565b60405180910390f35b3480156104b057600080fd5b506104b9611b50565b6040516104c69190613dd5565b60405180910390f35b3480156104db57600080fd5b506104f660048036038101906104f19190612e43565b611b66565b005b34801561050457600080fd5b5061051f600480360381019061051a9190612ed1565b611b8b565b005b34801561052d57600080fd5b50610548600480360381019061054391906131b1565b611c0e565b6040516105559190613dd5565b60405180910390f35b34801561056a57600080fd5b50610573611c4a565b60405161058091906142bb565b60405180910390f35b34801561059557600080fd5b5061059e611c50565b005b3480156105ac57600080fd5b506105c760048036038101906105c2919061306f565b611c62565b6040516105d49190613d68565b60405180910390f35b3480156105e957600080fd5b5061060460048036038101906105ff9190612e95565b611c95565b005b34801561061257600080fd5b5061062d600480360381019061062891906130d4565b611d12565b60405161063a9190613d68565b60405180910390f35b34801561064f57600080fd5b5061066a60048036038101906106659190613110565b611d44565b005b34801561067857600080fd5b50610693600480360381019061068e9190613098565b611d9b565b6040516106a09190613dd5565b60405180910390f35b3480156106b557600080fd5b506106be611dcd565b6040516106cb9190613df0565b60405180910390f35b3480156106e057600080fd5b506106e9611de4565b6040516106f691906142bb565b60405180910390f35b34801561070b57600080fd5b5061072660048036038101906107219190612e43565b611dea565b005b34801561073457600080fd5b5061073d611ec4565b60405161074a9190613df0565b60405180910390f35b34801561075f57600080fd5b5061077a60048036038101906107759190613295565b611ecb565b6040516107879190614299565b60405180910390f35b34801561079c57600080fd5b506107a56120ac565b6040516107b291906142f1565b60405180910390f35b3480156107c757600080fd5b506107d06120bf565b6040516107dd91906142bb565b60405180910390f35b3480156107f257600080fd5b506107fb6120c5565b60405161080891906142bb565b60405180910390f35b34801561081d57600080fd5b506108386004803603810190610833919061306f565b6120cb565b60405161084591906142bb565b60405180910390f35b34801561085a57600080fd5b5061087560048036038101906108709190612f34565b6120f2565b005b34801561088357600080fd5b5061089e60048036038101906108999190612e43565b6121c4565b005b3480156108ac57600080fd5b506108c760048036038101906108c29190613098565b61229e565b005b3480156108d557600080fd5b506108de612312565b6040516108eb91906142bb565b60405180910390f35b34801561090057600080fd5b5061091b60048036038101906109169190612f83565b612318565b005b34801561092957600080fd5b506109326123f0565b005b61093c612402565b6006543414610980576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610977906140b9565b60405180910390fd5b60006009600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1f90614119565b60405180910390fd5b6000600860008760ff1660ff168152602001908152602001600020600081819054906101000a900467ffffffffffffffff1660010191906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905590508383600a60008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008960ff1660ff1681526020019081526020016000209190610ad1929190612b04565b5060008290508073ffffffffffffffffffffffffffffffffffffffff166338995da9878985338a8a6040518763ffffffff1660e01b8152600401610b1a96959493929190613f19565b600060405180830381600087803b158015610b3457600080fd5b505af1158015610b48573d6000803e3d6000fd5b505050508167ffffffffffffffff16868860ff167fdbb69440df8433824a026ef190652f29929eb64b4d1d5d2a69be8afe3e6eaed860405160405180910390a450505050505050565b610b99612453565b60008360ff1660088467ffffffffffffffff1668ffffffffffffffffff16901b1790506000600b60008368ffffffffffffffffff1668ffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000209050600480811115610c0657fe5b8160040160009054906101000a900460ff166004811115610c2357fe5b1415610c64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5b906140f9565b60405180910390fd5b600754610c754383600501546124c5565b11610cb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cac90614159565b60405180910390fd5b60048160040160006101000a81548160ff02191690836004811115610cd657fe5b0217905550600480811115610ce757fe5b8467ffffffffffffffff168660ff167f803c5a12f6bde629cea32e63d4b92d1b560816a6fb72e939d3c89e1cab65041784600001548560010154604051610d2f929190613e79565b60405180910390a45050505050565b610d4661250f565b610d4e612402565b60008460ff1660088567ffffffffffffffff1668ffffffffffffffffff16901b1790506000600b60008368ffffffffffffffffff1668ffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff166009600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4990614259565b60405180910390fd5b60018160040160009054906101000a900460ff166004811115610e7157fe5b1115610eb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea9906141b9565b60405180910390fd5b600c60008368ffffffffffffffffff1668ffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610f77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6e90614059565b60405180910390fd5b60008160040160009054906101000a900460ff166004811115610f9657fe5b14156111b657600560008154600101919050819055506040518060c001604052808581526020018481526020016001604051908082528060200260200182016040528015610ff35781602001602082028036833780820191505090505b50815260200160006040519080825280602002602001820160405280156110295781602001602082028036833780820191505090505b5081526020016001600481111561103c57fe5b815260200143815250600b60008468ffffffffffffffffff1668ffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600082015181600001556020820151816001015560408201518160020190805190602001906110af929190612b84565b5060608201518160030190805190602001906110cc929190612b84565b5060808201518160040160006101000a81548160ff021916908360048111156110f157fe5b021790555060a08201518160050155905050338160020160008154811061111457fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600481111561116957fe5b8567ffffffffffffffff168760ff167f803c5a12f6bde629cea32e63d4b92d1b560816a6fb72e939d3c89e1cab65041787876040516111a9929190613e79565b60405180910390a46112f9565b6007546111c74383600501546124c5565b111561124c5760048160040160006101000a81548160ff021916908360048111156111ee57fe5b02179055506004808111156111ff57fe5b8567ffffffffffffffff168760ff167f803c5a12f6bde629cea32e63d4b92d1b560816a6fb72e939d3c89e1cab650417878760405161123f929190613e79565b60405180910390a46112f8565b80600101548314611292576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128990614239565b60405180910390fd5b80600201339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b60048081111561130557fe5b8160040160009054906101000a900460ff16600481111561132257fe5b146114b7576001600c60008468ffffffffffffffffff1668ffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060040160009054906101000a900460ff1660048111156113d457fe5b8567ffffffffffffffff168760ff167f25f8daaa4635a7729927ba3f5b3d59cc3320aca7c32c9db4e7ca7b9574343640876040516114129190613df0565b60405180910390a460016003541115806114355750600354816002018054905010155b156114b65760028160040160006101000a81548160ff0219169083600481111561145b57fe5b02179055506002600481111561146d57fe5b8567ffffffffffffffff168760ff167f803c5a12f6bde629cea32e63d4b92d1b560816a6fb72e939d3c89e1cab65041787876040516114ad929190613e79565b60405180910390a45b5b505050505050565b600060016000838152602001908152602001600020600201549050919050565b611506600160008481526020019081526020016000206002015461150161256d565b611d9b565b611545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153c90614039565b60405180910390fd5b61154f8282612575565b5050565b61155b61256d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146115c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115bf90614279565b60405180910390fd5b6115d28282612609565b5050565b600a602052816000526040600020602052806000526040600020600091509150508054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561168b5780601f106116605761010080835404028352916020019161168b565b820191906000526020600020905b81548152906001019060200180831161166e57829003601f168201915b505050505081565b61169b61250f565b6116a3612402565b60006009600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008660ff1660088767ffffffffffffffff1668ffffffffffffffffff16901b179050600082868660405160200161171593929190613d29565b6040516020818303038152906040528051906020012090506000600b60008468ffffffffffffffffff1668ffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002090506000600481111561177857fe5b8160040160009054906101000a900460ff16600481111561179557fe5b14156117d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117cd90613fd9565b60405180910390fd5b600260048111156117e357fe5b8160040160009054906101000a900460ff16600481111561180057fe5b14611840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183790613fb9565b60405180910390fd5b80600101548214611886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187d906140d9565b60405180910390fd5b60038160040160006101000a81548160ff021916908360048111156118a757fe5b02179055506000600960008360000154815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663e248cff283600001548a8a6040518463ffffffff1660e01b815260040161192993929190613ee7565b600060405180830381600087803b15801561194357600080fd5b505af1158015611957573d6000803e3d6000fd5b505050508160040160009054906101000a900460ff16600481111561197857fe5b8967ffffffffffffffff168b60ff167f803c5a12f6bde629cea32e63d4b92d1b560816a6fb72e939d3c89e1cab650417856000015486600101546040516119c0929190613e79565b60405180910390a450505050505050505050565b6119dc61269d565b60008090505b84849050811015611a73578484828181106119f957fe5b9050602002016020810190611a0e9190612e6c565b73ffffffffffffffffffffffffffffffffffffffff166108fc848484818110611a3357fe5b905060200201359081150290604051600060405180830381858888f19350505050158015611a65573d6000803e3d6000fd5b5080806001019150506119e2565b5050505050565b60086020528060005260406000206000915054906101000a900467ffffffffffffffff1681565b611aa961269d565b80600381905550807fa20d6b84cd798a24038be305eff8a45ca82ef54a2aa2082005d8e14c0a4746c860405160405180910390a250565b600b602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060040160009054906101000a900460ff16908060050154905084565b6000611b49604051611b3b90613d53565b604051809103902083611d9b565b9050919050565b60008060009054906101000a900460ff16905090565b611b6e61269d565b611b7b6000801b826114df565b611b886000801b33611553565b50565b611b9361269d565b60008490508073ffffffffffffffffffffffffffffffffffffffff1663d9caed128585856040518463ffffffff1660e01b8152600401611bd593929190613d9e565b600060405180830381600087803b158015611bef57600080fd5b505af1158015611c03573d6000803e3d6000fd5b505050505050505050565b600c602052826000526040600020602052816000526040600020602052806000526040600020600092509250509054906101000a900460ff1681565b60045481565b611c5861269d565b611c606126eb565b565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611c9d61269d565b60008290508073ffffffffffffffffffffffffffffffffffffffff166307b7ed99836040518263ffffffff1660e01b8152600401611cdb9190613d68565b600060405180830381600087803b158015611cf557600080fd5b505af1158015611d09573d6000803e3d6000fd5b50505050505050565b6000611d3c826001600086815260200190815260200160002060000161274690919063ffffffff16565b905092915050565b611d4c61269d565b806006541415611d91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8890614219565b60405180910390fd5b8060068190555050565b6000611dc5826001600086815260200190815260200160002060000161276090919063ffffffff16565b905092915050565b604051611dd990613d53565b604051809103902081565b60055481565b611df261269d565b611e0f604051611e0190613d53565b604051809103902082611d9b565b611e4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4590614099565b60405180910390fd5b611e6b604051611e5d90613d53565b60405180910390208261229e565b8073ffffffffffffffffffffffffffffffffffffffff167f10e1f7ce9fd7d1b90a66d13a2ab3cb8dd7f29f3f8d520b143b063ccfbab6906b60405160405180910390a26004600081548092919060019003919050555050565b6000801b81565b611ed3612c0e565b60008460ff1660088567ffffffffffffffff1668ffffffffffffffffff16901b179050600b60008268ffffffffffffffffff1668ffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206040518060c0016040529081600082015481526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020018280548015611fd457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611f8a575b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561206257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612018575b505050505081526020016004820160009054906101000a900460ff16600481111561208957fe5b600481111561209457fe5b81526020016005820154815250509150509392505050565b600260009054906101000a900460ff1681565b60065481565b60075481565b60006120eb60016000848152602001908152602001600020600001612790565b9050919050565b6120fa61269d565b826009600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008390508073ffffffffffffffffffffffffffffffffffffffff1663b8fa373684846040518363ffffffff1660e01b815260040161218c929190613e0b565b600060405180830381600087803b1580156121a657600080fd5b505af11580156121ba573d6000803e3d6000fd5b5050505050505050565b6121cc61269d565b6121e96040516121db90613d53565b604051809103902082611d9b565b15612229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161222090614199565b60405180910390fd5b61224660405161223890613d53565b6040518091039020826114df565b8073ffffffffffffffffffffffffffffffffffffffff167f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c560405160405180910390a260046000815480929190600101919050555050565b6122c560016000848152602001908152602001600020600201546122c061256d565b611d9b565b612304576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122fb90614139565b60405180910390fd5b61230e8282612609565b5050565b60035481565b61232061269d565b846009600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008590508073ffffffffffffffffffffffffffffffffffffffff1663bba8185a868686866040518563ffffffff1660e01b81526004016123b69493929190613e34565b600060405180830381600087803b1580156123d057600080fd5b505af11580156123e4573d6000803e3d6000fd5b50505050505050505050565b6123f861269d565b6124006127a5565b565b6000809054906101000a900460ff1615612451576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161244890614179565b60405180910390fd5b565b6124606000801b33611d9b565b80612484575061248360405161247590613d53565b604051809103902033611d9b565b5b6124c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124ba90614019565b60405180910390fd5b565b600061250783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612800565b905092915050565b61252c60405161251e90613d53565b604051809103902033611d9b565b61256b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612562906141d9565b60405180910390fd5b565b600033905090565b61259d816001600085815260200190815260200160002060000161285b90919063ffffffff16565b15612605576125aa61256d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b612631816001600085815260200190815260200160002060000161288b90919063ffffffff16565b156126995761263e61256d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6126aa6000801b33611d9b565b6126e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126e0906141f9565b60405180910390fd5b565b6126f3612402565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583360405161273c9190613d83565b60405180910390a1565b600061275583600001836128bb565b60001c905092915050565b6000612788836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612928565b905092915050565b600061279e8260000161294b565b9050919050565b6127ad61295c565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336040516127f69190613d83565b60405180910390a1565b6000838311158290612848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161283f9190613f97565b60405180910390fd5b5060008385039050809150509392505050565b6000612883836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6129ac565b905092915050565b60006128b3836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612a1c565b905092915050565b600081836000018054905011612906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128fd90613ff9565b60405180910390fd5b82600001828154811061291557fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6000809054906101000a900460ff166129aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129a190614079565b60405180910390fd5b565b60006129b88383612928565b612a11578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612a16565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114612af85760006001820390506000600186600001805490500390506000866000018281548110612a6757fe5b9060005260206000200154905080876000018481548110612a8457fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480612abc57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050612afe565b60009150505b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612b4557803560ff1916838001178555612b73565b82800160010185558215612b73579182015b82811115612b72578235825591602001919060010190612b57565b5b509050612b809190612c55565b5090565b828054828255906000526020600020908101928215612bfd579160200282015b82811115612bfc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612ba4565b5b509050612c0a9190612c7a565b5090565b6040518060c001604052806000801916815260200160008019168152602001606081526020016060815260200160006004811115612c4857fe5b8152602001600081525090565b612c7791905b80821115612c73576000816000905550600101612c5b565b5090565b90565b612cba91905b80821115612cb657600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101612c80565b5090565b90565b600081359050612ccc81614545565b92915050565b600081359050612ce18161455c565b92915050565b60008083601f840112612cf957600080fd5b8235905067ffffffffffffffff811115612d1257600080fd5b602083019150836020820283011115612d2a57600080fd5b9250929050565b60008083601f840112612d4357600080fd5b8235905067ffffffffffffffff811115612d5c57600080fd5b602083019150836020820283011115612d7457600080fd5b9250929050565b600081359050612d8a81614573565b92915050565b600081359050612d9f8161458a565b92915050565b60008083601f840112612db757600080fd5b8235905067ffffffffffffffff811115612dd057600080fd5b602083019150836001820283011115612de857600080fd5b9250929050565b600081359050612dfe816145a1565b92915050565b600081359050612e13816145b8565b92915050565b600081359050612e28816145cf565b92915050565b600081359050612e3d816145e6565b92915050565b600060208284031215612e5557600080fd5b6000612e6384828501612cbd565b91505092915050565b600060208284031215612e7e57600080fd5b6000612e8c84828501612cd2565b91505092915050565b60008060408385031215612ea857600080fd5b6000612eb685828601612cbd565b9250506020612ec785828601612cbd565b9150509250929050565b60008060008060808587031215612ee757600080fd5b6000612ef587828801612cbd565b9450506020612f0687828801612cbd565b9350506040612f1787828801612cbd565b9250506060612f2887828801612def565b91505092959194509250565b600080600060608486031215612f4957600080fd5b6000612f5786828701612cbd565b9350506020612f6886828701612d7b565b9250506040612f7986828701612cbd565b9150509250925092565b600080600080600060a08688031215612f9b57600080fd5b6000612fa988828901612cbd565b9550506020612fba88828901612d7b565b9450506040612fcb88828901612cbd565b9350506060612fdc88828901612d90565b9250506080612fed88828901612d90565b9150509295509295909350565b6000806000806040858703121561301057600080fd5b600085013567ffffffffffffffff81111561302a57600080fd5b61303687828801612ce7565b9450945050602085013567ffffffffffffffff81111561305557600080fd5b61306187828801612d31565b925092505092959194509250565b60006020828403121561308157600080fd5b600061308f84828501612d7b565b91505092915050565b600080604083850312156130ab57600080fd5b60006130b985828601612d7b565b92505060206130ca85828601612cbd565b9150509250929050565b600080604083850312156130e757600080fd5b60006130f585828601612d7b565b925050602061310685828601612def565b9150509250929050565b60006020828403121561312257600080fd5b600061313084828501612def565b91505092915050565b6000806040838503121561314c57600080fd5b600061315a85828601612e04565b925050602061316b85828601612e2e565b9150509250929050565b6000806040838503121561318857600080fd5b600061319685828601612e19565b92505060206131a785828601612d7b565b9150509250929050565b6000806000606084860312156131c657600080fd5b60006131d486828701612e19565b93505060206131e586828701612d7b565b92505060406131f686828701612cbd565b9150509250925092565b60006020828403121561321257600080fd5b600061322084828501612e2e565b91505092915050565b6000806000806060858703121561323f57600080fd5b600061324d87828801612e2e565b945050602061325e87828801612d7b565b935050604085013567ffffffffffffffff81111561327b57600080fd5b61328787828801612da5565b925092505092959194509250565b6000806000606084860312156132aa57600080fd5b60006132b886828701612e2e565b93505060206132c986828701612e04565b92505060406132da86828701612d7b565b9150509250925092565b600080600080608085870312156132fa57600080fd5b600061330887828801612e2e565b945050602061331987828801612e04565b935050604061332a87828801612d7b565b925050606061333b87828801612d7b565b91505092959194509250565b60008060008060006080868803121561335f57600080fd5b600061336d88828901612e2e565b955050602061337e88828901612e04565b945050604086013567ffffffffffffffff81111561339b57600080fd5b6133a788828901612da5565b935093505060606133ba88828901612d7b565b9150509295509295909350565b60006133d383836133ee565b60208301905092915050565b6133e88161446c565b82525050565b6133f781614393565b82525050565b61340681614393565b82525050565b61341d61341882614393565b6144f6565b82525050565b600061342e8261431c565b613438818561434a565b93506134438361430c565b8060005b8381101561347457815161345b88826133c7565b97506134668361433d565b925050600181019050613447565b5085935050505092915050565b61348a816143b7565b82525050565b613499816143c3565b82525050565b6134a8816143c3565b82525050565b6134b7816143cd565b82525050565b60006134c9838561435b565b93506134d68385846144b4565b6134df8361451a565b840190509392505050565b60006134f6838561436c565b93506135038385846144b4565b82840190509392505050565b600061351a82614327565b613524818561435b565b93506135348185602086016144c3565b61353d8161451a565b840191505092915050565b6135518161447e565b82525050565b6135608161447e565b82525050565b600061357182614332565b61357b8185614377565b935061358b8185602086016144c3565b6135948161451a565b840191505092915050565b60006135ac601c83614377565b91507f70726f706f73616c20616c7265616479207472616e73666572726564000000006000830152602082019050919050565b60006135ec601683614377565b91507f70726f706f73616c206973206e6f7420616374697665000000000000000000006000830152602082019050919050565b600061362c602283614377565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613692601e83614377565b91507f73656e646572206973206e6f742072656c61796572206f722061646d696e00006000830152602082019050919050565b60006136d2602f83614377565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b6000613738601583614377565b91507f72656c6179657220616c726561647920766f74656400000000000000000000006000830152602082019050919050565b6000613778601483614377565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b60006137b8601f83614377565b91507f6164647220646f65736e277420686176652072656c6179657220726f6c6521006000830152602082019050919050565b60006137f8601683614377565b91507f496e636f72726563742066656520737570706c696564000000000000000000006000830152602082019050919050565b6000613838601b83614377565b91507f6461746120646f65736e2774206d6174636820646174616861736800000000006000830152602082019050919050565b6000613878601a83614377565b91507f50726f706f73616c20616c72656164792063616e63656c6c65640000000000006000830152602082019050919050565b60006138b8602083614377565b91507f7265736f757263654944206e6f74206d617070656420746f2068616e646c65726000830152602082019050919050565b60006138f8603083614377565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b600061395e602083614377565b91507f50726f706f73616c206e6f7420617420657870697279207468726573686f6c646000830152602082019050919050565b600061399e601083614377565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b60006139de601e83614377565b91507f6164647220616c7265616479206861732072656c6179657220726f6c652100006000830152602082019050919050565b6000613a1e602a83614377565b91507f70726f706f73616c20616c7265616479207061737365642f657865637574656460008301527f2f63616e63656c6c6564000000000000000000000000000000000000000000006020830152604082019050919050565b6000613a84602083614377565b91507f73656e64657220646f65736e277420686176652072656c6179657220726f6c656000830152602082019050919050565b6000613ac4601e83614377565b91507f73656e64657220646f65736e277420686176652061646d696e20726f6c6500006000830152602082019050919050565b6000613b04601f83614377565b91507f43757272656e742066656520697320657175616c20746f206e657720666565006000830152602082019050919050565b6000613b44600c83614388565b91507f52454c415945525f524f4c4500000000000000000000000000000000000000006000830152600c82019050919050565b6000613b84601183614377565b91507f6461746168617368206d69736d617463680000000000000000000000000000006000830152602082019050919050565b6000613bc4601983614377565b91507f6e6f2068616e646c657220666f72207265736f757263654944000000000000006000830152602082019050919050565b6000613c04602f83614377565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b600060c083016000830151613c756000860182613490565b506020830151613c886020860182613490565b5060408301518482036040860152613ca08282613423565b91505060608301518482036060860152613cba8282613423565b9150506080830151613ccf6080860182613548565b5060a0830151613ce260a0860182613ced565b508091505092915050565b613cf68161442c565b82525050565b613d058161442c565b82525050565b613d1481614436565b82525050565b613d238161445f565b82525050565b6000613d35828661340c565b601482019150613d468284866134ea565b9150819050949350505050565b6000613d5e82613b37565b9150819050919050565b6000602082019050613d7d60008301846133fd565b92915050565b6000602082019050613d9860008301846133df565b92915050565b6000606082019050613db360008301866133fd565b613dc060208301856133fd565b613dcd6040830184613cfc565b949350505050565b6000602082019050613dea6000830184613481565b92915050565b6000602082019050613e05600083018461349f565b92915050565b6000604082019050613e20600083018561349f565b613e2d60208301846133fd565b9392505050565b6000608082019050613e49600083018761349f565b613e5660208301866133fd565b613e6360408301856134ae565b613e7060608301846134ae565b95945050505050565b6000604082019050613e8e600083018561349f565b613e9b602083018461349f565b9392505050565b6000608082019050613eb7600083018761349f565b613ec4602083018661349f565b613ed16040830185613557565b613ede6060830184613cfc565b95945050505050565b6000604082019050613efc600083018661349f565b8181036020830152613f0f8184866134bd565b9050949350505050565b600060a082019050613f2e600083018961349f565b613f3b6020830188613d1a565b613f486040830187613d0b565b613f5560608301866133df565b8181036080830152613f688184866134bd565b9050979650505050505050565b60006020820190508181036000830152613f8f818461350f565b905092915050565b60006020820190508181036000830152613fb18184613566565b905092915050565b60006020820190508181036000830152613fd28161359f565b9050919050565b60006020820190508181036000830152613ff2816135df565b9050919050565b600060208201905081810360008301526140128161361f565b9050919050565b6000602082019050818103600083015261403281613685565b9050919050565b60006020820190508181036000830152614052816136c5565b9050919050565b600060208201905081810360008301526140728161372b565b9050919050565b600060208201905081810360008301526140928161376b565b9050919050565b600060208201905081810360008301526140b2816137ab565b9050919050565b600060208201905081810360008301526140d2816137eb565b9050919050565b600060208201905081810360008301526140f28161382b565b9050919050565b600060208201905081810360008301526141128161386b565b9050919050565b60006020820190508181036000830152614132816138ab565b9050919050565b60006020820190508181036000830152614152816138eb565b9050919050565b6000602082019050818103600083015261417281613951565b9050919050565b6000602082019050818103600083015261419281613991565b9050919050565b600060208201905081810360008301526141b2816139d1565b9050919050565b600060208201905081810360008301526141d281613a11565b9050919050565b600060208201905081810360008301526141f281613a77565b9050919050565b6000602082019050818103600083015261421281613ab7565b9050919050565b6000602082019050818103600083015261423281613af7565b9050919050565b6000602082019050818103600083015261425281613b77565b9050919050565b6000602082019050818103600083015261427281613bb7565b9050919050565b6000602082019050818103600083015261429281613bf7565b9050919050565b600060208201905081810360008301526142b38184613c5d565b905092915050565b60006020820190506142d06000830184613cfc565b92915050565b60006020820190506142eb6000830184613d0b565b92915050565b60006020820190506143066000830184613d1a565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061439e8261440c565b9050919050565b60006143b08261440c565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600081905061440782614538565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600068ffffffffffffffffff82169050919050565b600060ff82169050919050565b600061447782614490565b9050919050565b6000614489826143f9565b9050919050565b600061449b826144a2565b9050919050565b60006144ad8261440c565b9050919050565b82818337600083830152505050565b60005b838110156144e15780820151818401526020810190506144c6565b838111156144f0576000848401525b50505050565b600061450182614508565b9050919050565b60006145138261452b565b9050919050565b6000601f19601f8301169050919050565b60008160601b9050919050565b6005811061454257fe5b50565b61454e81614393565b811461455957600080fd5b50565b614565816143a5565b811461457057600080fd5b50565b61457c816143c3565b811461458757600080fd5b50565b614593816143cd565b811461459e57600080fd5b50565b6145aa8161442c565b81146145b557600080fd5b50565b6145c181614436565b81146145cc57600080fd5b50565b6145d88161444a565b81146145e357600080fd5b50565b6145ef8161445f565b81146145fa57600080fd5b5056fea26469706673582212203d95382235563e3e1b61df9b42f1f346dcfd092c23ca4bbc0e149d9eb4e25fd964736f6c63430006040033\";\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { Ierc20 } from \"./Ierc20\";\n\nexport class Ierc20Factory {\n  static connect(address: string, signerOrProvider: Signer | Provider): Ierc20 {\n    return new Contract(address, _abi, signerOrProvider) as Ierc20;\n  }\n}\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n"]},"metadata":{},"sourceType":"script"}