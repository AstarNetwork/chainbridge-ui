{"ast":null,"code":"var _jsxFileName = \"/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/packages/WebApp/src/Modules/TransactionActiveModal.tsx\";\nimport React from \"react\";\nimport { makeStyles, createStyles } from \"@imploy/common-themes\";\nimport { Button, Typography } from \"@imploy/common-components\";\nimport CustomModal from \"../Components/Custom/CustomModal\";\nconst useStyles = makeStyles(({\n  constants,\n  palette\n}) => createStyles({\n  root: {\n    width: \"100%\"\n  },\n  inner: {\n    width: \"100% !important\",\n    maxWidth: \"unset !important\",\n    borderRadius: \"4px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: `${constants.generalUnit * 6}px ${constants.generalUnit * 7}px`,\n    bottom: 0,\n    left: 0\n  },\n  heading: {\n    marginBottom: constants.generalUnit\n  },\n  stepIndicator: {\n    height: 20,\n    width: 20,\n    marginTop: constants.generalUnit * 0.8,\n    marginRight: constants.generalUnit * 2,\n    fill: palette.additional[\"gray\"][7]\n  },\n  buttons: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: constants.generalUnit * 5,\n    \"& > *\": {\n      marginRight: constants.generalUnit\n    }\n  },\n  button: {\n    borderColor: palette.additional[\"gray\"][8],\n    color: palette.additional[\"gray\"][8],\n    \"&:hover\": {\n      borderColor: palette.additional[\"gray\"][8],\n      backgroundColor: palette.additional[\"gray\"][8],\n      color: palette.common.white.main\n    }\n  }\n}));\nexport let TRANSACTION_STATE;\n\n(function (TRANSACTION_STATE) {\n  TRANSACTION_STATE[\"init\"] = \"init\";\n  TRANSACTION_STATE[\"inTransit\"] = \"inTransit\";\n  TRANSACTION_STATE[\"done\"] = \"done\";\n})(TRANSACTION_STATE || (TRANSACTION_STATE = {}));\n\nconst TransactionActiveModal = ({\n  open,\n  close\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(CustomModal, {\n    className: classes.root,\n    injectedClass: {\n      inner: classes.inner\n    },\n    active: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stepIndicator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    variant: \"h3\",\n    component: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Initializing Transfer\"), /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: close,\n    size: \"small\",\n    className: classes.button,\n    variant: \"outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"View transaction\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    className: classes.button,\n    variant: \"outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Start new transfer\"))));\n};\n\nexport default TransactionActiveModal;","map":{"version":3,"sources":["/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/packages/WebApp/src/Modules/TransactionActiveModal.tsx"],"names":["React","makeStyles","createStyles","Button","Typography","CustomModal","useStyles","constants","palette","root","width","inner","maxWidth","borderRadius","display","flexDirection","padding","generalUnit","bottom","left","heading","marginBottom","stepIndicator","height","marginTop","marginRight","fill","additional","buttons","button","borderColor","color","backgroundColor","common","white","main","TRANSACTION_STATE","TransactionActiveModal","open","close","classes"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@imploy/common-themes\";\nimport { Button, Typography } from \"@imploy/common-components\";\nimport CustomModal from \"../Components/Custom/CustomModal\";\n\nconst useStyles = makeStyles(({ constants, palette }: ITheme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    inner: {\n      width: \"100% !important\",\n      maxWidth: \"unset !important\",\n      borderRadius: \"4px\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      padding: `${constants.generalUnit * 6}px ${constants.generalUnit * 7}px`,\n      bottom: 0,\n      left: 0\n    },\n    heading: {\n      marginBottom: constants.generalUnit,\n    },\n    stepIndicator: {\n      height: 20,\n      width: 20,\n      marginTop: constants.generalUnit * 0.8,\n      marginRight: constants.generalUnit * 2,\n      fill: palette.additional[\"gray\"][7],\n    },\n    buttons: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      marginTop: constants.generalUnit * 5,\n      \"& > *\": {\n        marginRight: constants.generalUnit,\n      },\n    },\n    button: {\n      borderColor: palette.additional[\"gray\"][8],\n      color: palette.additional[\"gray\"][8],\n      \"&:hover\": {\n        borderColor: palette.additional[\"gray\"][8],\n        backgroundColor: palette.additional[\"gray\"][8],\n        color: palette.common.white.main,\n      },\n    },\n  })\n);\n\nexport enum TRANSACTION_STATE {\n  init = \"init\",\n  inTransit = \"inTransit\",\n  done = \"done\"\n}\n\ninterface ITransactionActiveModalProps {\n  open: boolean;\n  close: () => void;\n}\n\nconst TransactionActiveModal: React.FC<ITransactionActiveModalProps> = ({\n  open,\n  close,\n}: ITransactionActiveModalProps) => {\n  const classes = useStyles();\n\n  return (\n    <CustomModal\n      className={classes.root}\n      injectedClass={{\n        inner: classes.inner,\n      }}\n      active={open}\n    >\n      <section>\n        <div className={classes.stepIndicator}>\n\n        </div>\n      </section>\n      <section>\n        <Typography className={classes.heading} variant=\"h3\" component=\"h3\">\n          Initializing Transfer\n        </Typography>\n        <section className={classes.buttons}>\n          <Button\n            onClick={close}\n            size=\"small\"\n            className={classes.button}\n            variant=\"outline\"\n          >\n            View transaction\n          </Button>\n          <Button size=\"small\" className={classes.button} variant=\"outline\">\n            Start new transfer\n          </Button>\n        </section>\n      </section>\n    </CustomModal>\n  );\n};\n\nexport default TransactionActiveModal;\n"]},"metadata":{},"sourceType":"module"}