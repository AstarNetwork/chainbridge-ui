{"ast":null,"code":"import { createContext, useState, useEffect, createElement, useContext } from 'react';\nimport Onboard from 'bnc-onboard';\nimport { Contract, ethers, utils, BigNumber as BigNumber$1 } from 'ethers';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, basedir, module) {\n  return module = {\n    path: basedir,\n    exports: {},\n    require: function (path, base) {\n      return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n    }\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction getCjsExportFromNamespace(n) {\n  return n && n['default'] || n;\n}\n\nfunction commonjsRequire() {\n  throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar _nodeResolve_empty = {};\n\nvar _nodeResolve_empty$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  'default': _nodeResolve_empty\n});\n\nvar require$$0 = getCjsExportFromNamespace(_nodeResolve_empty$1);\nvar bn = createCommonjsModule(function (module) {\n  (function (module, exports) {\n    // Utils\n    function assert(val, msg) {\n      if (!val) throw new Error(msg || 'Assertion failed');\n    } // Could use `inherits` module, but don't want to move from single file\n    // architecture yet.\n\n\n    function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n\n      var TempCtor = function () {};\n\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    } // BN\n\n\n    function BN(number, base, endian) {\n      if (BN.isBN(number)) {\n        return number;\n      }\n\n      this.negative = 0;\n      this.words = null;\n      this.length = 0; // Reduction context\n\n      this.red = null;\n\n      if (number !== null) {\n        if (base === 'le' || base === 'be') {\n          endian = base;\n          base = 10;\n        }\n\n        this._init(number || 0, base || 10, endian || 'be');\n      }\n    }\n\n    if (typeof module === 'object') {\n      module.exports = BN;\n    } else {\n      exports.BN = BN;\n    }\n\n    BN.BN = BN;\n    BN.wordSize = 26;\n    var Buffer;\n\n    try {\n      Buffer = require$$0.Buffer;\n    } catch (e) {}\n\n    BN.isBN = function isBN(num) {\n      if (num instanceof BN) {\n        return true;\n      }\n\n      return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n    };\n\n    BN.max = function max(left, right) {\n      if (left.cmp(right) > 0) return left;\n      return right;\n    };\n\n    BN.min = function min(left, right) {\n      if (left.cmp(right) < 0) return left;\n      return right;\n    };\n\n    BN.prototype._init = function init(number, base, endian) {\n      if (typeof number === 'number') {\n        return this._initNumber(number, base, endian);\n      }\n\n      if (typeof number === 'object') {\n        return this._initArray(number, base, endian);\n      }\n\n      if (base === 'hex') {\n        base = 16;\n      }\n\n      assert(base === (base | 0) && base >= 2 && base <= 36);\n      number = number.toString().replace(/\\s+/g, '');\n      var start = 0;\n\n      if (number[0] === '-') {\n        start++;\n      }\n\n      if (base === 16) {\n        this._parseHex(number, start);\n      } else {\n        this._parseBase(number, base, start);\n      }\n\n      if (number[0] === '-') {\n        this.negative = 1;\n      }\n\n      this.strip();\n      if (endian !== 'le') return;\n\n      this._initArray(this.toArray(), base, endian);\n    };\n\n    BN.prototype._initNumber = function _initNumber(number, base, endian) {\n      if (number < 0) {\n        this.negative = 1;\n        number = -number;\n      }\n\n      if (number < 0x4000000) {\n        this.words = [number & 0x3ffffff];\n        this.length = 1;\n      } else if (number < 0x10000000000000) {\n        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n        this.length = 2;\n      } else {\n        assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n        this.length = 3;\n      }\n\n      if (endian !== 'le') return; // Reverse the bytes\n\n      this._initArray(this.toArray(), base, endian);\n    };\n\n    BN.prototype._initArray = function _initArray(number, base, endian) {\n      // Perhaps a Uint8Array\n      assert(typeof number.length === 'number');\n\n      if (number.length <= 0) {\n        this.words = [0];\n        this.length = 1;\n        return this;\n      }\n\n      this.length = Math.ceil(number.length / 3);\n      this.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] = 0;\n      }\n\n      var j, w;\n      var off = 0;\n\n      if (endian === 'be') {\n        for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n          w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n          this.words[j] |= w << off & 0x3ffffff;\n          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n          off += 24;\n\n          if (off >= 26) {\n            off -= 26;\n            j++;\n          }\n        }\n      } else if (endian === 'le') {\n        for (i = 0, j = 0; i < number.length; i += 3) {\n          w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n          this.words[j] |= w << off & 0x3ffffff;\n          this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n          off += 24;\n\n          if (off >= 26) {\n            off -= 26;\n            j++;\n          }\n        }\n      }\n\n      return this.strip();\n    };\n\n    function parseHex(str, start, end) {\n      var r = 0;\n      var len = Math.min(str.length, end);\n\n      for (var i = start; i < len; i++) {\n        var c = str.charCodeAt(i) - 48;\n        r <<= 4; // 'a' - 'f'\n\n        if (c >= 49 && c <= 54) {\n          r |= c - 49 + 0xa; // 'A' - 'F'\n        } else if (c >= 17 && c <= 22) {\n          r |= c - 17 + 0xa; // '0' - '9'\n        } else {\n          r |= c & 0xf;\n        }\n      }\n\n      return r;\n    }\n\n    BN.prototype._parseHex = function _parseHex(number, start) {\n      // Create possibly bigger array to ensure that it fits the number\n      this.length = Math.ceil((number.length - start) / 6);\n      this.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        this.words[i] = 0;\n      }\n\n      var j, w; // Scan 24-bit chunks and add them to the number\n\n      var off = 0;\n\n      for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n        w = parseHex(number, i, i + 6);\n        this.words[j] |= w << off & 0x3ffffff; // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\n        this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n\n      if (i + 6 !== start) {\n        w = parseHex(number, start, i + 6);\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      }\n\n      this.strip();\n    };\n\n    function parseBase(str, start, end, mul) {\n      var r = 0;\n      var len = Math.min(str.length, end);\n\n      for (var i = start; i < len; i++) {\n        var c = str.charCodeAt(i) - 48;\n        r *= mul; // 'a'\n\n        if (c >= 49) {\n          r += c - 49 + 0xa; // 'A'\n        } else if (c >= 17) {\n          r += c - 17 + 0xa; // '0' - '9'\n        } else {\n          r += c;\n        }\n      }\n\n      return r;\n    }\n\n    BN.prototype._parseBase = function _parseBase(number, base, start) {\n      // Initialize as zero\n      this.words = [0];\n      this.length = 1; // Find length of limb in base\n\n      for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n        limbLen++;\n      }\n\n      limbLen--;\n      limbPow = limbPow / base | 0;\n      var total = number.length - start;\n      var mod = total % limbLen;\n      var end = Math.min(total, total - mod) + start;\n      var word = 0;\n\n      for (var i = start; i < end; i += limbLen) {\n        word = parseBase(number, i, i + limbLen, base);\n        this.imuln(limbPow);\n\n        if (this.words[0] + word < 0x4000000) {\n          this.words[0] += word;\n        } else {\n          this._iaddn(word);\n        }\n      }\n\n      if (mod !== 0) {\n        var pow = 1;\n        word = parseBase(number, i, number.length, base);\n\n        for (i = 0; i < mod; i++) {\n          pow *= base;\n        }\n\n        this.imuln(pow);\n\n        if (this.words[0] + word < 0x4000000) {\n          this.words[0] += word;\n        } else {\n          this._iaddn(word);\n        }\n      }\n    };\n\n    BN.prototype.copy = function copy(dest) {\n      dest.words = new Array(this.length);\n\n      for (var i = 0; i < this.length; i++) {\n        dest.words[i] = this.words[i];\n      }\n\n      dest.length = this.length;\n      dest.negative = this.negative;\n      dest.red = this.red;\n    };\n\n    BN.prototype.clone = function clone() {\n      var r = new BN(null);\n      this.copy(r);\n      return r;\n    };\n\n    BN.prototype._expand = function _expand(size) {\n      while (this.length < size) {\n        this.words[this.length++] = 0;\n      }\n\n      return this;\n    }; // Remove leading `0` from `this`\n\n\n    BN.prototype.strip = function strip() {\n      while (this.length > 1 && this.words[this.length - 1] === 0) {\n        this.length--;\n      }\n\n      return this._normSign();\n    };\n\n    BN.prototype._normSign = function _normSign() {\n      // -0 = 0\n      if (this.length === 1 && this.words[0] === 0) {\n        this.negative = 0;\n      }\n\n      return this;\n    };\n\n    BN.prototype.inspect = function inspect() {\n      return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n    };\n    /*\n     var zeros = [];\n    var groupSizes = [];\n    var groupBases = [];\n     var s = '';\n    var i = -1;\n    while (++i < BN.wordSize) {\n      zeros[i] = s;\n      s += '0';\n    }\n    groupSizes[0] = 0;\n    groupSizes[1] = 0;\n    groupBases[0] = 0;\n    groupBases[1] = 0;\n    var base = 2 - 1;\n    while (++base < 36 + 1) {\n      var groupSize = 0;\n      var groupBase = 1;\n      while (groupBase < (1 << BN.wordSize) / base) {\n        groupBase *= base;\n        groupSize += 1;\n      }\n      groupSizes[base] = groupSize;\n      groupBases[base] = groupBase;\n    }\n     */\n\n\n    var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n    var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n    var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n    BN.prototype.toString = function toString(base, padding) {\n      base = base || 10;\n      padding = padding | 0 || 1;\n      var out;\n\n      if (base === 16 || base === 'hex') {\n        out = '';\n        var off = 0;\n        var carry = 0;\n\n        for (var i = 0; i < this.length; i++) {\n          var w = this.words[i];\n          var word = ((w << off | carry) & 0xffffff).toString(16);\n          carry = w >>> 24 - off & 0xffffff;\n\n          if (carry !== 0 || i !== this.length - 1) {\n            out = zeros[6 - word.length] + word + out;\n          } else {\n            out = word + out;\n          }\n\n          off += 2;\n\n          if (off >= 26) {\n            off -= 26;\n            i--;\n          }\n        }\n\n        if (carry !== 0) {\n          out = carry.toString(16) + out;\n        }\n\n        while (out.length % padding !== 0) {\n          out = '0' + out;\n        }\n\n        if (this.negative !== 0) {\n          out = '-' + out;\n        }\n\n        return out;\n      }\n\n      if (base === (base | 0) && base >= 2 && base <= 36) {\n        // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n        var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n        var groupBase = groupBases[base];\n        out = '';\n        var c = this.clone();\n        c.negative = 0;\n\n        while (!c.isZero()) {\n          var r = c.modn(groupBase).toString(base);\n          c = c.idivn(groupBase);\n\n          if (!c.isZero()) {\n            out = zeros[groupSize - r.length] + r + out;\n          } else {\n            out = r + out;\n          }\n        }\n\n        if (this.isZero()) {\n          out = '0' + out;\n        }\n\n        while (out.length % padding !== 0) {\n          out = '0' + out;\n        }\n\n        if (this.negative !== 0) {\n          out = '-' + out;\n        }\n\n        return out;\n      }\n\n      assert(false, 'Base should be between 2 and 36');\n    };\n\n    BN.prototype.toNumber = function toNumber() {\n      var ret = this.words[0];\n\n      if (this.length === 2) {\n        ret += this.words[1] * 0x4000000;\n      } else if (this.length === 3 && this.words[2] === 0x01) {\n        // NOTE: at this stage it is known that the top bit is set\n        ret += 0x10000000000000 + this.words[1] * 0x4000000;\n      } else if (this.length > 2) {\n        assert(false, 'Number can only safely store up to 53 bits');\n      }\n\n      return this.negative !== 0 ? -ret : ret;\n    };\n\n    BN.prototype.toJSON = function toJSON() {\n      return this.toString(16);\n    };\n\n    BN.prototype.toBuffer = function toBuffer(endian, length) {\n      assert(typeof Buffer !== 'undefined');\n      return this.toArrayLike(Buffer, endian, length);\n    };\n\n    BN.prototype.toArray = function toArray(endian, length) {\n      return this.toArrayLike(Array, endian, length);\n    };\n\n    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n      var byteLength = this.byteLength();\n      var reqLength = length || Math.max(1, byteLength);\n      assert(byteLength <= reqLength, 'byte array longer than desired length');\n      assert(reqLength > 0, 'Requested array length <= 0');\n      this.strip();\n      var littleEndian = endian === 'le';\n      var res = new ArrayType(reqLength);\n      var b, i;\n      var q = this.clone();\n\n      if (!littleEndian) {\n        // Assume big-endian\n        for (i = 0; i < reqLength - byteLength; i++) {\n          res[i] = 0;\n        }\n\n        for (i = 0; !q.isZero(); i++) {\n          b = q.andln(0xff);\n          q.iushrn(8);\n          res[reqLength - i - 1] = b;\n        }\n      } else {\n        for (i = 0; !q.isZero(); i++) {\n          b = q.andln(0xff);\n          q.iushrn(8);\n          res[i] = b;\n        }\n\n        for (; i < reqLength; i++) {\n          res[i] = 0;\n        }\n      }\n\n      return res;\n    };\n\n    if (Math.clz32) {\n      BN.prototype._countBits = function _countBits(w) {\n        return 32 - Math.clz32(w);\n      };\n    } else {\n      BN.prototype._countBits = function _countBits(w) {\n        var t = w;\n        var r = 0;\n\n        if (t >= 0x1000) {\n          r += 13;\n          t >>>= 13;\n        }\n\n        if (t >= 0x40) {\n          r += 7;\n          t >>>= 7;\n        }\n\n        if (t >= 0x8) {\n          r += 4;\n          t >>>= 4;\n        }\n\n        if (t >= 0x02) {\n          r += 2;\n          t >>>= 2;\n        }\n\n        return r + t;\n      };\n    }\n\n    BN.prototype._zeroBits = function _zeroBits(w) {\n      // Short-cut\n      if (w === 0) return 26;\n      var t = w;\n      var r = 0;\n\n      if ((t & 0x1fff) === 0) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if ((t & 0x7f) === 0) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if ((t & 0xf) === 0) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if ((t & 0x3) === 0) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      if ((t & 0x1) === 0) {\n        r++;\n      }\n\n      return r;\n    }; // Return number of used bits in a BN\n\n\n    BN.prototype.bitLength = function bitLength() {\n      var w = this.words[this.length - 1];\n\n      var hi = this._countBits(w);\n\n      return (this.length - 1) * 26 + hi;\n    };\n\n    function toBitArray(num) {\n      var w = new Array(num.bitLength());\n\n      for (var bit = 0; bit < w.length; bit++) {\n        var off = bit / 26 | 0;\n        var wbit = bit % 26;\n        w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n      }\n\n      return w;\n    } // Number of trailing zero bits\n\n\n    BN.prototype.zeroBits = function zeroBits() {\n      if (this.isZero()) return 0;\n      var r = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var b = this._zeroBits(this.words[i]);\n\n        r += b;\n        if (b !== 26) break;\n      }\n\n      return r;\n    };\n\n    BN.prototype.byteLength = function byteLength() {\n      return Math.ceil(this.bitLength() / 8);\n    };\n\n    BN.prototype.toTwos = function toTwos(width) {\n      if (this.negative !== 0) {\n        return this.abs().inotn(width).iaddn(1);\n      }\n\n      return this.clone();\n    };\n\n    BN.prototype.fromTwos = function fromTwos(width) {\n      if (this.testn(width - 1)) {\n        return this.notn(width).iaddn(1).ineg();\n      }\n\n      return this.clone();\n    };\n\n    BN.prototype.isNeg = function isNeg() {\n      return this.negative !== 0;\n    }; // Return negative clone of `this`\n\n\n    BN.prototype.neg = function neg() {\n      return this.clone().ineg();\n    };\n\n    BN.prototype.ineg = function ineg() {\n      if (!this.isZero()) {\n        this.negative ^= 1;\n      }\n\n      return this;\n    }; // Or `num` with `this` in-place\n\n\n    BN.prototype.iuor = function iuor(num) {\n      while (this.length < num.length) {\n        this.words[this.length++] = 0;\n      }\n\n      for (var i = 0; i < num.length; i++) {\n        this.words[i] = this.words[i] | num.words[i];\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.ior = function ior(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuor(num);\n    }; // Or `num` with `this`\n\n\n    BN.prototype.or = function or(num) {\n      if (this.length > num.length) return this.clone().ior(num);\n      return num.clone().ior(this);\n    };\n\n    BN.prototype.uor = function uor(num) {\n      if (this.length > num.length) return this.clone().iuor(num);\n      return num.clone().iuor(this);\n    }; // And `num` with `this` in-place\n\n\n    BN.prototype.iuand = function iuand(num) {\n      // b = min-length(num, this)\n      var b;\n\n      if (this.length > num.length) {\n        b = num;\n      } else {\n        b = this;\n      }\n\n      for (var i = 0; i < b.length; i++) {\n        this.words[i] = this.words[i] & num.words[i];\n      }\n\n      this.length = b.length;\n      return this.strip();\n    };\n\n    BN.prototype.iand = function iand(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuand(num);\n    }; // And `num` with `this`\n\n\n    BN.prototype.and = function and(num) {\n      if (this.length > num.length) return this.clone().iand(num);\n      return num.clone().iand(this);\n    };\n\n    BN.prototype.uand = function uand(num) {\n      if (this.length > num.length) return this.clone().iuand(num);\n      return num.clone().iuand(this);\n    }; // Xor `num` with `this` in-place\n\n\n    BN.prototype.iuxor = function iuxor(num) {\n      // a.length > b.length\n      var a;\n      var b;\n\n      if (this.length > num.length) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      for (var i = 0; i < b.length; i++) {\n        this.words[i] = a.words[i] ^ b.words[i];\n      }\n\n      if (this !== a) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      this.length = a.length;\n      return this.strip();\n    };\n\n    BN.prototype.ixor = function ixor(num) {\n      assert((this.negative | num.negative) === 0);\n      return this.iuxor(num);\n    }; // Xor `num` with `this`\n\n\n    BN.prototype.xor = function xor(num) {\n      if (this.length > num.length) return this.clone().ixor(num);\n      return num.clone().ixor(this);\n    };\n\n    BN.prototype.uxor = function uxor(num) {\n      if (this.length > num.length) return this.clone().iuxor(num);\n      return num.clone().iuxor(this);\n    }; // Not ``this`` with ``width`` bitwidth\n\n\n    BN.prototype.inotn = function inotn(width) {\n      assert(typeof width === 'number' && width >= 0);\n      var bytesNeeded = Math.ceil(width / 26) | 0;\n      var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n      this._expand(bytesNeeded);\n\n      if (bitsLeft > 0) {\n        bytesNeeded--;\n      } // Handle complete words\n\n\n      for (var i = 0; i < bytesNeeded; i++) {\n        this.words[i] = ~this.words[i] & 0x3ffffff;\n      } // Handle the residue\n\n\n      if (bitsLeft > 0) {\n        this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n      } // And remove leading zeroes\n\n\n      return this.strip();\n    };\n\n    BN.prototype.notn = function notn(width) {\n      return this.clone().inotn(width);\n    }; // Set `bit` of `this`\n\n\n    BN.prototype.setn = function setn(bit, val) {\n      assert(typeof bit === 'number' && bit >= 0);\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n\n      this._expand(off + 1);\n\n      if (val) {\n        this.words[off] = this.words[off] | 1 << wbit;\n      } else {\n        this.words[off] = this.words[off] & ~(1 << wbit);\n      }\n\n      return this.strip();\n    }; // Add `num` to `this` in-place\n\n\n    BN.prototype.iadd = function iadd(num) {\n      var r; // negative + positive\n\n      if (this.negative !== 0 && num.negative === 0) {\n        this.negative = 0;\n        r = this.isub(num);\n        this.negative ^= 1;\n        return this._normSign(); // positive + negative\n      } else if (this.negative === 0 && num.negative !== 0) {\n        num.negative = 0;\n        r = this.isub(num);\n        num.negative = 1;\n        return r._normSign();\n      } // a.length > b.length\n\n\n      var a, b;\n\n      if (this.length > num.length) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      var carry = 0;\n\n      for (var i = 0; i < b.length; i++) {\n        r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n        this.words[i] = r & 0x3ffffff;\n        carry = r >>> 26;\n      }\n\n      for (; carry !== 0 && i < a.length; i++) {\n        r = (a.words[i] | 0) + carry;\n        this.words[i] = r & 0x3ffffff;\n        carry = r >>> 26;\n      }\n\n      this.length = a.length;\n\n      if (carry !== 0) {\n        this.words[this.length] = carry;\n        this.length++; // Copy the rest of the words\n      } else if (a !== this) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      return this;\n    }; // Add `num` to `this`\n\n\n    BN.prototype.add = function add(num) {\n      var res;\n\n      if (num.negative !== 0 && this.negative === 0) {\n        num.negative = 0;\n        res = this.sub(num);\n        num.negative ^= 1;\n        return res;\n      } else if (num.negative === 0 && this.negative !== 0) {\n        this.negative = 0;\n        res = num.sub(this);\n        this.negative = 1;\n        return res;\n      }\n\n      if (this.length > num.length) return this.clone().iadd(num);\n      return num.clone().iadd(this);\n    }; // Subtract `num` from `this` in-place\n\n\n    BN.prototype.isub = function isub(num) {\n      // this - (-num) = this + num\n      if (num.negative !== 0) {\n        num.negative = 0;\n        var r = this.iadd(num);\n        num.negative = 1;\n        return r._normSign(); // -this - num = -(this + num)\n      } else if (this.negative !== 0) {\n        this.negative = 0;\n        this.iadd(num);\n        this.negative = 1;\n        return this._normSign();\n      } // At this point both numbers are positive\n\n\n      var cmp = this.cmp(num); // Optimization - zeroify\n\n      if (cmp === 0) {\n        this.negative = 0;\n        this.length = 1;\n        this.words[0] = 0;\n        return this;\n      } // a > b\n\n\n      var a, b;\n\n      if (cmp > 0) {\n        a = this;\n        b = num;\n      } else {\n        a = num;\n        b = this;\n      }\n\n      var carry = 0;\n\n      for (var i = 0; i < b.length; i++) {\n        r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n        carry = r >> 26;\n        this.words[i] = r & 0x3ffffff;\n      }\n\n      for (; carry !== 0 && i < a.length; i++) {\n        r = (a.words[i] | 0) + carry;\n        carry = r >> 26;\n        this.words[i] = r & 0x3ffffff;\n      } // Copy rest of the words\n\n\n      if (carry === 0 && i < a.length && a !== this) {\n        for (; i < a.length; i++) {\n          this.words[i] = a.words[i];\n        }\n      }\n\n      this.length = Math.max(this.length, i);\n\n      if (a !== this) {\n        this.negative = 1;\n      }\n\n      return this.strip();\n    }; // Subtract `num` from `this`\n\n\n    BN.prototype.sub = function sub(num) {\n      return this.clone().isub(num);\n    };\n\n    function smallMulTo(self, num, out) {\n      out.negative = num.negative ^ self.negative;\n      var len = self.length + num.length | 0;\n      out.length = len;\n      len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n      var a = self.words[0] | 0;\n      var b = num.words[0] | 0;\n      var r = a * b;\n      var lo = r & 0x3ffffff;\n      var carry = r / 0x4000000 | 0;\n      out.words[0] = lo;\n\n      for (var k = 1; k < len; k++) {\n        // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n        // note that ncarry could be >= 0x3ffffff\n        var ncarry = carry >>> 26;\n        var rword = carry & 0x3ffffff;\n        var maxJ = Math.min(k, num.length - 1);\n\n        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n          var i = k - j | 0;\n          a = self.words[i] | 0;\n          b = num.words[j] | 0;\n          r = a * b + rword;\n          ncarry += r / 0x4000000 | 0;\n          rword = r & 0x3ffffff;\n        }\n\n        out.words[k] = rword | 0;\n        carry = ncarry | 0;\n      }\n\n      if (carry !== 0) {\n        out.words[k] = carry | 0;\n      } else {\n        out.length--;\n      }\n\n      return out.strip();\n    } // TODO(indutny): it may be reasonable to omit it for users who don't need\n    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n    // multiplication (like elliptic secp256k1).\n\n\n    var comb10MulTo = function comb10MulTo(self, num, out) {\n      var a = self.words;\n      var b = num.words;\n      var o = out.words;\n      var c = 0;\n      var lo;\n      var mid;\n      var hi;\n      var a0 = a[0] | 0;\n      var al0 = a0 & 0x1fff;\n      var ah0 = a0 >>> 13;\n      var a1 = a[1] | 0;\n      var al1 = a1 & 0x1fff;\n      var ah1 = a1 >>> 13;\n      var a2 = a[2] | 0;\n      var al2 = a2 & 0x1fff;\n      var ah2 = a2 >>> 13;\n      var a3 = a[3] | 0;\n      var al3 = a3 & 0x1fff;\n      var ah3 = a3 >>> 13;\n      var a4 = a[4] | 0;\n      var al4 = a4 & 0x1fff;\n      var ah4 = a4 >>> 13;\n      var a5 = a[5] | 0;\n      var al5 = a5 & 0x1fff;\n      var ah5 = a5 >>> 13;\n      var a6 = a[6] | 0;\n      var al6 = a6 & 0x1fff;\n      var ah6 = a6 >>> 13;\n      var a7 = a[7] | 0;\n      var al7 = a7 & 0x1fff;\n      var ah7 = a7 >>> 13;\n      var a8 = a[8] | 0;\n      var al8 = a8 & 0x1fff;\n      var ah8 = a8 >>> 13;\n      var a9 = a[9] | 0;\n      var al9 = a9 & 0x1fff;\n      var ah9 = a9 >>> 13;\n      var b0 = b[0] | 0;\n      var bl0 = b0 & 0x1fff;\n      var bh0 = b0 >>> 13;\n      var b1 = b[1] | 0;\n      var bl1 = b1 & 0x1fff;\n      var bh1 = b1 >>> 13;\n      var b2 = b[2] | 0;\n      var bl2 = b2 & 0x1fff;\n      var bh2 = b2 >>> 13;\n      var b3 = b[3] | 0;\n      var bl3 = b3 & 0x1fff;\n      var bh3 = b3 >>> 13;\n      var b4 = b[4] | 0;\n      var bl4 = b4 & 0x1fff;\n      var bh4 = b4 >>> 13;\n      var b5 = b[5] | 0;\n      var bl5 = b5 & 0x1fff;\n      var bh5 = b5 >>> 13;\n      var b6 = b[6] | 0;\n      var bl6 = b6 & 0x1fff;\n      var bh6 = b6 >>> 13;\n      var b7 = b[7] | 0;\n      var bl7 = b7 & 0x1fff;\n      var bh7 = b7 >>> 13;\n      var b8 = b[8] | 0;\n      var bl8 = b8 & 0x1fff;\n      var bh8 = b8 >>> 13;\n      var b9 = b[9] | 0;\n      var bl9 = b9 & 0x1fff;\n      var bh9 = b9 >>> 13;\n      out.negative = self.negative ^ num.negative;\n      out.length = 19;\n      /* k = 0 */\n\n      lo = Math.imul(al0, bl0);\n      mid = Math.imul(al0, bh0);\n      mid = mid + Math.imul(ah0, bl0) | 0;\n      hi = Math.imul(ah0, bh0);\n      var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n      w0 &= 0x3ffffff;\n      /* k = 1 */\n\n      lo = Math.imul(al1, bl0);\n      mid = Math.imul(al1, bh0);\n      mid = mid + Math.imul(ah1, bl0) | 0;\n      hi = Math.imul(ah1, bh0);\n      lo = lo + Math.imul(al0, bl1) | 0;\n      mid = mid + Math.imul(al0, bh1) | 0;\n      mid = mid + Math.imul(ah0, bl1) | 0;\n      hi = hi + Math.imul(ah0, bh1) | 0;\n      var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n      w1 &= 0x3ffffff;\n      /* k = 2 */\n\n      lo = Math.imul(al2, bl0);\n      mid = Math.imul(al2, bh0);\n      mid = mid + Math.imul(ah2, bl0) | 0;\n      hi = Math.imul(ah2, bh0);\n      lo = lo + Math.imul(al1, bl1) | 0;\n      mid = mid + Math.imul(al1, bh1) | 0;\n      mid = mid + Math.imul(ah1, bl1) | 0;\n      hi = hi + Math.imul(ah1, bh1) | 0;\n      lo = lo + Math.imul(al0, bl2) | 0;\n      mid = mid + Math.imul(al0, bh2) | 0;\n      mid = mid + Math.imul(ah0, bl2) | 0;\n      hi = hi + Math.imul(ah0, bh2) | 0;\n      var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n      w2 &= 0x3ffffff;\n      /* k = 3 */\n\n      lo = Math.imul(al3, bl0);\n      mid = Math.imul(al3, bh0);\n      mid = mid + Math.imul(ah3, bl0) | 0;\n      hi = Math.imul(ah3, bh0);\n      lo = lo + Math.imul(al2, bl1) | 0;\n      mid = mid + Math.imul(al2, bh1) | 0;\n      mid = mid + Math.imul(ah2, bl1) | 0;\n      hi = hi + Math.imul(ah2, bh1) | 0;\n      lo = lo + Math.imul(al1, bl2) | 0;\n      mid = mid + Math.imul(al1, bh2) | 0;\n      mid = mid + Math.imul(ah1, bl2) | 0;\n      hi = hi + Math.imul(ah1, bh2) | 0;\n      lo = lo + Math.imul(al0, bl3) | 0;\n      mid = mid + Math.imul(al0, bh3) | 0;\n      mid = mid + Math.imul(ah0, bl3) | 0;\n      hi = hi + Math.imul(ah0, bh3) | 0;\n      var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n      w3 &= 0x3ffffff;\n      /* k = 4 */\n\n      lo = Math.imul(al4, bl0);\n      mid = Math.imul(al4, bh0);\n      mid = mid + Math.imul(ah4, bl0) | 0;\n      hi = Math.imul(ah4, bh0);\n      lo = lo + Math.imul(al3, bl1) | 0;\n      mid = mid + Math.imul(al3, bh1) | 0;\n      mid = mid + Math.imul(ah3, bl1) | 0;\n      hi = hi + Math.imul(ah3, bh1) | 0;\n      lo = lo + Math.imul(al2, bl2) | 0;\n      mid = mid + Math.imul(al2, bh2) | 0;\n      mid = mid + Math.imul(ah2, bl2) | 0;\n      hi = hi + Math.imul(ah2, bh2) | 0;\n      lo = lo + Math.imul(al1, bl3) | 0;\n      mid = mid + Math.imul(al1, bh3) | 0;\n      mid = mid + Math.imul(ah1, bl3) | 0;\n      hi = hi + Math.imul(ah1, bh3) | 0;\n      lo = lo + Math.imul(al0, bl4) | 0;\n      mid = mid + Math.imul(al0, bh4) | 0;\n      mid = mid + Math.imul(ah0, bl4) | 0;\n      hi = hi + Math.imul(ah0, bh4) | 0;\n      var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n      w4 &= 0x3ffffff;\n      /* k = 5 */\n\n      lo = Math.imul(al5, bl0);\n      mid = Math.imul(al5, bh0);\n      mid = mid + Math.imul(ah5, bl0) | 0;\n      hi = Math.imul(ah5, bh0);\n      lo = lo + Math.imul(al4, bl1) | 0;\n      mid = mid + Math.imul(al4, bh1) | 0;\n      mid = mid + Math.imul(ah4, bl1) | 0;\n      hi = hi + Math.imul(ah4, bh1) | 0;\n      lo = lo + Math.imul(al3, bl2) | 0;\n      mid = mid + Math.imul(al3, bh2) | 0;\n      mid = mid + Math.imul(ah3, bl2) | 0;\n      hi = hi + Math.imul(ah3, bh2) | 0;\n      lo = lo + Math.imul(al2, bl3) | 0;\n      mid = mid + Math.imul(al2, bh3) | 0;\n      mid = mid + Math.imul(ah2, bl3) | 0;\n      hi = hi + Math.imul(ah2, bh3) | 0;\n      lo = lo + Math.imul(al1, bl4) | 0;\n      mid = mid + Math.imul(al1, bh4) | 0;\n      mid = mid + Math.imul(ah1, bl4) | 0;\n      hi = hi + Math.imul(ah1, bh4) | 0;\n      lo = lo + Math.imul(al0, bl5) | 0;\n      mid = mid + Math.imul(al0, bh5) | 0;\n      mid = mid + Math.imul(ah0, bl5) | 0;\n      hi = hi + Math.imul(ah0, bh5) | 0;\n      var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n      w5 &= 0x3ffffff;\n      /* k = 6 */\n\n      lo = Math.imul(al6, bl0);\n      mid = Math.imul(al6, bh0);\n      mid = mid + Math.imul(ah6, bl0) | 0;\n      hi = Math.imul(ah6, bh0);\n      lo = lo + Math.imul(al5, bl1) | 0;\n      mid = mid + Math.imul(al5, bh1) | 0;\n      mid = mid + Math.imul(ah5, bl1) | 0;\n      hi = hi + Math.imul(ah5, bh1) | 0;\n      lo = lo + Math.imul(al4, bl2) | 0;\n      mid = mid + Math.imul(al4, bh2) | 0;\n      mid = mid + Math.imul(ah4, bl2) | 0;\n      hi = hi + Math.imul(ah4, bh2) | 0;\n      lo = lo + Math.imul(al3, bl3) | 0;\n      mid = mid + Math.imul(al3, bh3) | 0;\n      mid = mid + Math.imul(ah3, bl3) | 0;\n      hi = hi + Math.imul(ah3, bh3) | 0;\n      lo = lo + Math.imul(al2, bl4) | 0;\n      mid = mid + Math.imul(al2, bh4) | 0;\n      mid = mid + Math.imul(ah2, bl4) | 0;\n      hi = hi + Math.imul(ah2, bh4) | 0;\n      lo = lo + Math.imul(al1, bl5) | 0;\n      mid = mid + Math.imul(al1, bh5) | 0;\n      mid = mid + Math.imul(ah1, bl5) | 0;\n      hi = hi + Math.imul(ah1, bh5) | 0;\n      lo = lo + Math.imul(al0, bl6) | 0;\n      mid = mid + Math.imul(al0, bh6) | 0;\n      mid = mid + Math.imul(ah0, bl6) | 0;\n      hi = hi + Math.imul(ah0, bh6) | 0;\n      var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n      w6 &= 0x3ffffff;\n      /* k = 7 */\n\n      lo = Math.imul(al7, bl0);\n      mid = Math.imul(al7, bh0);\n      mid = mid + Math.imul(ah7, bl0) | 0;\n      hi = Math.imul(ah7, bh0);\n      lo = lo + Math.imul(al6, bl1) | 0;\n      mid = mid + Math.imul(al6, bh1) | 0;\n      mid = mid + Math.imul(ah6, bl1) | 0;\n      hi = hi + Math.imul(ah6, bh1) | 0;\n      lo = lo + Math.imul(al5, bl2) | 0;\n      mid = mid + Math.imul(al5, bh2) | 0;\n      mid = mid + Math.imul(ah5, bl2) | 0;\n      hi = hi + Math.imul(ah5, bh2) | 0;\n      lo = lo + Math.imul(al4, bl3) | 0;\n      mid = mid + Math.imul(al4, bh3) | 0;\n      mid = mid + Math.imul(ah4, bl3) | 0;\n      hi = hi + Math.imul(ah4, bh3) | 0;\n      lo = lo + Math.imul(al3, bl4) | 0;\n      mid = mid + Math.imul(al3, bh4) | 0;\n      mid = mid + Math.imul(ah3, bl4) | 0;\n      hi = hi + Math.imul(ah3, bh4) | 0;\n      lo = lo + Math.imul(al2, bl5) | 0;\n      mid = mid + Math.imul(al2, bh5) | 0;\n      mid = mid + Math.imul(ah2, bl5) | 0;\n      hi = hi + Math.imul(ah2, bh5) | 0;\n      lo = lo + Math.imul(al1, bl6) | 0;\n      mid = mid + Math.imul(al1, bh6) | 0;\n      mid = mid + Math.imul(ah1, bl6) | 0;\n      hi = hi + Math.imul(ah1, bh6) | 0;\n      lo = lo + Math.imul(al0, bl7) | 0;\n      mid = mid + Math.imul(al0, bh7) | 0;\n      mid = mid + Math.imul(ah0, bl7) | 0;\n      hi = hi + Math.imul(ah0, bh7) | 0;\n      var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n      w7 &= 0x3ffffff;\n      /* k = 8 */\n\n      lo = Math.imul(al8, bl0);\n      mid = Math.imul(al8, bh0);\n      mid = mid + Math.imul(ah8, bl0) | 0;\n      hi = Math.imul(ah8, bh0);\n      lo = lo + Math.imul(al7, bl1) | 0;\n      mid = mid + Math.imul(al7, bh1) | 0;\n      mid = mid + Math.imul(ah7, bl1) | 0;\n      hi = hi + Math.imul(ah7, bh1) | 0;\n      lo = lo + Math.imul(al6, bl2) | 0;\n      mid = mid + Math.imul(al6, bh2) | 0;\n      mid = mid + Math.imul(ah6, bl2) | 0;\n      hi = hi + Math.imul(ah6, bh2) | 0;\n      lo = lo + Math.imul(al5, bl3) | 0;\n      mid = mid + Math.imul(al5, bh3) | 0;\n      mid = mid + Math.imul(ah5, bl3) | 0;\n      hi = hi + Math.imul(ah5, bh3) | 0;\n      lo = lo + Math.imul(al4, bl4) | 0;\n      mid = mid + Math.imul(al4, bh4) | 0;\n      mid = mid + Math.imul(ah4, bl4) | 0;\n      hi = hi + Math.imul(ah4, bh4) | 0;\n      lo = lo + Math.imul(al3, bl5) | 0;\n      mid = mid + Math.imul(al3, bh5) | 0;\n      mid = mid + Math.imul(ah3, bl5) | 0;\n      hi = hi + Math.imul(ah3, bh5) | 0;\n      lo = lo + Math.imul(al2, bl6) | 0;\n      mid = mid + Math.imul(al2, bh6) | 0;\n      mid = mid + Math.imul(ah2, bl6) | 0;\n      hi = hi + Math.imul(ah2, bh6) | 0;\n      lo = lo + Math.imul(al1, bl7) | 0;\n      mid = mid + Math.imul(al1, bh7) | 0;\n      mid = mid + Math.imul(ah1, bl7) | 0;\n      hi = hi + Math.imul(ah1, bh7) | 0;\n      lo = lo + Math.imul(al0, bl8) | 0;\n      mid = mid + Math.imul(al0, bh8) | 0;\n      mid = mid + Math.imul(ah0, bl8) | 0;\n      hi = hi + Math.imul(ah0, bh8) | 0;\n      var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n      w8 &= 0x3ffffff;\n      /* k = 9 */\n\n      lo = Math.imul(al9, bl0);\n      mid = Math.imul(al9, bh0);\n      mid = mid + Math.imul(ah9, bl0) | 0;\n      hi = Math.imul(ah9, bh0);\n      lo = lo + Math.imul(al8, bl1) | 0;\n      mid = mid + Math.imul(al8, bh1) | 0;\n      mid = mid + Math.imul(ah8, bl1) | 0;\n      hi = hi + Math.imul(ah8, bh1) | 0;\n      lo = lo + Math.imul(al7, bl2) | 0;\n      mid = mid + Math.imul(al7, bh2) | 0;\n      mid = mid + Math.imul(ah7, bl2) | 0;\n      hi = hi + Math.imul(ah7, bh2) | 0;\n      lo = lo + Math.imul(al6, bl3) | 0;\n      mid = mid + Math.imul(al6, bh3) | 0;\n      mid = mid + Math.imul(ah6, bl3) | 0;\n      hi = hi + Math.imul(ah6, bh3) | 0;\n      lo = lo + Math.imul(al5, bl4) | 0;\n      mid = mid + Math.imul(al5, bh4) | 0;\n      mid = mid + Math.imul(ah5, bl4) | 0;\n      hi = hi + Math.imul(ah5, bh4) | 0;\n      lo = lo + Math.imul(al4, bl5) | 0;\n      mid = mid + Math.imul(al4, bh5) | 0;\n      mid = mid + Math.imul(ah4, bl5) | 0;\n      hi = hi + Math.imul(ah4, bh5) | 0;\n      lo = lo + Math.imul(al3, bl6) | 0;\n      mid = mid + Math.imul(al3, bh6) | 0;\n      mid = mid + Math.imul(ah3, bl6) | 0;\n      hi = hi + Math.imul(ah3, bh6) | 0;\n      lo = lo + Math.imul(al2, bl7) | 0;\n      mid = mid + Math.imul(al2, bh7) | 0;\n      mid = mid + Math.imul(ah2, bl7) | 0;\n      hi = hi + Math.imul(ah2, bh7) | 0;\n      lo = lo + Math.imul(al1, bl8) | 0;\n      mid = mid + Math.imul(al1, bh8) | 0;\n      mid = mid + Math.imul(ah1, bl8) | 0;\n      hi = hi + Math.imul(ah1, bh8) | 0;\n      lo = lo + Math.imul(al0, bl9) | 0;\n      mid = mid + Math.imul(al0, bh9) | 0;\n      mid = mid + Math.imul(ah0, bl9) | 0;\n      hi = hi + Math.imul(ah0, bh9) | 0;\n      var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n      w9 &= 0x3ffffff;\n      /* k = 10 */\n\n      lo = Math.imul(al9, bl1);\n      mid = Math.imul(al9, bh1);\n      mid = mid + Math.imul(ah9, bl1) | 0;\n      hi = Math.imul(ah9, bh1);\n      lo = lo + Math.imul(al8, bl2) | 0;\n      mid = mid + Math.imul(al8, bh2) | 0;\n      mid = mid + Math.imul(ah8, bl2) | 0;\n      hi = hi + Math.imul(ah8, bh2) | 0;\n      lo = lo + Math.imul(al7, bl3) | 0;\n      mid = mid + Math.imul(al7, bh3) | 0;\n      mid = mid + Math.imul(ah7, bl3) | 0;\n      hi = hi + Math.imul(ah7, bh3) | 0;\n      lo = lo + Math.imul(al6, bl4) | 0;\n      mid = mid + Math.imul(al6, bh4) | 0;\n      mid = mid + Math.imul(ah6, bl4) | 0;\n      hi = hi + Math.imul(ah6, bh4) | 0;\n      lo = lo + Math.imul(al5, bl5) | 0;\n      mid = mid + Math.imul(al5, bh5) | 0;\n      mid = mid + Math.imul(ah5, bl5) | 0;\n      hi = hi + Math.imul(ah5, bh5) | 0;\n      lo = lo + Math.imul(al4, bl6) | 0;\n      mid = mid + Math.imul(al4, bh6) | 0;\n      mid = mid + Math.imul(ah4, bl6) | 0;\n      hi = hi + Math.imul(ah4, bh6) | 0;\n      lo = lo + Math.imul(al3, bl7) | 0;\n      mid = mid + Math.imul(al3, bh7) | 0;\n      mid = mid + Math.imul(ah3, bl7) | 0;\n      hi = hi + Math.imul(ah3, bh7) | 0;\n      lo = lo + Math.imul(al2, bl8) | 0;\n      mid = mid + Math.imul(al2, bh8) | 0;\n      mid = mid + Math.imul(ah2, bl8) | 0;\n      hi = hi + Math.imul(ah2, bh8) | 0;\n      lo = lo + Math.imul(al1, bl9) | 0;\n      mid = mid + Math.imul(al1, bh9) | 0;\n      mid = mid + Math.imul(ah1, bl9) | 0;\n      hi = hi + Math.imul(ah1, bh9) | 0;\n      var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n      w10 &= 0x3ffffff;\n      /* k = 11 */\n\n      lo = Math.imul(al9, bl2);\n      mid = Math.imul(al9, bh2);\n      mid = mid + Math.imul(ah9, bl2) | 0;\n      hi = Math.imul(ah9, bh2);\n      lo = lo + Math.imul(al8, bl3) | 0;\n      mid = mid + Math.imul(al8, bh3) | 0;\n      mid = mid + Math.imul(ah8, bl3) | 0;\n      hi = hi + Math.imul(ah8, bh3) | 0;\n      lo = lo + Math.imul(al7, bl4) | 0;\n      mid = mid + Math.imul(al7, bh4) | 0;\n      mid = mid + Math.imul(ah7, bl4) | 0;\n      hi = hi + Math.imul(ah7, bh4) | 0;\n      lo = lo + Math.imul(al6, bl5) | 0;\n      mid = mid + Math.imul(al6, bh5) | 0;\n      mid = mid + Math.imul(ah6, bl5) | 0;\n      hi = hi + Math.imul(ah6, bh5) | 0;\n      lo = lo + Math.imul(al5, bl6) | 0;\n      mid = mid + Math.imul(al5, bh6) | 0;\n      mid = mid + Math.imul(ah5, bl6) | 0;\n      hi = hi + Math.imul(ah5, bh6) | 0;\n      lo = lo + Math.imul(al4, bl7) | 0;\n      mid = mid + Math.imul(al4, bh7) | 0;\n      mid = mid + Math.imul(ah4, bl7) | 0;\n      hi = hi + Math.imul(ah4, bh7) | 0;\n      lo = lo + Math.imul(al3, bl8) | 0;\n      mid = mid + Math.imul(al3, bh8) | 0;\n      mid = mid + Math.imul(ah3, bl8) | 0;\n      hi = hi + Math.imul(ah3, bh8) | 0;\n      lo = lo + Math.imul(al2, bl9) | 0;\n      mid = mid + Math.imul(al2, bh9) | 0;\n      mid = mid + Math.imul(ah2, bl9) | 0;\n      hi = hi + Math.imul(ah2, bh9) | 0;\n      var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n      w11 &= 0x3ffffff;\n      /* k = 12 */\n\n      lo = Math.imul(al9, bl3);\n      mid = Math.imul(al9, bh3);\n      mid = mid + Math.imul(ah9, bl3) | 0;\n      hi = Math.imul(ah9, bh3);\n      lo = lo + Math.imul(al8, bl4) | 0;\n      mid = mid + Math.imul(al8, bh4) | 0;\n      mid = mid + Math.imul(ah8, bl4) | 0;\n      hi = hi + Math.imul(ah8, bh4) | 0;\n      lo = lo + Math.imul(al7, bl5) | 0;\n      mid = mid + Math.imul(al7, bh5) | 0;\n      mid = mid + Math.imul(ah7, bl5) | 0;\n      hi = hi + Math.imul(ah7, bh5) | 0;\n      lo = lo + Math.imul(al6, bl6) | 0;\n      mid = mid + Math.imul(al6, bh6) | 0;\n      mid = mid + Math.imul(ah6, bl6) | 0;\n      hi = hi + Math.imul(ah6, bh6) | 0;\n      lo = lo + Math.imul(al5, bl7) | 0;\n      mid = mid + Math.imul(al5, bh7) | 0;\n      mid = mid + Math.imul(ah5, bl7) | 0;\n      hi = hi + Math.imul(ah5, bh7) | 0;\n      lo = lo + Math.imul(al4, bl8) | 0;\n      mid = mid + Math.imul(al4, bh8) | 0;\n      mid = mid + Math.imul(ah4, bl8) | 0;\n      hi = hi + Math.imul(ah4, bh8) | 0;\n      lo = lo + Math.imul(al3, bl9) | 0;\n      mid = mid + Math.imul(al3, bh9) | 0;\n      mid = mid + Math.imul(ah3, bl9) | 0;\n      hi = hi + Math.imul(ah3, bh9) | 0;\n      var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n      w12 &= 0x3ffffff;\n      /* k = 13 */\n\n      lo = Math.imul(al9, bl4);\n      mid = Math.imul(al9, bh4);\n      mid = mid + Math.imul(ah9, bl4) | 0;\n      hi = Math.imul(ah9, bh4);\n      lo = lo + Math.imul(al8, bl5) | 0;\n      mid = mid + Math.imul(al8, bh5) | 0;\n      mid = mid + Math.imul(ah8, bl5) | 0;\n      hi = hi + Math.imul(ah8, bh5) | 0;\n      lo = lo + Math.imul(al7, bl6) | 0;\n      mid = mid + Math.imul(al7, bh6) | 0;\n      mid = mid + Math.imul(ah7, bl6) | 0;\n      hi = hi + Math.imul(ah7, bh6) | 0;\n      lo = lo + Math.imul(al6, bl7) | 0;\n      mid = mid + Math.imul(al6, bh7) | 0;\n      mid = mid + Math.imul(ah6, bl7) | 0;\n      hi = hi + Math.imul(ah6, bh7) | 0;\n      lo = lo + Math.imul(al5, bl8) | 0;\n      mid = mid + Math.imul(al5, bh8) | 0;\n      mid = mid + Math.imul(ah5, bl8) | 0;\n      hi = hi + Math.imul(ah5, bh8) | 0;\n      lo = lo + Math.imul(al4, bl9) | 0;\n      mid = mid + Math.imul(al4, bh9) | 0;\n      mid = mid + Math.imul(ah4, bl9) | 0;\n      hi = hi + Math.imul(ah4, bh9) | 0;\n      var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n      w13 &= 0x3ffffff;\n      /* k = 14 */\n\n      lo = Math.imul(al9, bl5);\n      mid = Math.imul(al9, bh5);\n      mid = mid + Math.imul(ah9, bl5) | 0;\n      hi = Math.imul(ah9, bh5);\n      lo = lo + Math.imul(al8, bl6) | 0;\n      mid = mid + Math.imul(al8, bh6) | 0;\n      mid = mid + Math.imul(ah8, bl6) | 0;\n      hi = hi + Math.imul(ah8, bh6) | 0;\n      lo = lo + Math.imul(al7, bl7) | 0;\n      mid = mid + Math.imul(al7, bh7) | 0;\n      mid = mid + Math.imul(ah7, bl7) | 0;\n      hi = hi + Math.imul(ah7, bh7) | 0;\n      lo = lo + Math.imul(al6, bl8) | 0;\n      mid = mid + Math.imul(al6, bh8) | 0;\n      mid = mid + Math.imul(ah6, bl8) | 0;\n      hi = hi + Math.imul(ah6, bh8) | 0;\n      lo = lo + Math.imul(al5, bl9) | 0;\n      mid = mid + Math.imul(al5, bh9) | 0;\n      mid = mid + Math.imul(ah5, bl9) | 0;\n      hi = hi + Math.imul(ah5, bh9) | 0;\n      var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n      w14 &= 0x3ffffff;\n      /* k = 15 */\n\n      lo = Math.imul(al9, bl6);\n      mid = Math.imul(al9, bh6);\n      mid = mid + Math.imul(ah9, bl6) | 0;\n      hi = Math.imul(ah9, bh6);\n      lo = lo + Math.imul(al8, bl7) | 0;\n      mid = mid + Math.imul(al8, bh7) | 0;\n      mid = mid + Math.imul(ah8, bl7) | 0;\n      hi = hi + Math.imul(ah8, bh7) | 0;\n      lo = lo + Math.imul(al7, bl8) | 0;\n      mid = mid + Math.imul(al7, bh8) | 0;\n      mid = mid + Math.imul(ah7, bl8) | 0;\n      hi = hi + Math.imul(ah7, bh8) | 0;\n      lo = lo + Math.imul(al6, bl9) | 0;\n      mid = mid + Math.imul(al6, bh9) | 0;\n      mid = mid + Math.imul(ah6, bl9) | 0;\n      hi = hi + Math.imul(ah6, bh9) | 0;\n      var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n      w15 &= 0x3ffffff;\n      /* k = 16 */\n\n      lo = Math.imul(al9, bl7);\n      mid = Math.imul(al9, bh7);\n      mid = mid + Math.imul(ah9, bl7) | 0;\n      hi = Math.imul(ah9, bh7);\n      lo = lo + Math.imul(al8, bl8) | 0;\n      mid = mid + Math.imul(al8, bh8) | 0;\n      mid = mid + Math.imul(ah8, bl8) | 0;\n      hi = hi + Math.imul(ah8, bh8) | 0;\n      lo = lo + Math.imul(al7, bl9) | 0;\n      mid = mid + Math.imul(al7, bh9) | 0;\n      mid = mid + Math.imul(ah7, bl9) | 0;\n      hi = hi + Math.imul(ah7, bh9) | 0;\n      var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n      w16 &= 0x3ffffff;\n      /* k = 17 */\n\n      lo = Math.imul(al9, bl8);\n      mid = Math.imul(al9, bh8);\n      mid = mid + Math.imul(ah9, bl8) | 0;\n      hi = Math.imul(ah9, bh8);\n      lo = lo + Math.imul(al8, bl9) | 0;\n      mid = mid + Math.imul(al8, bh9) | 0;\n      mid = mid + Math.imul(ah8, bl9) | 0;\n      hi = hi + Math.imul(ah8, bh9) | 0;\n      var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n      w17 &= 0x3ffffff;\n      /* k = 18 */\n\n      lo = Math.imul(al9, bl9);\n      mid = Math.imul(al9, bh9);\n      mid = mid + Math.imul(ah9, bl9) | 0;\n      hi = Math.imul(ah9, bh9);\n      var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n      c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n      w18 &= 0x3ffffff;\n      o[0] = w0;\n      o[1] = w1;\n      o[2] = w2;\n      o[3] = w3;\n      o[4] = w4;\n      o[5] = w5;\n      o[6] = w6;\n      o[7] = w7;\n      o[8] = w8;\n      o[9] = w9;\n      o[10] = w10;\n      o[11] = w11;\n      o[12] = w12;\n      o[13] = w13;\n      o[14] = w14;\n      o[15] = w15;\n      o[16] = w16;\n      o[17] = w17;\n      o[18] = w18;\n\n      if (c !== 0) {\n        o[19] = c;\n        out.length++;\n      }\n\n      return out;\n    }; // Polyfill comb\n\n\n    if (!Math.imul) {\n      comb10MulTo = smallMulTo;\n    }\n\n    function bigMulTo(self, num, out) {\n      out.negative = num.negative ^ self.negative;\n      out.length = self.length + num.length;\n      var carry = 0;\n      var hncarry = 0;\n\n      for (var k = 0; k < out.length - 1; k++) {\n        // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n        // note that ncarry could be >= 0x3ffffff\n        var ncarry = hncarry;\n        hncarry = 0;\n        var rword = carry & 0x3ffffff;\n        var maxJ = Math.min(k, num.length - 1);\n\n        for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n          var i = k - j;\n          var a = self.words[i] | 0;\n          var b = num.words[j] | 0;\n          var r = a * b;\n          var lo = r & 0x3ffffff;\n          ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n          lo = lo + rword | 0;\n          rword = lo & 0x3ffffff;\n          ncarry = ncarry + (lo >>> 26) | 0;\n          hncarry += ncarry >>> 26;\n          ncarry &= 0x3ffffff;\n        }\n\n        out.words[k] = rword;\n        carry = ncarry;\n        ncarry = hncarry;\n      }\n\n      if (carry !== 0) {\n        out.words[k] = carry;\n      } else {\n        out.length--;\n      }\n\n      return out.strip();\n    }\n\n    function jumboMulTo(self, num, out) {\n      var fftm = new FFTM();\n      return fftm.mulp(self, num, out);\n    }\n\n    BN.prototype.mulTo = function mulTo(num, out) {\n      var res;\n      var len = this.length + num.length;\n\n      if (this.length === 10 && num.length === 10) {\n        res = comb10MulTo(this, num, out);\n      } else if (len < 63) {\n        res = smallMulTo(this, num, out);\n      } else if (len < 1024) {\n        res = bigMulTo(this, num, out);\n      } else {\n        res = jumboMulTo(this, num, out);\n      }\n\n      return res;\n    }; // Cooley-Tukey algorithm for FFT\n    // slightly revisited to rely on looping instead of recursion\n\n\n    function FFTM(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n\n    FFTM.prototype.makeRBT = function makeRBT(N) {\n      var t = new Array(N);\n      var l = BN.prototype._countBits(N) - 1;\n\n      for (var i = 0; i < N; i++) {\n        t[i] = this.revBin(i, l, N);\n      }\n\n      return t;\n    }; // Returns binary-reversed representation of `x`\n\n\n    FFTM.prototype.revBin = function revBin(x, l, N) {\n      if (x === 0 || x === N - 1) return x;\n      var rb = 0;\n\n      for (var i = 0; i < l; i++) {\n        rb |= (x & 1) << l - i - 1;\n        x >>= 1;\n      }\n\n      return rb;\n    }; // Performs \"tweedling\" phase, therefore 'emulating'\n    // behaviour of the recursive algorithm\n\n\n    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n      for (var i = 0; i < N; i++) {\n        rtws[i] = rws[rbt[i]];\n        itws[i] = iws[rbt[i]];\n      }\n    };\n\n    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n      this.permute(rbt, rws, iws, rtws, itws, N);\n\n      for (var s = 1; s < N; s <<= 1) {\n        var l = s << 1;\n        var rtwdf = Math.cos(2 * Math.PI / l);\n        var itwdf = Math.sin(2 * Math.PI / l);\n\n        for (var p = 0; p < N; p += l) {\n          var rtwdf_ = rtwdf;\n          var itwdf_ = itwdf;\n\n          for (var j = 0; j < s; j++) {\n            var re = rtws[p + j];\n            var ie = itws[p + j];\n            var ro = rtws[p + j + s];\n            var io = itws[p + j + s];\n            var rx = rtwdf_ * ro - itwdf_ * io;\n            io = rtwdf_ * io + itwdf_ * ro;\n            ro = rx;\n            rtws[p + j] = re + ro;\n            itws[p + j] = ie + io;\n            rtws[p + j + s] = re - ro;\n            itws[p + j + s] = ie - io;\n            /* jshint maxdepth : false */\n\n            if (j !== l) {\n              rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n              itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n              rtwdf_ = rx;\n            }\n          }\n        }\n      }\n    };\n\n    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n      var N = Math.max(m, n) | 1;\n      var odd = N & 1;\n      var i = 0;\n\n      for (N = N / 2 | 0; N; N = N >>> 1) {\n        i++;\n      }\n\n      return 1 << i + 1 + odd;\n    };\n\n    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n      if (N <= 1) return;\n\n      for (var i = 0; i < N / 2; i++) {\n        var t = rws[i];\n        rws[i] = rws[N - i - 1];\n        rws[N - i - 1] = t;\n        t = iws[i];\n        iws[i] = -iws[N - i - 1];\n        iws[N - i - 1] = -t;\n      }\n    };\n\n    FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n      var carry = 0;\n\n      for (var i = 0; i < N / 2; i++) {\n        var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n        ws[i] = w & 0x3ffffff;\n\n        if (w < 0x4000000) {\n          carry = 0;\n        } else {\n          carry = w / 0x4000000 | 0;\n        }\n      }\n\n      return ws;\n    };\n\n    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n      var carry = 0;\n\n      for (var i = 0; i < len; i++) {\n        carry = carry + (ws[i] | 0);\n        rws[2 * i] = carry & 0x1fff;\n        carry = carry >>> 13;\n        rws[2 * i + 1] = carry & 0x1fff;\n        carry = carry >>> 13;\n      } // Pad with zeroes\n\n\n      for (i = 2 * len; i < N; ++i) {\n        rws[i] = 0;\n      }\n\n      assert(carry === 0);\n      assert((carry & ~0x1fff) === 0);\n    };\n\n    FFTM.prototype.stub = function stub(N) {\n      var ph = new Array(N);\n\n      for (var i = 0; i < N; i++) {\n        ph[i] = 0;\n      }\n\n      return ph;\n    };\n\n    FFTM.prototype.mulp = function mulp(x, y, out) {\n      var N = 2 * this.guessLen13b(x.length, y.length);\n      var rbt = this.makeRBT(N);\n\n      var _ = this.stub(N);\n\n      var rws = new Array(N);\n      var rwst = new Array(N);\n      var iwst = new Array(N);\n      var nrws = new Array(N);\n      var nrwst = new Array(N);\n      var niwst = new Array(N);\n      var rmws = out.words;\n      rmws.length = N;\n      this.convert13b(x.words, x.length, rws, N);\n      this.convert13b(y.words, y.length, nrws, N);\n      this.transform(rws, _, rwst, iwst, N, rbt);\n      this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n      for (var i = 0; i < N; i++) {\n        var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n        iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n        rwst[i] = rx;\n      }\n\n      this.conjugate(rwst, iwst, N);\n      this.transform(rwst, iwst, rmws, _, N, rbt);\n      this.conjugate(rmws, _, N);\n      this.normalize13b(rmws, N);\n      out.negative = x.negative ^ y.negative;\n      out.length = x.length + y.length;\n      return out.strip();\n    }; // Multiply `this` by `num`\n\n\n    BN.prototype.mul = function mul(num) {\n      var out = new BN(null);\n      out.words = new Array(this.length + num.length);\n      return this.mulTo(num, out);\n    }; // Multiply employing FFT\n\n\n    BN.prototype.mulf = function mulf(num) {\n      var out = new BN(null);\n      out.words = new Array(this.length + num.length);\n      return jumboMulTo(this, num, out);\n    }; // In-place Multiplication\n\n\n    BN.prototype.imul = function imul(num) {\n      return this.clone().mulTo(num, this);\n    };\n\n    BN.prototype.imuln = function imuln(num) {\n      assert(typeof num === 'number');\n      assert(num < 0x4000000); // Carry\n\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = (this.words[i] | 0) * num;\n        var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n        carry >>= 26;\n        carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n        carry += lo >>> 26;\n        this.words[i] = lo & 0x3ffffff;\n      }\n\n      if (carry !== 0) {\n        this.words[i] = carry;\n        this.length++;\n      }\n\n      return this;\n    };\n\n    BN.prototype.muln = function muln(num) {\n      return this.clone().imuln(num);\n    }; // `this` * `this`\n\n\n    BN.prototype.sqr = function sqr() {\n      return this.mul(this);\n    }; // `this` * `this` in-place\n\n\n    BN.prototype.isqr = function isqr() {\n      return this.imul(this.clone());\n    }; // Math.pow(`this`, `num`)\n\n\n    BN.prototype.pow = function pow(num) {\n      var w = toBitArray(num);\n      if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n      var res = this;\n\n      for (var i = 0; i < w.length; i++, res = res.sqr()) {\n        if (w[i] !== 0) break;\n      }\n\n      if (++i < w.length) {\n        for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n          if (w[i] === 0) continue;\n          res = res.mul(q);\n        }\n      }\n\n      return res;\n    }; // Shift-left in-place\n\n\n    BN.prototype.iushln = function iushln(bits) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var r = bits % 26;\n      var s = (bits - r) / 26;\n      var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n      var i;\n\n      if (r !== 0) {\n        var carry = 0;\n\n        for (i = 0; i < this.length; i++) {\n          var newCarry = this.words[i] & carryMask;\n          var c = (this.words[i] | 0) - newCarry << r;\n          this.words[i] = c | carry;\n          carry = newCarry >>> 26 - r;\n        }\n\n        if (carry) {\n          this.words[i] = carry;\n          this.length++;\n        }\n      }\n\n      if (s !== 0) {\n        for (i = this.length - 1; i >= 0; i--) {\n          this.words[i + s] = this.words[i];\n        }\n\n        for (i = 0; i < s; i++) {\n          this.words[i] = 0;\n        }\n\n        this.length += s;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.ishln = function ishln(bits) {\n      // TODO(indutny): implement me\n      assert(this.negative === 0);\n      return this.iushln(bits);\n    }; // Shift-right in-place\n    // NOTE: `hint` is a lowest bit before trailing zeroes\n    // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n    BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var h;\n\n      if (hint) {\n        h = (hint - hint % 26) / 26;\n      } else {\n        h = 0;\n      }\n\n      var r = bits % 26;\n      var s = Math.min((bits - r) / 26, this.length);\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      var maskedWords = extended;\n      h -= s;\n      h = Math.max(0, h); // Extended mode, copy masked part\n\n      if (maskedWords) {\n        for (var i = 0; i < s; i++) {\n          maskedWords.words[i] = this.words[i];\n        }\n\n        maskedWords.length = s;\n      }\n\n      if (s === 0) ;else if (this.length > s) {\n        this.length -= s;\n\n        for (i = 0; i < this.length; i++) {\n          this.words[i] = this.words[i + s];\n        }\n      } else {\n        this.words[0] = 0;\n        this.length = 1;\n      }\n      var carry = 0;\n\n      for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n        var word = this.words[i] | 0;\n        this.words[i] = carry << 26 - r | word >>> r;\n        carry = word & mask;\n      } // Push carried bits as a mask\n\n\n      if (maskedWords && carry !== 0) {\n        maskedWords.words[maskedWords.length++] = carry;\n      }\n\n      if (this.length === 0) {\n        this.words[0] = 0;\n        this.length = 1;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n      // TODO(indutny): implement me\n      assert(this.negative === 0);\n      return this.iushrn(bits, hint, extended);\n    }; // Shift-left\n\n\n    BN.prototype.shln = function shln(bits) {\n      return this.clone().ishln(bits);\n    };\n\n    BN.prototype.ushln = function ushln(bits) {\n      return this.clone().iushln(bits);\n    }; // Shift-right\n\n\n    BN.prototype.shrn = function shrn(bits) {\n      return this.clone().ishrn(bits);\n    };\n\n    BN.prototype.ushrn = function ushrn(bits) {\n      return this.clone().iushrn(bits);\n    }; // Test if n bit is set\n\n\n    BN.prototype.testn = function testn(bit) {\n      assert(typeof bit === 'number' && bit >= 0);\n      var r = bit % 26;\n      var s = (bit - r) / 26;\n      var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n      if (this.length <= s) return false; // Check bit and return\n\n      var w = this.words[s];\n      return !!(w & q);\n    }; // Return only lowers bits of number (in-place)\n\n\n    BN.prototype.imaskn = function imaskn(bits) {\n      assert(typeof bits === 'number' && bits >= 0);\n      var r = bits % 26;\n      var s = (bits - r) / 26;\n      assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n      if (this.length <= s) {\n        return this;\n      }\n\n      if (r !== 0) {\n        s++;\n      }\n\n      this.length = Math.min(s, this.length);\n\n      if (r !== 0) {\n        var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n        this.words[this.length - 1] &= mask;\n      }\n\n      return this.strip();\n    }; // Return only lowers bits of number\n\n\n    BN.prototype.maskn = function maskn(bits) {\n      return this.clone().imaskn(bits);\n    }; // Add plain number `num` to `this`\n\n\n    BN.prototype.iaddn = function iaddn(num) {\n      assert(typeof num === 'number');\n      assert(num < 0x4000000);\n      if (num < 0) return this.isubn(-num); // Possible sign change\n\n      if (this.negative !== 0) {\n        if (this.length === 1 && (this.words[0] | 0) < num) {\n          this.words[0] = num - (this.words[0] | 0);\n          this.negative = 0;\n          return this;\n        }\n\n        this.negative = 0;\n        this.isubn(num);\n        this.negative = 1;\n        return this;\n      } // Add without checks\n\n\n      return this._iaddn(num);\n    };\n\n    BN.prototype._iaddn = function _iaddn(num) {\n      this.words[0] += num; // Carry\n\n      for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n        this.words[i] -= 0x4000000;\n\n        if (i === this.length - 1) {\n          this.words[i + 1] = 1;\n        } else {\n          this.words[i + 1]++;\n        }\n      }\n\n      this.length = Math.max(this.length, i + 1);\n      return this;\n    }; // Subtract plain number `num` from `this`\n\n\n    BN.prototype.isubn = function isubn(num) {\n      assert(typeof num === 'number');\n      assert(num < 0x4000000);\n      if (num < 0) return this.iaddn(-num);\n\n      if (this.negative !== 0) {\n        this.negative = 0;\n        this.iaddn(num);\n        this.negative = 1;\n        return this;\n      }\n\n      this.words[0] -= num;\n\n      if (this.length === 1 && this.words[0] < 0) {\n        this.words[0] = -this.words[0];\n        this.negative = 1;\n      } else {\n        // Carry\n        for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n          this.words[i] += 0x4000000;\n          this.words[i + 1] -= 1;\n        }\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.addn = function addn(num) {\n      return this.clone().iaddn(num);\n    };\n\n    BN.prototype.subn = function subn(num) {\n      return this.clone().isubn(num);\n    };\n\n    BN.prototype.iabs = function iabs() {\n      this.negative = 0;\n      return this;\n    };\n\n    BN.prototype.abs = function abs() {\n      return this.clone().iabs();\n    };\n\n    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n      var len = num.length + shift;\n      var i;\n\n      this._expand(len);\n\n      var w;\n      var carry = 0;\n\n      for (i = 0; i < num.length; i++) {\n        w = (this.words[i + shift] | 0) + carry;\n        var right = (num.words[i] | 0) * mul;\n        w -= right & 0x3ffffff;\n        carry = (w >> 26) - (right / 0x4000000 | 0);\n        this.words[i + shift] = w & 0x3ffffff;\n      }\n\n      for (; i < this.length - shift; i++) {\n        w = (this.words[i + shift] | 0) + carry;\n        carry = w >> 26;\n        this.words[i + shift] = w & 0x3ffffff;\n      }\n\n      if (carry === 0) return this.strip(); // Subtraction overflow\n\n      assert(carry === -1);\n      carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        w = -(this.words[i] | 0) + carry;\n        carry = w >> 26;\n        this.words[i] = w & 0x3ffffff;\n      }\n\n      this.negative = 1;\n      return this.strip();\n    };\n\n    BN.prototype._wordDiv = function _wordDiv(num, mode) {\n      var shift = this.length - num.length;\n      var a = this.clone();\n      var b = num; // Normalize\n\n      var bhi = b.words[b.length - 1] | 0;\n\n      var bhiBits = this._countBits(bhi);\n\n      shift = 26 - bhiBits;\n\n      if (shift !== 0) {\n        b = b.ushln(shift);\n        a.iushln(shift);\n        bhi = b.words[b.length - 1] | 0;\n      } // Initialize quotient\n\n\n      var m = a.length - b.length;\n      var q;\n\n      if (mode !== 'mod') {\n        q = new BN(null);\n        q.length = m + 1;\n        q.words = new Array(q.length);\n\n        for (var i = 0; i < q.length; i++) {\n          q.words[i] = 0;\n        }\n      }\n\n      var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n      if (diff.negative === 0) {\n        a = diff;\n\n        if (q) {\n          q.words[m] = 1;\n        }\n      }\n\n      for (var j = m - 1; j >= 0; j--) {\n        var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n        // (0x7ffffff)\n\n        qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n        a._ishlnsubmul(b, qj, j);\n\n        while (a.negative !== 0) {\n          qj--;\n          a.negative = 0;\n\n          a._ishlnsubmul(b, 1, j);\n\n          if (!a.isZero()) {\n            a.negative ^= 1;\n          }\n        }\n\n        if (q) {\n          q.words[j] = qj;\n        }\n      }\n\n      if (q) {\n        q.strip();\n      }\n\n      a.strip(); // Denormalize\n\n      if (mode !== 'div' && shift !== 0) {\n        a.iushrn(shift);\n      }\n\n      return {\n        div: q || null,\n        mod: a\n      };\n    }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n    //       to `div` to request div only, or be absent to\n    //       request both div & mod\n    //       2) `positive` is true if unsigned mod is requested\n\n\n    BN.prototype.divmod = function divmod(num, mode, positive) {\n      assert(!num.isZero());\n\n      if (this.isZero()) {\n        return {\n          div: new BN(0),\n          mod: new BN(0)\n        };\n      }\n\n      var div, mod, res;\n\n      if (this.negative !== 0 && num.negative === 0) {\n        res = this.neg().divmod(num, mode);\n\n        if (mode !== 'mod') {\n          div = res.div.neg();\n        }\n\n        if (mode !== 'div') {\n          mod = res.mod.neg();\n\n          if (positive && mod.negative !== 0) {\n            mod.iadd(num);\n          }\n        }\n\n        return {\n          div: div,\n          mod: mod\n        };\n      }\n\n      if (this.negative === 0 && num.negative !== 0) {\n        res = this.divmod(num.neg(), mode);\n\n        if (mode !== 'mod') {\n          div = res.div.neg();\n        }\n\n        return {\n          div: div,\n          mod: res.mod\n        };\n      }\n\n      if ((this.negative & num.negative) !== 0) {\n        res = this.neg().divmod(num.neg(), mode);\n\n        if (mode !== 'div') {\n          mod = res.mod.neg();\n\n          if (positive && mod.negative !== 0) {\n            mod.isub(num);\n          }\n        }\n\n        return {\n          div: res.div,\n          mod: mod\n        };\n      } // Both numbers are positive at this point\n      // Strip both numbers to approximate shift value\n\n\n      if (num.length > this.length || this.cmp(num) < 0) {\n        return {\n          div: new BN(0),\n          mod: this\n        };\n      } // Very short reduction\n\n\n      if (num.length === 1) {\n        if (mode === 'div') {\n          return {\n            div: this.divn(num.words[0]),\n            mod: null\n          };\n        }\n\n        if (mode === 'mod') {\n          return {\n            div: null,\n            mod: new BN(this.modn(num.words[0]))\n          };\n        }\n\n        return {\n          div: this.divn(num.words[0]),\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return this._wordDiv(num, mode);\n    }; // Find `this` / `num`\n\n\n    BN.prototype.div = function div(num) {\n      return this.divmod(num, 'div', false).div;\n    }; // Find `this` % `num`\n\n\n    BN.prototype.mod = function mod(num) {\n      return this.divmod(num, 'mod', false).mod;\n    };\n\n    BN.prototype.umod = function umod(num) {\n      return this.divmod(num, 'mod', true).mod;\n    }; // Find Round(`this` / `num`)\n\n\n    BN.prototype.divRound = function divRound(num) {\n      var dm = this.divmod(num); // Fast case - exact division\n\n      if (dm.mod.isZero()) return dm.div;\n      var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n      var half = num.ushrn(1);\n      var r2 = num.andln(1);\n      var cmp = mod.cmp(half); // Round down\n\n      if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n      return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n    };\n\n    BN.prototype.modn = function modn(num) {\n      assert(num <= 0x3ffffff);\n      var p = (1 << 26) % num;\n      var acc = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        acc = (p * acc + (this.words[i] | 0)) % num;\n      }\n\n      return acc;\n    }; // In-place division by number\n\n\n    BN.prototype.idivn = function idivn(num) {\n      assert(num <= 0x3ffffff);\n      var carry = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        var w = (this.words[i] | 0) + carry * 0x4000000;\n        this.words[i] = w / num | 0;\n        carry = w % num;\n      }\n\n      return this.strip();\n    };\n\n    BN.prototype.divn = function divn(num) {\n      return this.clone().idivn(num);\n    };\n\n    BN.prototype.egcd = function egcd(p) {\n      assert(p.negative === 0);\n      assert(!p.isZero());\n      var x = this;\n      var y = p.clone();\n\n      if (x.negative !== 0) {\n        x = x.umod(p);\n      } else {\n        x = x.clone();\n      } // A * x + B * y = x\n\n\n      var A = new BN(1);\n      var B = new BN(0); // C * x + D * y = y\n\n      var C = new BN(0);\n      var D = new BN(1);\n      var g = 0;\n\n      while (x.isEven() && y.isEven()) {\n        x.iushrn(1);\n        y.iushrn(1);\n        ++g;\n      }\n\n      var yp = y.clone();\n      var xp = x.clone();\n\n      while (!x.isZero()) {\n        for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n        if (i > 0) {\n          x.iushrn(i);\n\n          while (i-- > 0) {\n            if (A.isOdd() || B.isOdd()) {\n              A.iadd(yp);\n              B.isub(xp);\n            }\n\n            A.iushrn(1);\n            B.iushrn(1);\n          }\n        }\n\n        for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n        if (j > 0) {\n          y.iushrn(j);\n\n          while (j-- > 0) {\n            if (C.isOdd() || D.isOdd()) {\n              C.iadd(yp);\n              D.isub(xp);\n            }\n\n            C.iushrn(1);\n            D.iushrn(1);\n          }\n        }\n\n        if (x.cmp(y) >= 0) {\n          x.isub(y);\n          A.isub(C);\n          B.isub(D);\n        } else {\n          y.isub(x);\n          C.isub(A);\n          D.isub(B);\n        }\n      }\n\n      return {\n        a: C,\n        b: D,\n        gcd: y.iushln(g)\n      };\n    }; // This is reduced incarnation of the binary EEA\n    // above, designated to invert members of the\n    // _prime_ fields F(p) at a maximal speed\n\n\n    BN.prototype._invmp = function _invmp(p) {\n      assert(p.negative === 0);\n      assert(!p.isZero());\n      var a = this;\n      var b = p.clone();\n\n      if (a.negative !== 0) {\n        a = a.umod(p);\n      } else {\n        a = a.clone();\n      }\n\n      var x1 = new BN(1);\n      var x2 = new BN(0);\n      var delta = b.clone();\n\n      while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n        for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n\n        if (i > 0) {\n          a.iushrn(i);\n\n          while (i-- > 0) {\n            if (x1.isOdd()) {\n              x1.iadd(delta);\n            }\n\n            x1.iushrn(1);\n          }\n        }\n\n        for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n\n        if (j > 0) {\n          b.iushrn(j);\n\n          while (j-- > 0) {\n            if (x2.isOdd()) {\n              x2.iadd(delta);\n            }\n\n            x2.iushrn(1);\n          }\n        }\n\n        if (a.cmp(b) >= 0) {\n          a.isub(b);\n          x1.isub(x2);\n        } else {\n          b.isub(a);\n          x2.isub(x1);\n        }\n      }\n\n      var res;\n\n      if (a.cmpn(1) === 0) {\n        res = x1;\n      } else {\n        res = x2;\n      }\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(p);\n      }\n\n      return res;\n    };\n\n    BN.prototype.gcd = function gcd(num) {\n      if (this.isZero()) return num.abs();\n      if (num.isZero()) return this.abs();\n      var a = this.clone();\n      var b = num.clone();\n      a.negative = 0;\n      b.negative = 0; // Remove common factor of two\n\n      for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n        a.iushrn(1);\n        b.iushrn(1);\n      }\n\n      do {\n        while (a.isEven()) {\n          a.iushrn(1);\n        }\n\n        while (b.isEven()) {\n          b.iushrn(1);\n        }\n\n        var r = a.cmp(b);\n\n        if (r < 0) {\n          // Swap `a` and `b` to make `a` always bigger than `b`\n          var t = a;\n          a = b;\n          b = t;\n        } else if (r === 0 || b.cmpn(1) === 0) {\n          break;\n        }\n\n        a.isub(b);\n      } while (true);\n\n      return b.iushln(shift);\n    }; // Invert number in the field F(num)\n\n\n    BN.prototype.invm = function invm(num) {\n      return this.egcd(num).a.umod(num);\n    };\n\n    BN.prototype.isEven = function isEven() {\n      return (this.words[0] & 1) === 0;\n    };\n\n    BN.prototype.isOdd = function isOdd() {\n      return (this.words[0] & 1) === 1;\n    }; // And first word and num\n\n\n    BN.prototype.andln = function andln(num) {\n      return this.words[0] & num;\n    }; // Increment at the bit position in-line\n\n\n    BN.prototype.bincn = function bincn(bit) {\n      assert(typeof bit === 'number');\n      var r = bit % 26;\n      var s = (bit - r) / 26;\n      var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n      if (this.length <= s) {\n        this._expand(s + 1);\n\n        this.words[s] |= q;\n        return this;\n      } // Add bit and propagate, if needed\n\n\n      var carry = q;\n\n      for (var i = s; carry !== 0 && i < this.length; i++) {\n        var w = this.words[i] | 0;\n        w += carry;\n        carry = w >>> 26;\n        w &= 0x3ffffff;\n        this.words[i] = w;\n      }\n\n      if (carry !== 0) {\n        this.words[i] = carry;\n        this.length++;\n      }\n\n      return this;\n    };\n\n    BN.prototype.isZero = function isZero() {\n      return this.length === 1 && this.words[0] === 0;\n    };\n\n    BN.prototype.cmpn = function cmpn(num) {\n      var negative = num < 0;\n      if (this.negative !== 0 && !negative) return -1;\n      if (this.negative === 0 && negative) return 1;\n      this.strip();\n      var res;\n\n      if (this.length > 1) {\n        res = 1;\n      } else {\n        if (negative) {\n          num = -num;\n        }\n\n        assert(num <= 0x3ffffff, 'Number is too big');\n        var w = this.words[0] | 0;\n        res = w === num ? 0 : w < num ? -1 : 1;\n      }\n\n      if (this.negative !== 0) return -res | 0;\n      return res;\n    }; // Compare two numbers and return:\n    // 1 - if `this` > `num`\n    // 0 - if `this` == `num`\n    // -1 - if `this` < `num`\n\n\n    BN.prototype.cmp = function cmp(num) {\n      if (this.negative !== 0 && num.negative === 0) return -1;\n      if (this.negative === 0 && num.negative !== 0) return 1;\n      var res = this.ucmp(num);\n      if (this.negative !== 0) return -res | 0;\n      return res;\n    }; // Unsigned comparison\n\n\n    BN.prototype.ucmp = function ucmp(num) {\n      // At this point both numbers have the same sign\n      if (this.length > num.length) return 1;\n      if (this.length < num.length) return -1;\n      var res = 0;\n\n      for (var i = this.length - 1; i >= 0; i--) {\n        var a = this.words[i] | 0;\n        var b = num.words[i] | 0;\n        if (a === b) continue;\n\n        if (a < b) {\n          res = -1;\n        } else if (a > b) {\n          res = 1;\n        }\n\n        break;\n      }\n\n      return res;\n    };\n\n    BN.prototype.gtn = function gtn(num) {\n      return this.cmpn(num) === 1;\n    };\n\n    BN.prototype.gt = function gt(num) {\n      return this.cmp(num) === 1;\n    };\n\n    BN.prototype.gten = function gten(num) {\n      return this.cmpn(num) >= 0;\n    };\n\n    BN.prototype.gte = function gte(num) {\n      return this.cmp(num) >= 0;\n    };\n\n    BN.prototype.ltn = function ltn(num) {\n      return this.cmpn(num) === -1;\n    };\n\n    BN.prototype.lt = function lt(num) {\n      return this.cmp(num) === -1;\n    };\n\n    BN.prototype.lten = function lten(num) {\n      return this.cmpn(num) <= 0;\n    };\n\n    BN.prototype.lte = function lte(num) {\n      return this.cmp(num) <= 0;\n    };\n\n    BN.prototype.eqn = function eqn(num) {\n      return this.cmpn(num) === 0;\n    };\n\n    BN.prototype.eq = function eq(num) {\n      return this.cmp(num) === 0;\n    }; //\n    // A reduce context, could be using montgomery or something better, depending\n    // on the `m` itself.\n    //\n\n\n    BN.red = function red(num) {\n      return new Red(num);\n    };\n\n    BN.prototype.toRed = function toRed(ctx) {\n      assert(!this.red, 'Already a number in reduction context');\n      assert(this.negative === 0, 'red works only with positives');\n      return ctx.convertTo(this)._forceRed(ctx);\n    };\n\n    BN.prototype.fromRed = function fromRed() {\n      assert(this.red, 'fromRed works only with numbers in reduction context');\n      return this.red.convertFrom(this);\n    };\n\n    BN.prototype._forceRed = function _forceRed(ctx) {\n      this.red = ctx;\n      return this;\n    };\n\n    BN.prototype.forceRed = function forceRed(ctx) {\n      assert(!this.red, 'Already a number in reduction context');\n      return this._forceRed(ctx);\n    };\n\n    BN.prototype.redAdd = function redAdd(num) {\n      assert(this.red, 'redAdd works only with red numbers');\n      return this.red.add(this, num);\n    };\n\n    BN.prototype.redIAdd = function redIAdd(num) {\n      assert(this.red, 'redIAdd works only with red numbers');\n      return this.red.iadd(this, num);\n    };\n\n    BN.prototype.redSub = function redSub(num) {\n      assert(this.red, 'redSub works only with red numbers');\n      return this.red.sub(this, num);\n    };\n\n    BN.prototype.redISub = function redISub(num) {\n      assert(this.red, 'redISub works only with red numbers');\n      return this.red.isub(this, num);\n    };\n\n    BN.prototype.redShl = function redShl(num) {\n      assert(this.red, 'redShl works only with red numbers');\n      return this.red.shl(this, num);\n    };\n\n    BN.prototype.redMul = function redMul(num) {\n      assert(this.red, 'redMul works only with red numbers');\n\n      this.red._verify2(this, num);\n\n      return this.red.mul(this, num);\n    };\n\n    BN.prototype.redIMul = function redIMul(num) {\n      assert(this.red, 'redMul works only with red numbers');\n\n      this.red._verify2(this, num);\n\n      return this.red.imul(this, num);\n    };\n\n    BN.prototype.redSqr = function redSqr() {\n      assert(this.red, 'redSqr works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.sqr(this);\n    };\n\n    BN.prototype.redISqr = function redISqr() {\n      assert(this.red, 'redISqr works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.isqr(this);\n    }; // Square root over p\n\n\n    BN.prototype.redSqrt = function redSqrt() {\n      assert(this.red, 'redSqrt works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.sqrt(this);\n    };\n\n    BN.prototype.redInvm = function redInvm() {\n      assert(this.red, 'redInvm works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.invm(this);\n    }; // Return negative clone of `this` % `red modulo`\n\n\n    BN.prototype.redNeg = function redNeg() {\n      assert(this.red, 'redNeg works only with red numbers');\n\n      this.red._verify1(this);\n\n      return this.red.neg(this);\n    };\n\n    BN.prototype.redPow = function redPow(num) {\n      assert(this.red && !num.red, 'redPow(normalNum)');\n\n      this.red._verify1(this);\n\n      return this.red.pow(this, num);\n    }; // Prime numbers with efficient reduction\n\n\n    var primes = {\n      k256: null,\n      p224: null,\n      p192: null,\n      p25519: null\n    }; // Pseudo-Mersenne prime\n\n    function MPrime(name, p) {\n      // P = 2 ^ N - K\n      this.name = name;\n      this.p = new BN(p, 16);\n      this.n = this.p.bitLength();\n      this.k = new BN(1).iushln(this.n).isub(this.p);\n      this.tmp = this._tmp();\n    }\n\n    MPrime.prototype._tmp = function _tmp() {\n      var tmp = new BN(null);\n      tmp.words = new Array(Math.ceil(this.n / 13));\n      return tmp;\n    };\n\n    MPrime.prototype.ireduce = function ireduce(num) {\n      // Assumes that `num` is less than `P^2`\n      // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n      var r = num;\n      var rlen;\n\n      do {\n        this.split(r, this.tmp);\n        r = this.imulK(r);\n        r = r.iadd(this.tmp);\n        rlen = r.bitLength();\n      } while (rlen > this.n);\n\n      var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n      if (cmp === 0) {\n        r.words[0] = 0;\n        r.length = 1;\n      } else if (cmp > 0) {\n        r.isub(this.p);\n      } else {\n        if (r.strip !== undefined) {\n          // r is BN v4 instance\n          r.strip();\n        } else {\n          // r is BN v5 instance\n          r._strip();\n        }\n      }\n\n      return r;\n    };\n\n    MPrime.prototype.split = function split(input, out) {\n      input.iushrn(this.n, 0, out);\n    };\n\n    MPrime.prototype.imulK = function imulK(num) {\n      return num.imul(this.k);\n    };\n\n    function K256() {\n      MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n    }\n\n    inherits(K256, MPrime);\n\n    K256.prototype.split = function split(input, output) {\n      // 256 = 9 * 26 + 22\n      var mask = 0x3fffff;\n      var outLen = Math.min(input.length, 9);\n\n      for (var i = 0; i < outLen; i++) {\n        output.words[i] = input.words[i];\n      }\n\n      output.length = outLen;\n\n      if (input.length <= 9) {\n        input.words[0] = 0;\n        input.length = 1;\n        return;\n      } // Shift by 9 limbs\n\n\n      var prev = input.words[9];\n      output.words[output.length++] = prev & mask;\n\n      for (i = 10; i < input.length; i++) {\n        var next = input.words[i] | 0;\n        input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n        prev = next;\n      }\n\n      prev >>>= 22;\n      input.words[i - 10] = prev;\n\n      if (prev === 0 && input.length > 10) {\n        input.length -= 10;\n      } else {\n        input.length -= 9;\n      }\n    };\n\n    K256.prototype.imulK = function imulK(num) {\n      // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n      num.words[num.length] = 0;\n      num.words[num.length + 1] = 0;\n      num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n      var lo = 0;\n\n      for (var i = 0; i < num.length; i++) {\n        var w = num.words[i] | 0;\n        lo += w * 0x3d1;\n        num.words[i] = lo & 0x3ffffff;\n        lo = w * 0x40 + (lo / 0x4000000 | 0);\n      } // Fast length reduction\n\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n\n        if (num.words[num.length - 1] === 0) {\n          num.length--;\n        }\n      }\n\n      return num;\n    };\n\n    function P224() {\n      MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n    }\n\n    inherits(P224, MPrime);\n\n    function P192() {\n      MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n    }\n\n    inherits(P192, MPrime);\n\n    function P25519() {\n      // 2 ^ 255 - 19\n      MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n    }\n\n    inherits(P25519, MPrime);\n\n    P25519.prototype.imulK = function imulK(num) {\n      // K = 0x13\n      var carry = 0;\n\n      for (var i = 0; i < num.length; i++) {\n        var hi = (num.words[i] | 0) * 0x13 + carry;\n        var lo = hi & 0x3ffffff;\n        hi >>>= 26;\n        num.words[i] = lo;\n        carry = hi;\n      }\n\n      if (carry !== 0) {\n        num.words[num.length++] = carry;\n      }\n\n      return num;\n    }; // Exported mostly for testing purposes, use plain name instead\n\n\n    BN._prime = function prime(name) {\n      // Cached version of prime\n      if (primes[name]) return primes[name];\n      var prime;\n\n      if (name === 'k256') {\n        prime = new K256();\n      } else if (name === 'p224') {\n        prime = new P224();\n      } else if (name === 'p192') {\n        prime = new P192();\n      } else if (name === 'p25519') {\n        prime = new P25519();\n      } else {\n        throw new Error('Unknown prime ' + name);\n      }\n\n      primes[name] = prime;\n      return prime;\n    }; //\n    // Base reduction engine\n    //\n\n\n    function Red(m) {\n      if (typeof m === 'string') {\n        var prime = BN._prime(m);\n\n        this.m = prime.p;\n        this.prime = prime;\n      } else {\n        assert(m.gtn(1), 'modulus must be greater than 1');\n        this.m = m;\n        this.prime = null;\n      }\n    }\n\n    Red.prototype._verify1 = function _verify1(a) {\n      assert(a.negative === 0, 'red works only with positives');\n      assert(a.red, 'red works only with red numbers');\n    };\n\n    Red.prototype._verify2 = function _verify2(a, b) {\n      assert((a.negative | b.negative) === 0, 'red works only with positives');\n      assert(a.red && a.red === b.red, 'red works only with red numbers');\n    };\n\n    Red.prototype.imod = function imod(a) {\n      if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n      return a.umod(this.m)._forceRed(this);\n    };\n\n    Red.prototype.neg = function neg(a) {\n      if (a.isZero()) {\n        return a.clone();\n      }\n\n      return this.m.sub(a)._forceRed(this);\n    };\n\n    Red.prototype.add = function add(a, b) {\n      this._verify2(a, b);\n\n      var res = a.add(b);\n\n      if (res.cmp(this.m) >= 0) {\n        res.isub(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Red.prototype.iadd = function iadd(a, b) {\n      this._verify2(a, b);\n\n      var res = a.iadd(b);\n\n      if (res.cmp(this.m) >= 0) {\n        res.isub(this.m);\n      }\n\n      return res;\n    };\n\n    Red.prototype.sub = function sub(a, b) {\n      this._verify2(a, b);\n\n      var res = a.sub(b);\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Red.prototype.isub = function isub(a, b) {\n      this._verify2(a, b);\n\n      var res = a.isub(b);\n\n      if (res.cmpn(0) < 0) {\n        res.iadd(this.m);\n      }\n\n      return res;\n    };\n\n    Red.prototype.shl = function shl(a, num) {\n      this._verify1(a);\n\n      return this.imod(a.ushln(num));\n    };\n\n    Red.prototype.imul = function imul(a, b) {\n      this._verify2(a, b);\n\n      return this.imod(a.imul(b));\n    };\n\n    Red.prototype.mul = function mul(a, b) {\n      this._verify2(a, b);\n\n      return this.imod(a.mul(b));\n    };\n\n    Red.prototype.isqr = function isqr(a) {\n      return this.imul(a, a.clone());\n    };\n\n    Red.prototype.sqr = function sqr(a) {\n      return this.mul(a, a);\n    };\n\n    Red.prototype.sqrt = function sqrt(a) {\n      if (a.isZero()) return a.clone();\n      var mod3 = this.m.andln(3);\n      assert(mod3 % 2 === 1); // Fast case\n\n      if (mod3 === 3) {\n        var pow = this.m.add(new BN(1)).iushrn(2);\n        return this.pow(a, pow);\n      } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n      //\n      // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n      var q = this.m.subn(1);\n      var s = 0;\n\n      while (!q.isZero() && q.andln(1) === 0) {\n        s++;\n        q.iushrn(1);\n      }\n\n      assert(!q.isZero());\n      var one = new BN(1).toRed(this);\n      var nOne = one.redNeg(); // Find quadratic non-residue\n      // NOTE: Max is such because of generalized Riemann hypothesis.\n\n      var lpow = this.m.subn(1).iushrn(1);\n      var z = this.m.bitLength();\n      z = new BN(2 * z * z).toRed(this);\n\n      while (this.pow(z, lpow).cmp(nOne) !== 0) {\n        z.redIAdd(nOne);\n      }\n\n      var c = this.pow(z, q);\n      var r = this.pow(a, q.addn(1).iushrn(1));\n      var t = this.pow(a, q);\n      var m = s;\n\n      while (t.cmp(one) !== 0) {\n        var tmp = t;\n\n        for (var i = 0; tmp.cmp(one) !== 0; i++) {\n          tmp = tmp.redSqr();\n        }\n\n        assert(i < m);\n        var b = this.pow(c, new BN(1).iushln(m - i - 1));\n        r = r.redMul(b);\n        c = b.redSqr();\n        t = t.redMul(c);\n        m = i;\n      }\n\n      return r;\n    };\n\n    Red.prototype.invm = function invm(a) {\n      var inv = a._invmp(this.m);\n\n      if (inv.negative !== 0) {\n        inv.negative = 0;\n        return this.imod(inv).redNeg();\n      } else {\n        return this.imod(inv);\n      }\n    };\n\n    Red.prototype.pow = function pow(a, num) {\n      if (num.isZero()) return new BN(1).toRed(this);\n      if (num.cmpn(1) === 0) return a.clone();\n      var windowSize = 4;\n      var wnd = new Array(1 << windowSize);\n      wnd[0] = new BN(1).toRed(this);\n      wnd[1] = a;\n\n      for (var i = 2; i < wnd.length; i++) {\n        wnd[i] = this.mul(wnd[i - 1], a);\n      }\n\n      var res = wnd[0];\n      var current = 0;\n      var currentLen = 0;\n      var start = num.bitLength() % 26;\n\n      if (start === 0) {\n        start = 26;\n      }\n\n      for (i = num.length - 1; i >= 0; i--) {\n        var word = num.words[i];\n\n        for (var j = start - 1; j >= 0; j--) {\n          var bit = word >> j & 1;\n\n          if (res !== wnd[0]) {\n            res = this.sqr(res);\n          }\n\n          if (bit === 0 && current === 0) {\n            currentLen = 0;\n            continue;\n          }\n\n          current <<= 1;\n          current |= bit;\n          currentLen++;\n          if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n          res = this.mul(res, wnd[current]);\n          currentLen = 0;\n          current = 0;\n        }\n\n        start = 26;\n      }\n\n      return res;\n    };\n\n    Red.prototype.convertTo = function convertTo(num) {\n      var r = num.umod(this.m);\n      return r === num ? r.clone() : r;\n    };\n\n    Red.prototype.convertFrom = function convertFrom(num) {\n      var res = num.clone();\n      res.red = null;\n      return res;\n    }; //\n    // Montgomery method engine\n    //\n\n\n    BN.mont = function mont(num) {\n      return new Mont(num);\n    };\n\n    function Mont(m) {\n      Red.call(this, m);\n      this.shift = this.m.bitLength();\n\n      if (this.shift % 26 !== 0) {\n        this.shift += 26 - this.shift % 26;\n      }\n\n      this.r = new BN(1).iushln(this.shift);\n      this.r2 = this.imod(this.r.sqr());\n      this.rinv = this.r._invmp(this.m);\n      this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n      this.minv = this.minv.umod(this.r);\n      this.minv = this.r.sub(this.minv);\n    }\n\n    inherits(Mont, Red);\n\n    Mont.prototype.convertTo = function convertTo(num) {\n      return this.imod(num.ushln(this.shift));\n    };\n\n    Mont.prototype.convertFrom = function convertFrom(num) {\n      var r = this.imod(num.mul(this.rinv));\n      r.red = null;\n      return r;\n    };\n\n    Mont.prototype.imul = function imul(a, b) {\n      if (a.isZero() || b.isZero()) {\n        a.words[0] = 0;\n        a.length = 1;\n        return a;\n      }\n\n      var t = a.imul(b);\n      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n      var u = t.isub(c).iushrn(this.shift);\n      var res = u;\n\n      if (u.cmp(this.m) >= 0) {\n        res = u.isub(this.m);\n      } else if (u.cmpn(0) < 0) {\n        res = u.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Mont.prototype.mul = function mul(a, b) {\n      if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n      var t = a.mul(b);\n      var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n      var u = t.isub(c).iushrn(this.shift);\n      var res = u;\n\n      if (u.cmp(this.m) >= 0) {\n        res = u.isub(this.m);\n      } else if (u.cmpn(0) < 0) {\n        res = u.iadd(this.m);\n      }\n\n      return res._forceRed(this);\n    };\n\n    Mont.prototype.invm = function invm(a) {\n      // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n      var res = this.imod(a._invmp(this.m).mul(this.r2));\n      return res._forceRed(this);\n    };\n  })(module, commonjsGlobal);\n});\nconst version = \"logger/5.0.4\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = {\n  debug: 1,\n  \"default\": 2,\n  info: 2,\n  warning: 3,\n  error: 4,\n  off: 5\n};\nlet _logLevel = LogLevels[\"default\"];\nlet _globalLogger = null;\n\nfunction _checkNormalize() {\n  try {\n    const missing = []; // Make sure all forms of normalization are supported\n\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(form => {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n\n        ;\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    return error.message;\n  }\n\n  return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nvar LogLevel;\n\n(function (LogLevel) {\n  LogLevel[\"DEBUG\"] = \"DEBUG\";\n  LogLevel[\"INFO\"] = \"INFO\";\n  LogLevel[\"WARNING\"] = \"WARNING\";\n  LogLevel[\"ERROR\"] = \"ERROR\";\n  LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ///////////////////\n  // Generic Errors\n  // Unknown Error\n  ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\"; // Not Implemented\n\n  ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\"; // Unsupported Operation\n  //   - operation\n\n  ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\"; // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n  //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n\n  ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\"; // Some sort of bad response from the server\n\n  ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\"; // Timeout\n\n  ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\"; ///////////////////\n  // Operational  Errors\n  // Buffer Overrun\n\n  ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\"; // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n\n  ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\"; ///////////////////\n  // Argument Errors\n  // Missing new operator to an object\n  //  - name: The name of the class\n\n  ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\"; // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n\n  ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\"; // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\"; // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\"; ///////////////////\n  // Blockchain Errors\n  // Call exception\n  //  - transaction: the transaction\n  //  - address?: the contract address\n  //  - args?: The arguments passed into the function\n  //  - method?: The Solidity method signature\n  //  - errorSignature?: The EIP848 error signature\n  //  - errorArgs?: The EIP848 error parameters\n  //  - reason: The reason (only for EIP848 \"Error(string)\")\n\n  ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\"; // Insufficien funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\"; // Nonce has already been used\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\"; // The replacement fee for the transaction is too low\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\"; // The gas limit could not be estimated\n  //   - transaction: the transaction passed to estimateGas\n\n  ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n})(ErrorCode || (ErrorCode = {}));\n\nclass Logger {\n  constructor(version) {\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      value: version,\n      writable: false\n    });\n  }\n\n  _log(logLevel, args) {\n    const level = logLevel.toLowerCase();\n\n    if (LogLevels[level] == null) {\n      this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n    }\n\n    if (_logLevel > LogLevels[level]) {\n      return;\n    }\n\n    console.log.apply(console, args);\n  }\n\n  debug(...args) {\n    this._log(Logger.levels.DEBUG, args);\n  }\n\n  info(...args) {\n    this._log(Logger.levels.INFO, args);\n  }\n\n  warn(...args) {\n    this._log(Logger.levels.WARNING, args);\n  }\n\n  makeError(message, code, params) {\n    // Errors are being censored\n    if (_censorErrors) {\n      return this.makeError(\"censored error\", code, {});\n    }\n\n    if (!code) {\n      code = Logger.errors.UNKNOWN_ERROR;\n    }\n\n    if (!params) {\n      params = {};\n    }\n\n    const messageDetails = [];\n    Object.keys(params).forEach(key => {\n      try {\n        messageDetails.push(key + \"=\" + JSON.stringify(params[key]));\n      } catch (error) {\n        messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n      }\n    });\n    messageDetails.push(`code=${code}`);\n    messageDetails.push(`version=${this.version}`);\n    const reason = message;\n\n    if (messageDetails.length) {\n      message += \" (\" + messageDetails.join(\", \") + \")\";\n    } // @TODO: Any??\n\n\n    const error = new Error(message);\n    error.reason = reason;\n    error.code = code;\n    Object.keys(params).forEach(function (key) {\n      error[key] = params[key];\n    });\n    return error;\n  }\n\n  throwError(message, code, params) {\n    throw this.makeError(message, code, params);\n  }\n\n  throwArgumentError(message, name, value) {\n    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n      argument: name,\n      value: value\n    });\n  }\n\n  assert(condition, message, code, params) {\n    if (!!condition) {\n      return;\n    }\n\n    this.throwError(message, code, params);\n  }\n\n  assertArgument(condition, message, name, value) {\n    if (!!condition) {\n      return;\n    }\n\n    this.throwArgumentError(message, name, value);\n  }\n\n  checkNormalize(message) {\n    if (_normalizeError) {\n      this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"String.prototype.normalize\",\n        form: _normalizeError\n      });\n    }\n  }\n\n  checkSafeUint53(value, message) {\n    if (typeof value !== \"number\") {\n      return;\n    }\n\n    if (message == null) {\n      message = \"value not safe\";\n    }\n\n    if (value < 0 || value >= 0x1fffffffffffff) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"out-of-safe-range\",\n        value: value\n      });\n    }\n\n    if (value % 1) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"non-integer\",\n        value: value\n      });\n    }\n  }\n\n  checkArgumentCount(count, expectedCount, message) {\n    if (message) {\n      message = \": \" + message;\n    } else {\n      message = \"\";\n    }\n\n    if (count < expectedCount) {\n      this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n\n    if (count > expectedCount) {\n      this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n  }\n\n  checkNew(target, kind) {\n    if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n\n  checkAbstract(target, kind) {\n    if (target === kind) {\n      this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, {\n        name: target.name,\n        operation: \"new\"\n      });\n    } else if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n\n  static globalLogger() {\n    if (!_globalLogger) {\n      _globalLogger = new Logger(version);\n    }\n\n    return _globalLogger;\n  }\n\n  static setCensorship(censorship, permanent) {\n    if (!censorship && permanent) {\n      this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n\n    if (_permanentCensorErrors) {\n      if (!censorship) {\n        return;\n      }\n\n      this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n  }\n\n  static setLogLevel(logLevel) {\n    const level = LogLevels[logLevel.toLowerCase()];\n\n    if (level == null) {\n      Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n      return;\n    }\n\n    _logLevel = level;\n  }\n\n}\n\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\nconst version$1 = \"bytes/5.0.3\";\nconst logger = new Logger(version$1); ///////////////////////////////\n\nfunction isHexable(value) {\n  return !!value.toHexString;\n}\n\nfunction isBytes(value) {\n  if (value == null) {\n    return false;\n  }\n\n  if (value.constructor === Uint8Array) {\n    return true;\n  }\n\n  if (typeof value === \"string\") {\n    return false;\n  }\n\n  if (value.length == null) {\n    return false;\n  }\n\n  for (let i = 0; i < value.length; i++) {\n    const v = value[i];\n\n    if (v < 0 || v >= 256 || v % 1) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isHexString(value, length) {\n  if (typeof value !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nconst HexCharacters = \"0123456789abcdef\";\n\nfunction hexlify(value, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof value === \"number\") {\n    logger.checkSafeUint53(value, \"invalid hexlify value\");\n    let hex = \"\";\n\n    while (value) {\n      hex = HexCharacters[value & 0x0f] + hex;\n      value = Math.floor(value / 16);\n    }\n\n    if (hex.length) {\n      if (hex.length % 2) {\n        hex = \"0\" + hex;\n      }\n\n      return \"0x\" + hex;\n    }\n\n    return \"0x00\";\n  }\n\n  if (options.allowMissingPrefix && typeof value === \"string\" && value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  }\n\n  if (isHexable(value)) {\n    return value.toHexString();\n  }\n\n  if (isHexString(value)) {\n    if (value.length % 2) {\n      if (options.hexPad === \"left\") {\n        value = \"0x0\" + value.substring(2);\n      } else if (options.hexPad === \"right\") {\n        value += \"0\";\n      } else {\n        logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n      }\n    }\n\n    return value.toLowerCase();\n  }\n\n  if (isBytes(value)) {\n    let result = \"0x\";\n\n    for (let i = 0; i < value.length; i++) {\n      let v = value[i];\n      result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n\n    return result;\n  }\n\n  return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\nconst version$2 = \"bignumber/5.0.5\";\nconst logger$1 = new Logger(version$2);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\n\nclass BigNumber {\n  constructor(constructorGuard, hex) {\n    logger$1.checkNew(new.target, BigNumber);\n\n    if (constructorGuard !== _constructorGuard) {\n      logger$1.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"new (BigNumber)\"\n      });\n    }\n\n    this._hex = hex;\n    this._isBigNumber = true;\n    Object.freeze(this);\n  }\n\n  fromTwos(value) {\n    return toBigNumber(toBN(this).fromTwos(value));\n  }\n\n  toTwos(value) {\n    return toBigNumber(toBN(this).toTwos(value));\n  }\n\n  abs() {\n    if (this._hex[0] === \"-\") {\n      return BigNumber.from(this._hex.substring(1));\n    }\n\n    return this;\n  }\n\n  add(other) {\n    return toBigNumber(toBN(this).add(toBN(other)));\n  }\n\n  sub(other) {\n    return toBigNumber(toBN(this).sub(toBN(other)));\n  }\n\n  div(other) {\n    const o = BigNumber.from(other);\n\n    if (o.isZero()) {\n      throwFault(\"division by zero\", \"div\");\n    }\n\n    return toBigNumber(toBN(this).div(toBN(other)));\n  }\n\n  mul(other) {\n    return toBigNumber(toBN(this).mul(toBN(other)));\n  }\n\n  mod(other) {\n    const value = toBN(other);\n\n    if (value.isNeg()) {\n      throwFault(\"cannot modulo negative values\", \"mod\");\n    }\n\n    return toBigNumber(toBN(this).umod(value));\n  }\n\n  pow(other) {\n    const value = toBN(other);\n\n    if (value.isNeg()) {\n      throwFault(\"cannot raise to negative values\", \"pow\");\n    }\n\n    return toBigNumber(toBN(this).pow(value));\n  }\n\n  and(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'and' negative values\", \"and\");\n    }\n\n    return toBigNumber(toBN(this).and(value));\n  }\n\n  or(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'or' negative values\", \"or\");\n    }\n\n    return toBigNumber(toBN(this).or(value));\n  }\n\n  xor(other) {\n    const value = toBN(other);\n\n    if (this.isNegative() || value.isNeg()) {\n      throwFault(\"cannot 'xor' negative values\", \"xor\");\n    }\n\n    return toBigNumber(toBN(this).xor(value));\n  }\n\n  mask(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot mask negative values\", \"mask\");\n    }\n\n    return toBigNumber(toBN(this).maskn(value));\n  }\n\n  shl(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot shift negative values\", \"shl\");\n    }\n\n    return toBigNumber(toBN(this).shln(value));\n  }\n\n  shr(value) {\n    if (this.isNegative() || value < 0) {\n      throwFault(\"cannot shift negative values\", \"shr\");\n    }\n\n    return toBigNumber(toBN(this).shrn(value));\n  }\n\n  eq(other) {\n    return toBN(this).eq(toBN(other));\n  }\n\n  lt(other) {\n    return toBN(this).lt(toBN(other));\n  }\n\n  lte(other) {\n    return toBN(this).lte(toBN(other));\n  }\n\n  gt(other) {\n    return toBN(this).gt(toBN(other));\n  }\n\n  gte(other) {\n    return toBN(this).gte(toBN(other));\n  }\n\n  isNegative() {\n    return this._hex[0] === \"-\";\n  }\n\n  isZero() {\n    return toBN(this).isZero();\n  }\n\n  toNumber() {\n    try {\n      return toBN(this).toNumber();\n    } catch (error) {\n      throwFault(\"overflow\", \"toNumber\", this.toString());\n    }\n\n    return null;\n  }\n\n  toString() {\n    // Lots of people expect this, which we do not support, so check\n    if (arguments.length !== 0) {\n      logger$1.throwError(\"bigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n    }\n\n    return toBN(this).toString(10);\n  }\n\n  toHexString() {\n    return this._hex;\n  }\n\n  static from(value) {\n    if (value instanceof BigNumber) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      if (value.match(/^-?0x[0-9a-f]+$/i)) {\n        return new BigNumber(_constructorGuard, toHex(value));\n      }\n\n      if (value.match(/^-?[0-9]+$/)) {\n        return new BigNumber(_constructorGuard, toHex(new bn.BN(value)));\n      }\n\n      return logger$1.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n    }\n\n    if (typeof value === \"number\") {\n      if (value % 1) {\n        throwFault(\"underflow\", \"BigNumber.from\", value);\n      }\n\n      if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n        throwFault(\"overflow\", \"BigNumber.from\", value);\n      }\n\n      return BigNumber.from(String(value));\n    }\n\n    if (typeof value === \"bigint\") {\n      return BigNumber.from(value.toString());\n    }\n\n    if (isBytes(value)) {\n      return BigNumber.from(hexlify(value));\n    }\n\n    if (value._hex && isHexString(value._hex)) {\n      return BigNumber.from(value._hex);\n    }\n\n    if (value.toHexString) {\n      value = value.toHexString();\n\n      if (typeof value === \"string\") {\n        return BigNumber.from(value);\n      }\n    }\n\n    return logger$1.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n  }\n\n  static isBigNumber(value) {\n    return !!(value && value._isBigNumber);\n  }\n\n} // Normalize the hex string\n\n\nfunction toHex(value) {\n  // For BN, call on the hex string\n  if (typeof value !== \"string\") {\n    return toHex(value.toString(16));\n  } // If negative, prepend the negative sign to the normalized positive value\n\n\n  if (value[0] === \"-\") {\n    // Strip off the negative sign\n    value = value.substring(1); // Cannot have mulitple negative signs (e.g. \"--0x04\")\n\n    if (value[0] === \"-\") {\n      logger$1.throwArgumentError(\"invalid hex\", \"value\", value);\n    } // Call toHex on the positive component\n\n\n    value = toHex(value); // Do not allow \"-0x00\"\n\n    if (value === \"0x00\") {\n      return value;\n    } // Negate the value\n\n\n    return \"-\" + value;\n  } // Add a \"0x\" prefix if missing\n\n\n  if (value.substring(0, 2) !== \"0x\") {\n    value = \"0x\" + value;\n  } // Normalize zero\n\n\n  if (value === \"0x\") {\n    return \"0x00\";\n  } // Make the string even length\n\n\n  if (value.length % 2) {\n    value = \"0x0\" + value.substring(2);\n  } // Trim to smallest even-length string\n\n\n  while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n    value = \"0x\" + value.substring(4);\n  }\n\n  return value;\n}\n\nfunction toBigNumber(value) {\n  return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value) {\n  const hex = BigNumber.from(value).toHexString();\n\n  if (hex[0] === \"-\") {\n    return new bn.BN(\"-\" + hex.substring(3), 16);\n  }\n\n  return new bn.BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault, operation, value) {\n  const params = {\n    fault: fault,\n    operation: operation\n  };\n\n  if (value != null) {\n    params.value = value;\n  }\n\n  return logger$1.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\nconst logger$2 = new Logger(version$2);\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1); // Constant to pull zeros from for multipliers\n\nlet zeros = \"0\";\n\nwhile (zeros.length < 256) {\n  zeros += zeros;\n} // Returns a string \"1\" followed by decimal \"0\"s\n\n\nfunction getMultiplier(decimals) {\n  if (typeof decimals !== \"number\") {\n    try {\n      decimals = BigNumber.from(decimals).toNumber();\n    } catch (e) {}\n  }\n\n  if (typeof decimals === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n    return \"1\" + zeros.substring(0, decimals);\n  }\n\n  return logger$2.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\n\nfunction formatFixed(value, decimals) {\n  if (decimals == null) {\n    decimals = 0;\n  }\n\n  const multiplier = getMultiplier(decimals); // Make sure wei is a big number (convert as necessary)\n\n  value = BigNumber.from(value);\n  const negative = value.lt(Zero);\n\n  if (negative) {\n    value = value.mul(NegativeOne);\n  }\n\n  let fraction = value.mod(multiplier).toString();\n\n  while (fraction.length < multiplier.length - 1) {\n    fraction = \"0\" + fraction;\n  } // Strip training 0\n\n\n  fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n  const whole = value.div(multiplier).toString();\n  value = whole + \".\" + fraction;\n\n  if (negative) {\n    value = \"-\" + value;\n  }\n\n  return value;\n}\n\nconst version$3 = \"units/5.0.2\";\nconst logger$3 = new Logger(version$3);\nconst names = [\"wei\", \"kwei\", \"mwei\", \"gwei\", \"szabo\", \"finney\", \"ether\"];\n\nfunction formatUnits(value, unitName) {\n  if (typeof unitName === \"string\") {\n    const index = names.indexOf(unitName);\n\n    if (index !== -1) {\n      unitName = 3 * index;\n    }\n  }\n\n  return formatFixed(value, unitName != null ? unitName : 18);\n}\n\nfunction formatEther(wei) {\n  return formatUnits(wei, 18);\n}\n/* Generated by ts-generator ver. 0.0.8 */\n\n\nvar Erc20DetailedFactory =\n/** @class */\nfunction () {\n  function Erc20DetailedFactory() {}\n\n  Erc20DetailedFactory.connect = function (address, signerOrProvider) {\n    return new Contract(address, _abi, signerOrProvider);\n  };\n\n  return Erc20DetailedFactory;\n}();\n\nvar _abi = [{\n  constant: false,\n  inputs: [{\n    name: 'spender',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  name: 'approve',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'totalSupply',\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    name: 'sender',\n    type: 'address'\n  }, {\n    name: 'recipient',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  name: 'transferFrom',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: 'account',\n    type: 'address'\n  }],\n  name: 'balanceOf',\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: false,\n  inputs: [{\n    name: 'recipient',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  name: 'transfer',\n  outputs: [{\n    name: '',\n    type: 'bool'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [{\n    name: 'owner',\n    type: 'address'\n  }, {\n    name: 'spender',\n    type: 'address'\n  }],\n  name: 'allowance',\n  outputs: [{\n    name: '',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'name',\n    type: 'string'\n  }, {\n    name: 'symbol',\n    type: 'string'\n  }, {\n    name: 'decimals',\n    type: 'uint8'\n  }],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'constructor'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: 'from',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'to',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }],\n  name: 'Transfer',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'spender',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }],\n  name: 'Approval',\n  type: 'event'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'name',\n  outputs: [{\n    name: '',\n    type: 'string'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'symbol',\n  outputs: [{\n    name: '',\n    type: 'string'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  constant: true,\n  inputs: [],\n  name: 'decimals',\n  outputs: [{\n    name: '',\n    type: 'uint8'\n  }],\n  payable: false,\n  stateMutability: 'view',\n  type: 'function'\n}];\nvar Web3Context = createContext(undefined);\n\nvar Web3Provider = function (_a) {\n  var children = _a.children,\n      onboardConfig = _a.onboardConfig,\n      networkIds = _a.networkIds,\n      ethGasStationApiKey = _a.ethGasStationApiKey,\n      _b = _a.gasPricePollingInterval,\n      gasPricePollingInterval = _b === void 0 ? 0 : _b,\n      _c = _a.gasPriceSetting,\n      gasPriceSetting = _c === void 0 ? 'fast' : _c,\n      _d = _a.tokenAddresses,\n      tokenAddresses = _d === void 0 ? [] : _d,\n      spenderAddress = _a.spenderAddress,\n      _e = _a.saveWalletSelect,\n      saveWalletSelect = _e === void 0 ? true : _e;\n\n  var _f = useState(undefined),\n      address = _f[0],\n      setAddress = _f[1];\n\n  var _g = useState(undefined),\n      provider = _g[0],\n      setProvider = _g[1];\n\n  var _h = useState(undefined),\n      network = _h[0],\n      setNetwork = _h[1];\n\n  var _j = useState(undefined),\n      ethBalance = _j[0],\n      setEthBalance = _j[1];\n\n  var _k = useState(undefined),\n      wallet = _k[0],\n      setWallet = _k[1];\n\n  var _l = useState(undefined),\n      onboard = _l[0],\n      setOnboard = _l[1];\n\n  var _m = useState(false),\n      isReady = _m[0],\n      setIsReady = _m[1];\n\n  var _o = useState(new Map()),\n      tokens = _o[0],\n      setTokens = _o[1];\n\n  var _p = useState(0),\n      gasPrice = _p[0],\n      setGasPrice = _p[1]; // Initialize OnboardJS\n\n\n  useEffect(function () {\n    var initializeOnboard = function () {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var onboard_1, savedWallet;\n        return __generator(this, function (_a) {\n          try {\n            onboard_1 = Onboard(__assign(__assign({}, onboardConfig), {\n              networkId: networkIds[0],\n              subscriptions: {\n                address: function (address) {\n                  var _a, _b;\n\n                  setAddress(address);\n                  checkIsReady();\n                  ((_a = onboardConfig === null || onboardConfig === void 0 ? void 0 : onboardConfig.subscriptions) === null || _a === void 0 ? void 0 : _a.address) && ((_b = onboardConfig === null || onboardConfig === void 0 ? void 0 : onboardConfig.subscriptions) === null || _b === void 0 ? void 0 : _b.address(address));\n                },\n                wallet: function (wallet) {\n                  var _a;\n\n                  if (wallet.provider) {\n                    wallet.name && saveWalletSelect && localStorage.setItem('onboard.selectedWallet', wallet.name);\n                    setWallet(wallet);\n                    setProvider(new ethers.providers.Web3Provider(wallet.provider));\n                  } else {\n                    setWallet(undefined);\n                  }\n\n                  ((_a = onboardConfig === null || onboardConfig === void 0 ? void 0 : onboardConfig.subscriptions) === null || _a === void 0 ? void 0 : _a.wallet) && onboardConfig.subscriptions.wallet(wallet);\n                },\n                network: function (network) {\n                  var _a;\n\n                  if (networkIds.includes(network)) {\n                    onboard_1.config({\n                      networkId: network\n                    });\n                  }\n\n                  setNetwork(network);\n                  checkIsReady();\n                  ((_a = onboardConfig === null || onboardConfig === void 0 ? void 0 : onboardConfig.subscriptions) === null || _a === void 0 ? void 0 : _a.network) && onboardConfig.subscriptions.network(network);\n                },\n                balance: function (balance) {\n                  var _a;\n\n                  try {\n                    var bal = Number(formatEther(balance));\n                    !isNaN(bal) ? setEthBalance(bal) : setEthBalance(0);\n                  } catch (error) {\n                    setEthBalance(0);\n                  }\n\n                  ((_a = onboardConfig === null || onboardConfig === void 0 ? void 0 : onboardConfig.subscriptions) === null || _a === void 0 ? void 0 : _a.balance) && onboardConfig.subscriptions.balance(balance);\n                }\n              }\n            }));\n            savedWallet = localStorage.getItem('onboard.selectedWallet');\n            saveWalletSelect && savedWallet && onboard_1.walletSelect(savedWallet);\n            setOnboard(onboard_1);\n          } catch (error) {\n            console.log('Error initializing onboard');\n            console.log(error);\n          }\n\n          return [2\n          /*return*/\n          ];\n        });\n      });\n    };\n\n    initializeOnboard();\n  }, []); // Gas Price poller\n\n  useEffect(function () {\n    var poller;\n\n    if ((network || networkIds[0]) === 1 && gasPricePollingInterval > 0) {\n      refreshGasPrice();\n      poller = setInterval(refreshGasPrice, gasPricePollingInterval * 1000);\n    } else {\n      setGasPrice(10);\n    }\n\n    return function () {\n      if (poller) {\n        clearInterval(poller);\n      }\n    };\n  }, [network]); // Token balance and allowance listener\n\n  useEffect(function () {\n    var checkBalanceAndAllowance = function (token, decimals) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var balance, _a, _b, _c, _d, _e, allowance, _f, _g, _h, _j, _k, newTokens;\n\n        return __generator(this, function (_l) {\n          switch (_l.label) {\n            case 0:\n              if (!address) return [3\n              /*break*/\n              , 4];\n              _a = Number;\n              _c = (_b = utils).formatUnits;\n              _e = (_d = BigNumber$1).from;\n              return [4\n              /*yield*/\n              , token.balanceOf(address)];\n\n            case 1:\n              balance = _a.apply(void 0, [_c.apply(_b, [_e.apply(_d, [_l.sent()]), decimals])]);\n              allowance = 0;\n              if (!spenderAddress) return [3\n              /*break*/\n              , 3];\n              _f = Number;\n              _h = (_g = utils).formatUnits;\n              _k = (_j = BigNumber$1).from;\n              return [4\n              /*yield*/\n              , token.balanceOf(address)];\n\n            case 2:\n              allowance = _f.apply(void 0, [_h.apply(_g, [_k.apply(_j, [_l.sent()]), decimals])]);\n              _l.label = 3;\n\n            case 3:\n              newTokens = tokens;\n              newTokens[token.address] = __assign(__assign({}, newTokens[token.address]), {\n                balance: balance,\n                allowance: allowance\n              });\n              setTokens(newTokens);\n              _l.label = 4;\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    var tokenContracts = [];\n\n    if (provider && address && tokenAddresses.length > 0) {\n      tokenAddresses.forEach(function (tokenAddress) {\n        return __awaiter(void 0, void 0, void 0, function () {\n          var tokenContract, newTokenInfo, tokenName, error_1, tokenSymbol, error_2, tokenDecimals, error_3, newTokens, filterTokenApproval, filterTokenTransferFrom, filterTokenTransferTo;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                tokenContract = Erc20DetailedFactory.connect(tokenAddress, provider);\n                newTokenInfo = {\n                  decimals: 0,\n                  balance: 0\n                };\n                _a.label = 1;\n\n              case 1:\n                _a.trys.push([1, 3,, 4]);\n\n                return [4\n                /*yield*/\n                , tokenContract.name()];\n\n              case 2:\n                tokenName = _a.sent();\n                newTokenInfo.name = tokenName;\n                return [3\n                /*break*/\n                , 4];\n\n              case 3:\n                error_1 = _a.sent();\n                console.log('There was an error getting the token name. Does this contract implement ERC20Detailed?');\n                return [3\n                /*break*/\n                , 4];\n\n              case 4:\n                _a.trys.push([4, 6,, 7]);\n\n                return [4\n                /*yield*/\n                , tokenContract.symbol()];\n\n              case 5:\n                tokenSymbol = _a.sent();\n                newTokenInfo.symbol = tokenSymbol;\n                return [3\n                /*break*/\n                , 7];\n\n              case 6:\n                error_2 = _a.sent();\n                console.error('There was an error getting the token symbol. Does this contract implement ERC20Detailed?');\n                return [3\n                /*break*/\n                , 7];\n\n              case 7:\n                _a.trys.push([7, 9,, 10]);\n\n                return [4\n                /*yield*/\n                , tokenContract.decimals()];\n\n              case 8:\n                tokenDecimals = _a.sent();\n                newTokenInfo.decimals = tokenDecimals;\n                return [3\n                /*break*/\n                , 10];\n\n              case 9:\n                error_3 = _a.sent();\n                console.error('There was an error getting the token decimals. Does this contract implement ERC20Detailed?');\n                return [3\n                /*break*/\n                , 10];\n\n              case 10:\n                newTokens = tokens;\n                newTokens[tokenAddress] = __assign({}, newTokenInfo);\n                setTokens(newTokens);\n                checkBalanceAndAllowance(tokenContract, newTokenInfo.decimals);\n                filterTokenApproval = tokenContract.filters.Approval(address, null, null);\n                filterTokenTransferFrom = tokenContract.filters.Transfer(address, null, null);\n                filterTokenTransferTo = tokenContract.filters.Transfer(null, address, null);\n                tokenContract.on(filterTokenApproval, function () {\n                  return checkBalanceAndAllowance(tokenContract, newTokenInfo.decimals);\n                });\n                tokenContract.on(filterTokenTransferFrom, function () {\n                  return checkBalanceAndAllowance(tokenContract, newTokenInfo.decimals);\n                });\n                tokenContract.on(filterTokenTransferTo, function () {\n                  return checkBalanceAndAllowance(tokenContract, newTokenInfo.decimals);\n                });\n                tokenContracts.push(tokenContract);\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      });\n    }\n\n    return function () {\n      if (tokenContracts.length > 0) {\n        tokenContracts.forEach(function (tc) {\n          return tc.removeAllListeners();\n        });\n      }\n    };\n  }, [network, address]);\n\n  var checkIsReady = function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var isReady;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , onboard === null || onboard === void 0 ? void 0 : onboard.walletCheck()];\n\n          case 1:\n            isReady = _a.sent();\n            setIsReady(!!isReady);\n\n            if (!isReady) {\n              setEthBalance(0);\n            }\n\n            return [2\n            /*return*/\n            , !!isReady];\n        }\n      });\n    });\n  };\n\n  var signMessage = function (message) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var data, signer, addr, sig;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!provider) return [2\n            /*return*/\n            , Promise.reject('The provider is not yet initialized')];\n            data = ethers.utils.toUtf8Bytes(message);\n            return [4\n            /*yield*/\n            , provider.getSigner()];\n\n          case 1:\n            signer = _a.sent();\n            return [4\n            /*yield*/\n            , signer.getAddress()];\n\n          case 2:\n            addr = _a.sent();\n            return [4\n            /*yield*/\n            , provider.send('personal_sign', [ethers.utils.hexlify(data), addr.toLowerCase()])];\n\n          case 3:\n            sig = _a.sent();\n            return [2\n            /*return*/\n            , sig];\n        }\n      });\n    });\n  };\n\n  var resetOnboard = function () {\n    localStorage.setItem('onboard.selectedWallet', '');\n    setIsReady(false);\n    onboard === null || onboard === void 0 ? void 0 : onboard.walletReset();\n  };\n\n  var refreshGasPrice = function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var gasPrice_1, ethGasStationResponse, etherchainResponse, newGasPrice, error_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 7,, 8]);\n\n            if (!ethGasStationApiKey) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , fetch(\"https://ethgasstation.info/api/ethgasAPI.json?api-key=\" + ethGasStationApiKey)];\n\n          case 1:\n            return [4\n            /*yield*/\n            , _a.sent().json()];\n\n          case 2:\n            ethGasStationResponse = _a.sent();\n            gasPrice_1 = ethGasStationResponse[gasPriceSetting] / 10;\n            return [3\n            /*break*/\n            , 6];\n\n          case 3:\n            return [4\n            /*yield*/\n            , fetch('https://www.etherchain.org/api/gasPriceOracle')];\n\n          case 4:\n            return [4\n            /*yield*/\n            , _a.sent().json()];\n\n          case 5:\n            etherchainResponse = _a.sent();\n            gasPrice_1 = Number(etherchainResponse[gasPriceSetting]);\n            _a.label = 6;\n\n          case 6:\n            newGasPrice = !isNaN(Number(gasPrice_1)) ? Number(gasPrice_1) : 65;\n            setGasPrice(newGasPrice);\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            error_4 = _a.sent();\n            console.log(error_4);\n            console.log('Using 65 gwei as default');\n            setGasPrice(65);\n            return [3\n            /*break*/\n            , 8];\n\n          case 8:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  var onboardState = onboard === null || onboard === void 0 ? void 0 : onboard.getState();\n  return createElement(Web3Context.Provider, {\n    value: {\n      address: address,\n      provider: provider,\n      network: network,\n      ethBalance: ethBalance,\n      wallet: wallet,\n      onboard: onboard,\n      isReady: isReady,\n      checkIsReady: checkIsReady,\n      resetOnboard: resetOnboard,\n      gasPrice: gasPrice,\n      refreshGasPrice: refreshGasPrice,\n      isMobile: !!(onboardState === null || onboardState === void 0 ? void 0 : onboardState.mobileDevice),\n      tokens: tokens,\n      signMessage: signMessage\n    }\n  }, children);\n};\n\nvar useWeb3 = function () {\n  var context = useContext(Web3Context);\n\n  if (context === undefined) {\n    throw new Error('useOnboard must be used within a OnboardProvider');\n  }\n\n  return context;\n};\n\nexport { Web3Provider, useWeb3 };","map":{"version":3,"sources":["../node_modules/bn.js/lib/bn.js","../node_modules/@ethersproject/logger/lib.esm/_version.js","../node_modules/@ethersproject/logger/lib.esm/index.js","../node_modules/@ethersproject/bytes/lib.esm/_version.js","../node_modules/@ethersproject/bytes/lib.esm/index.js","../node_modules/@ethersproject/bignumber/lib.esm/_version.js","../node_modules/@ethersproject/bignumber/lib.esm/bignumber.js","../node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js","../node_modules/@ethersproject/units/lib.esm/_version.js","../node_modules/@ethersproject/units/lib.esm/index.js","../src/interfaces/Erc20DetailedFactory.ts","../src/context/Web3Context.tsx"],"names":["this","version","logger","BN","React.createContext","React.createElement","React.useContext"],"mappings":"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","sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","export const version = \"logger/5.0.4\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficien funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n})(ErrorCode || (ErrorCode = {}));\n;\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            try {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key]));\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"bytes/5.0.3\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (value.length == null) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (v < 0 || v >= 256 || (v % 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0x0f] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0\n    };\n    if (isBytesLike(signature)) {\n        const bytes = arrayify(signature);\n        if (bytes.length !== 65) {\n            logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n        }\n        // Get the r, s and v\n        result.r = hexlify(bytes.slice(0, 32));\n        result.s = hexlify(bytes.slice(32, 64));\n        result.v = bytes[64];\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else if (result.recoveryParam !== (1 - (result.v % 2))) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","export const version = \"bignumber/5.0.5\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardles.\n *\n */\nimport { BN } from \"bn.js\";\nimport { hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\nexport function isBigNumberish(value) {\n    return (value != null) && (BigNumber.isBigNumber(value) ||\n        (typeof (value) === \"number\" && (value % 1) === 0) ||\n        (typeof (value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof (value) === \"bigint\") ||\n        isBytes(value));\n}\nexport class BigNumber {\n    constructor(constructorGuard, hex) {\n        logger.checkNew(new.target, BigNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    fromTwos(value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n    toTwos(value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n    abs() {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n    add(other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n    sub(other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n    div(other) {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division by zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n    mul(other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n    mod(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot modulo negative values\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n    pow(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"cannot raise to negative values\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n    and(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'and' negative values\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n    or(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'or' negative values\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n    xor(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"cannot 'xor' negative values\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n    mask(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot mask negative values\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n    shl(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n    shr(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"cannot shift negative values\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n    eq(other) {\n        return toBN(this).eq(toBN(other));\n    }\n    lt(other) {\n        return toBN(this).lt(toBN(other));\n    }\n    lte(other) {\n        return toBN(this).lte(toBN(other));\n    }\n    gt(other) {\n        return toBN(this).gt(toBN(other));\n    }\n    gte(other) {\n        return toBN(this).gte(toBN(other));\n    }\n    isNegative() {\n        return (this._hex[0] === \"-\");\n    }\n    isZero() {\n        return toBN(this).isZero();\n    }\n    toNumber() {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toString() {\n        // Lots of people expect this, which we do not support, so check\n        if (arguments.length !== 0) {\n            logger.throwError(\"bigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n        }\n        return toBN(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    static from(value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        if (typeof (value) === \"bigint\") {\n            return BigNumber.from(value.toString());\n        }\n        if (isBytes(value)) {\n            return BigNumber.from(hexlify(value));\n        }\n        if (value._hex && isHexString(value._hex)) {\n            return BigNumber.from(value._hex);\n        }\n        if (value.toHexString) {\n            value = value.toHexString();\n            if (typeof (value) === \"string\") {\n                return BigNumber.from(value);\n            }\n        }\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n    static isBigNumber(value) {\n        return !!(value && value._isBigNumber);\n    }\n}\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have mulitple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n//# sourceMappingURL=bignumber.js.map","\"use strict\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nconst _constructorGuard = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nexport function formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    value = whole + \".\" + fraction;\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexport function parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.,]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    if (multiplier.length - 1 === 0) {\n        return BigNumber.from(value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Prevent underflow\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else if (value != null) {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        logger.checkNew(new.target, FixedNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        // If we are already in range, we're done\n        let comps = this.toString().split(\".\");\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        // Bump the value up by the 0.00...0005\n        const bump = \"0.\" + zeros.substring(0, decimals) + \"5\";\n        comps = this.addUnsafe(FixedNumber.fromString(bump, this.format))._value.split(\".\");\n        // Now it is safe to truncate\n        return FixedNumber.fromString(comps[0] + \".\" + comps[1].substring(0, decimals));\n    }\n    isZero() {\n        return (this._value === \"0.0\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\n//# sourceMappingURL=fixednumber.js.map","export const version = \"units/5.0.2\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value) {\n    const comps = String(value).split(\".\");\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") {\n        whole = whole.substring(1);\n    }\n    if (whole === \"\") {\n        whole = \"0\";\n    }\n    let suffix = \"\";\n    if (comps.length === 2) {\n        suffix = \".\" + (comps[1] || \"0\");\n    }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(\",\") + suffix;\n}\nexport function formatUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return formatFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function parseUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return parseFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n//# sourceMappingURL=index.js.map","/* Generated by ts-generator ver. 0.0.8 */\n/* tslint:disable */\n\nimport { Contract, Signer } from 'ethers';\nimport { Provider } from '@ethersproject/providers';\n\nimport { Erc20Detailed } from './Erc20Detailed';\n\nexport class Erc20DetailedFactory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Erc20Detailed {\n    return new Contract(address, _abi, signerOrProvider) as Erc20Detailed;\n  }\n}\n\nconst _abi = [\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'sender',\n        type: 'address',\n      },\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [\n      {\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'account',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'recipient',\n        type: 'address',\n      },\n      {\n        name: 'amount',\n        type: 'uint256',\n      },\n    ],\n    name: 'transfer',\n    outputs: [\n      {\n        name: '',\n        type: 'bool',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        name: 'spender',\n        type: 'address',\n      },\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        name: 'name',\n        type: 'string',\n      },\n      {\n        name: 'symbol',\n        type: 'string',\n      },\n      {\n        name: 'decimals',\n        type: 'uint8',\n      },\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'spender',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'name',\n    outputs: [\n      {\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        name: '',\n        type: 'string',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'decimals',\n    outputs: [\n      {\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport Onboard from 'bnc-onboard';\nimport {\n  API as OnboardApi,\n  Wallet,\n  Initialization,\n} from 'bnc-onboard/dist/src/interfaces';\nimport { providers, ethers, BigNumber, utils } from 'ethers';\nimport { formatEther } from '@ethersproject/units';\nimport { Erc20DetailedFactory } from '../interfaces/Erc20DetailedFactory';\nimport { Erc20Detailed } from '../interfaces/Erc20Detailed';\n\nexport type OnboardConfig = Partial<Omit<Initialization, 'networkId'>>;\n\ntype EthGasStationSettings = 'fast' | 'fastest' | 'safeLow' | 'average';\ntype EtherchainGasSettings = 'safeLow' | 'standard' | 'fast' | 'fastest';\n\ntype Web3ContextProps = {\n  onboardConfig?: OnboardConfig;\n  networkIds: number[];\n  ethGasStationApiKey?: string;\n  gasPricePollingInterval?: number; //Seconds between gas price polls. Defaults to 0 - Disabled\n  gasPriceSetting?: EthGasStationSettings | EtherchainGasSettings;\n  tokenAddresses?: string[];\n  spenderAddress?: string;\n  saveWalletSelect?: boolean;\n  children: React.ReactNode;\n};\n\ntype TokenInfo = {\n  name?: string;\n  symbol?: string;\n  decimals: number;\n  balance: number;\n  allowance?: number;\n};\n\ntype Tokens = Map<string, TokenInfo>;\n\ntype Web3Context = {\n  onboard?: OnboardApi;\n  provider?: providers.Web3Provider;\n  address?: string;\n  network?: number;\n  ethBalance?: number;\n  wallet?: Wallet;\n  isReady: boolean;\n  checkIsReady(): Promise<boolean>;\n  resetOnboard(): void;\n  gasPrice: number;\n  refreshGasPrice(): Promise<void>;\n  isMobile: boolean;\n  tokens: Tokens;\n  signMessage(message: string): Promise<string>;\n};\n\nconst Web3Context = React.createContext<Web3Context | undefined>(undefined);\n\nconst Web3Provider = ({\n  children,\n  onboardConfig,\n  networkIds,\n  ethGasStationApiKey,\n  gasPricePollingInterval = 0,\n  gasPriceSetting = 'fast',\n  tokenAddresses = [],\n  spenderAddress,\n  saveWalletSelect = true,\n}: Web3ContextProps) => {\n  const [address, setAddress] = useState<string | undefined>(undefined);\n  const [provider, setProvider] = useState<providers.Web3Provider | undefined>(\n    undefined\n  );\n  const [network, setNetwork] = useState<number | undefined>(undefined);\n  const [ethBalance, setEthBalance] = useState<number | undefined>(undefined);\n  const [wallet, setWallet] = useState<Wallet | undefined>(undefined);\n  const [onboard, setOnboard] = useState<OnboardApi | undefined>(undefined);\n  const [isReady, setIsReady] = useState<boolean>(false);\n  const [tokens, setTokens] = useState<Tokens>(new Map<string, TokenInfo>());\n  const [gasPrice, setGasPrice] = useState(0);\n\n  // Initialize OnboardJS\n  useEffect(() => {\n    const initializeOnboard = async () => {\n      try {\n        const onboard = Onboard({\n          ...onboardConfig,\n          networkId: networkIds[0],\n          subscriptions: {\n            address: (address) => {\n              setAddress(address);\n              checkIsReady();\n              onboardConfig?.subscriptions?.address &&\n                onboardConfig?.subscriptions?.address(address);\n            },\n            wallet: (wallet) => {\n              if (wallet.provider) {\n                wallet.name &&\n                  saveWalletSelect &&\n                  localStorage.setItem('onboard.selectedWallet', wallet.name);\n                setWallet(wallet);\n                setProvider(new ethers.providers.Web3Provider(wallet.provider));\n              } else {\n                setWallet(undefined);\n              }\n              onboardConfig?.subscriptions?.wallet &&\n                onboardConfig.subscriptions.wallet(wallet);\n            },\n            network: (network) => {\n              if (networkIds.includes(network)) {\n                onboard.config({ networkId: network });\n              }\n              setNetwork(network);\n              checkIsReady();\n              onboardConfig?.subscriptions?.network &&\n                onboardConfig.subscriptions.network(network);\n            },\n            balance: (balance) => {\n              try {\n                const bal = Number(formatEther(balance));\n                !isNaN(bal) ? setEthBalance(bal) : setEthBalance(0);\n              } catch (error) {\n                setEthBalance(0);\n              }\n              onboardConfig?.subscriptions?.balance &&\n                onboardConfig.subscriptions.balance(balance);\n            },\n          },\n        });\n\n        const savedWallet = localStorage.getItem('onboard.selectedWallet');\n        saveWalletSelect && savedWallet && onboard.walletSelect(savedWallet);\n\n        setOnboard(onboard);\n      } catch (error) {\n        console.log('Error initializing onboard');\n        console.log(error);\n      }\n    };\n\n    initializeOnboard();\n  }, []);\n\n  // Gas Price poller\n  useEffect(() => {\n    let poller: NodeJS.Timeout;\n    if ((network || networkIds[0]) === 1 && gasPricePollingInterval > 0) {\n      refreshGasPrice();\n      poller = setInterval(refreshGasPrice, gasPricePollingInterval * 1000);\n    } else {\n      setGasPrice(10);\n    }\n    return () => {\n      if (poller) {\n        clearInterval(poller);\n      }\n    };\n  }, [network]);\n\n  // Token balance and allowance listener\n  useEffect(() => {\n    const checkBalanceAndAllowance = async (\n      token: Erc20Detailed,\n      decimals: number\n    ) => {\n      if (address) {\n        const balance = Number(\n          utils.formatUnits(\n            BigNumber.from(await token.balanceOf(address)),\n            decimals\n          )\n        );\n        var allowance = 0;\n        if (spenderAddress) {\n          allowance = Number(\n            utils.formatUnits(\n              BigNumber.from(await token.balanceOf(address)),\n              decimals\n            )\n          );\n        }\n        const newTokens = tokens;\n        newTokens[token.address] = {\n          ...newTokens[token.address],\n          balance: balance,\n          allowance: allowance,\n        };\n\n        setTokens(newTokens);\n      }\n    };\n\n    let tokenContracts: Array<Erc20Detailed> = [];\n    if (provider && address && tokenAddresses.length > 0) {\n      tokenAddresses.forEach(async (tokenAddress) => {\n        const tokenContract = Erc20DetailedFactory.connect(\n          tokenAddress,\n          provider\n        );\n\n        const newTokenInfo: TokenInfo = {\n          decimals: 0,\n          balance: 0,\n        };\n\n        try {\n          const tokenName = await tokenContract.name();\n          newTokenInfo.name = tokenName;\n        } catch (error) {\n          console.log(\n            'There was an error getting the token name. Does this contract implement ERC20Detailed?'\n          );\n        }\n        try {\n          const tokenSymbol = await tokenContract.symbol();\n          newTokenInfo.symbol = tokenSymbol;\n        } catch (error) {\n          console.error(\n            'There was an error getting the token symbol. Does this contract implement ERC20Detailed?'\n          );\n        }\n\n        try {\n          const tokenDecimals = await tokenContract.decimals();\n          newTokenInfo.decimals = tokenDecimals;\n        } catch (error) {\n          console.error(\n            'There was an error getting the token decimals. Does this contract implement ERC20Detailed?'\n          );\n        }\n        const newTokens = tokens;\n        newTokens[tokenAddress] = {\n          ...newTokenInfo,\n        };\n\n        setTokens(newTokens);\n\n        checkBalanceAndAllowance(tokenContract, newTokenInfo.decimals);\n\n        // This filter is intentionally left quite loose.\n        const filterTokenApproval = tokenContract.filters.Approval(\n          address,\n          null,\n          null\n        );\n        const filterTokenTransferFrom = tokenContract.filters.Transfer(\n          address,\n          null,\n          null\n        );\n        const filterTokenTransferTo = tokenContract.filters.Transfer(\n          null,\n          address,\n          null\n        );\n\n        tokenContract.on(filterTokenApproval, () =>\n          checkBalanceAndAllowance(tokenContract, newTokenInfo.decimals)\n        );\n        tokenContract.on(filterTokenTransferFrom, () =>\n          checkBalanceAndAllowance(tokenContract, newTokenInfo.decimals)\n        );\n        tokenContract.on(filterTokenTransferTo, () =>\n          checkBalanceAndAllowance(tokenContract, newTokenInfo.decimals)\n        );\n        tokenContracts.push(tokenContract);\n      });\n    }\n    return () => {\n      if (tokenContracts.length > 0) {\n        tokenContracts.forEach((tc) => tc.removeAllListeners());\n      }\n    };\n  }, [network, address]);\n\n  const checkIsReady = async () => {\n    const isReady = await onboard?.walletCheck();\n    setIsReady(!!isReady);\n    if (!isReady) {\n      setEthBalance(0);\n    }\n    return !!isReady;\n  };\n\n  const signMessage = async (message: string) => {\n    if (!provider) return Promise.reject('The provider is not yet initialized');\n\n    const data = ethers.utils.toUtf8Bytes(message);\n    const signer = await provider.getSigner();\n    const addr = await signer.getAddress();\n    const sig = await provider.send('personal_sign', [\n      ethers.utils.hexlify(data),\n      addr.toLowerCase(),\n    ]);\n    return sig;\n  };\n\n  const resetOnboard = () => {\n    localStorage.setItem('onboard.selectedWallet', '');\n    setIsReady(false);\n    onboard?.walletReset();\n  };\n\n  const refreshGasPrice = async () => {\n    try {\n      let gasPrice;\n      if (ethGasStationApiKey) {\n        const ethGasStationResponse = await (\n          await fetch(\n            `https://ethgasstation.info/api/ethgasAPI.json?api-key=${ethGasStationApiKey}`\n          )\n        ).json();\n        gasPrice = ethGasStationResponse[gasPriceSetting] / 10;\n      } else {\n        const etherchainResponse = await (\n          await fetch('https://www.etherchain.org/api/gasPriceOracle')\n        ).json();\n        gasPrice = Number(etherchainResponse[gasPriceSetting]);\n      }\n\n      const newGasPrice = !isNaN(Number(gasPrice)) ? Number(gasPrice) : 65;\n      setGasPrice(newGasPrice);\n    } catch (error) {\n      console.log(error);\n      console.log('Using 65 gwei as default');\n      setGasPrice(65);\n    }\n  };\n\n  const onboardState = onboard?.getState();\n\n  return (\n    <Web3Context.Provider\n      value={{\n        address: address,\n        provider,\n        network: network,\n        ethBalance: ethBalance,\n        wallet: wallet,\n        onboard: onboard,\n        isReady: isReady,\n        checkIsReady,\n        resetOnboard,\n        gasPrice,\n        refreshGasPrice,\n        isMobile: !!onboardState?.mobileDevice,\n        tokens: tokens,\n        signMessage,\n      }}\n    >\n      {children}\n    </Web3Context.Provider>\n  );\n};\n\nconst useWeb3 = () => {\n  const context = React.useContext(Web3Context);\n  if (context === undefined) {\n    throw new Error('useOnboard must be used within a OnboardProvider');\n  }\n  return context;\n};\n\nexport { Web3Provider, useWeb3 };\n"]},"metadata":{},"sourceType":"module"}