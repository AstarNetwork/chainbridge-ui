{"ast":null,"code":"var _jsxFileName = \"/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/packages/WebApp/src/Components/Pages/MainPage.tsx\";\nimport React, { useState } from \"react\";\nimport { makeStyles, createStyles } from \"@imploy/common-themes\";\nimport AboutDrawer from \"../../Modules/AboutDrawer\";\nimport ChangeNetworkDrawer from \"../../Modules/ChangeNetworkDrawer\";\nimport NetworkUnsupportedModal from \"../../Modules/NetworkUnsupportedModal\";\nimport PreflightModal from \"../../Modules/PreflightModal\";\nimport { Button, FormikSelectInput, Typography, FormikTextInput, QuestionCircleSvg, SelectInput } from \"@imploy/common-components\";\nimport { Form, Formik } from \"formik\";\nimport AddressInput from \"../Custom/AddressInput\";\nimport clsx from \"clsx\";\nimport TransactionActiveModal from \"../../Modules/TransactionActiveModal\";\nimport { useWeb3 } from \"@chainsafe/web3-context\";\nimport { useChainbridge } from \"../../Contexts/ChainbridgeContext\";\nimport { Loader } from \"../Custom/Loader/Loader\";\nconst useStyles = makeStyles(({\n  constants,\n  palette\n}) => createStyles({\n  root: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    maxWidth: 460,\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: constants.generalUnit * 6,\n    border: `1px solid ${palette.additional[\"gray\"][7]}`,\n    borderRadius: 4,\n    color: palette.additional[\"gray\"][8],\n    overflow: \"hidden\"\n  },\n  walletArea: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n  connectButton: {\n    margin: `${constants.generalUnit * 3}px 0 ${constants.generalUnit * 6}px`\n  },\n  connecting: {\n    textAlign: \"center\",\n    marginBottom: constants.generalUnit * 2\n  },\n  connected: {\n    width: \"100%\",\n    \"& > *:first-child\": {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      width: \"100%\"\n    }\n  },\n  changeButton: {\n    cursor: \"pointer\"\n  },\n  networkName: {\n    padding: `${constants.generalUnit * 2}px ${constants.generalUnit * 1.5}px`,\n    border: `1px solid ${palette.additional[\"gray\"][6]}`,\n    borderRadius: 2,\n    color: palette.additional[\"gray\"][9],\n    marginTop: constants.generalUnit,\n    marginBottom: constants.generalUnit * 3\n  },\n  formArea: {\n    \"&.disabled\": {\n      opacity: 0.4\n    }\n  },\n  currencySection: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n    margin: `${constants.generalUnit * 3}px 0`\n  },\n  tokenInputArea: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"flex-end\",\n    justifyContent: \"space-around\",\n    paddingRight: constants.generalUnit\n  },\n  tokenInput: {\n    margin: 0,\n    \"& > *:last-child\": {\n      height: 32,\n      \"& input\": {\n        borderBottomRightRadius: 0,\n        borderTopRightRadius: 0,\n        borderRight: 0\n      }\n    }\n  },\n  maxButton: {\n    height: 32,\n    borderBottomLeftRadius: 0,\n    borderTopLeftRadius: 0,\n    left: -1,\n    color: palette.additional[\"gray\"][8],\n    backgroundColor: palette.additional[\"gray\"][3],\n    borderColor: palette.additional[\"gray\"][6],\n    \"&:hover\": {\n      borderColor: palette.additional[\"gray\"][6],\n      backgroundColor: palette.additional[\"gray\"][7],\n      color: palette.common.white.main\n    }\n  },\n  currencySelector: {\n    width: 120\n  },\n  token: {},\n  address: {\n    margin: 0,\n    marginBottom: constants.generalUnit * 3\n  },\n  addressInput: {},\n  generalInput: {\n    \"& > span\": {\n      marginBottom: constants.generalUnit\n    }\n  },\n  faqButton: {\n    cursor: \"pointer\",\n    height: 20,\n    width: 20,\n    marginTop: constants.generalUnit * 5\n  }\n}));\n\nconst MainPage = () => {\n  const classes = useStyles();\n  const {\n    isReady,\n    checkIsReady,\n    wallet,\n    onboard,\n    tokens,\n    address\n  } = useWeb3();\n  const {\n    homeChain,\n    destinationChains,\n    destinationChain,\n    deposit,\n    setDestinationChain,\n    transactionStatus,\n    resetDeposit\n  } = useChainbridge();\n  const [aboutOpen, setAboutOpen] = useState(false);\n  const [walletConnecting, setWalletConnecting] = useState(false);\n  const [changeNetworkOpen, setChangeNetworkOpen] = useState(false);\n  const [networkUnsupportedOpen, setNetworkUnsupportedOpen] = useState(false);\n  const [preflightModalOpen, setPreflightModalOpen] = useState(false);\n  const [preflightDetails, setPreflightDetails] = useState();\n\n  const handleConnect = async () => {\n    setWalletConnecting(true);\n    !wallet && (await (onboard === null || onboard === void 0 ? void 0 : onboard.walletSelect()));\n    await checkIsReady();\n    setWalletConnecting(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.walletArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, !isReady ? /*#__PURE__*/React.createElement(Button, {\n    className: classes.connectButton,\n    fullsize: true,\n    onClick: () => {\n      handleConnect();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, \"Connect Metamask\") : walletConnecting ? /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.connecting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"p\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, \"This app requires access to your wallet, \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 56\n    }\n  }), \"please login and authorize access to continue.\")) : /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.connected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, \"Home network\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.changeButton,\n    variant: \"body1\",\n    onClick: () => setChangeNetworkOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, \"Change\")), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h2\",\n    className: classes.networkName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, homeChain === null || homeChain === void 0 ? void 0 : homeChain.name))), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      tokenAmount: 0,\n      token: \"\",\n      receiver: \"\"\n    },\n    onSubmit: values => {\n      setPreflightDetails(values);\n      setPreflightModalOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: clsx(classes.formArea, {\n      disabled: !homeChain\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SelectInput, {\n    label: \"Destination Network\",\n    className: classes.generalInput,\n    disabled: !homeChain,\n    options: destinationChains.map(dc => ({\n      label: dc.name,\n      value: dc.chainId\n    })),\n    onChange: value => setDestinationChain(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.currencySection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.tokenInputArea, classes.generalInput),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormikTextInput, {\n    className: clsx(classes.tokenInput, classes.generalInput),\n    disabled: !destinationChain,\n    name: \"tokenAmount\",\n    label: \"I want to send\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !destinationChain,\n    className: classes.maxButton,\n    variant: \"outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, \"MAX\"))), /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.currencySelector,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormikSelectInput, {\n    name: \"token\",\n    disabled: !destinationChain,\n    label: `Balance: Coming Soon`,\n    className: classes.generalInput,\n    options: (homeChain === null || homeChain === void 0 ? void 0 : homeChain.tokenAddresses.map(t => {\n      var _tokens$get;\n\n      return {\n        value: t,\n        label: ((_tokens$get = tokens.get(t)) === null || _tokens$get === void 0 ? void 0 : _tokens$get.symbol) || t\n      };\n    })) || [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AddressInput, {\n    disabled: !destinationChain,\n    name: \"receiver\",\n    label: \"Destination Address\",\n    placeholder: \"Please enter the receiving address\",\n    className: classes.address,\n    classNames: {\n      input: classes.addressInput\n    },\n    senderAddress: `${address}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: !destinationChain,\n    type: \"submit\",\n    fullsize: true,\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }, \"Start transfer\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(QuestionCircleSvg, {\n    onClick: () => setAboutOpen(true),\n    className: classes.faqButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(AboutDrawer, {\n    open: aboutOpen,\n    close: () => setAboutOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ChangeNetworkDrawer, {\n    open: changeNetworkOpen,\n    close: () => setChangeNetworkOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NetworkUnsupportedModal, {\n    open: networkUnsupportedOpen,\n    close: () => setNetworkUnsupportedOpen(false),\n    network: `Ropsten`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PreflightModal, {\n    open: preflightModalOpen,\n    close: () => setPreflightModalOpen(false),\n    receiver: (preflightDetails === null || preflightDetails === void 0 ? void 0 : preflightDetails.receiver) || \"\",\n    sender: address || \"\",\n    start: () => {\n      setPreflightModalOpen(false);\n      preflightDetails && deposit(preflightDetails.tokenAmount, preflightDetails.receiver, preflightDetails.token);\n    },\n    sourceNetwork: (homeChain === null || homeChain === void 0 ? void 0 : homeChain.name) || \"\",\n    targetNetwork: (destinationChain === null || destinationChain === void 0 ? void 0 : destinationChain.name) || \"\",\n    token: (preflightDetails === null || preflightDetails === void 0 ? void 0 : preflightDetails.token) || \"\",\n    value: (preflightDetails === null || preflightDetails === void 0 ? void 0 : preflightDetails.tokenAmount) || 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TransactionActiveModal, {\n    open: !!transactionStatus,\n    close: resetDeposit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default MainPage;","map":{"version":3,"sources":["/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/packages/WebApp/src/Components/Pages/MainPage.tsx"],"names":["React","useState","makeStyles","createStyles","AboutDrawer","ChangeNetworkDrawer","NetworkUnsupportedModal","PreflightModal","Button","FormikSelectInput","Typography","FormikTextInput","QuestionCircleSvg","SelectInput","Form","Formik","AddressInput","clsx","TransactionActiveModal","useWeb3","useChainbridge","Loader","useStyles","constants","palette","root","position","top","left","transform","maxWidth","display","flexDirection","padding","generalUnit","border","additional","borderRadius","color","overflow","walletArea","alignItems","justifyContent","width","connectButton","margin","connecting","textAlign","marginBottom","connected","changeButton","cursor","networkName","marginTop","formArea","opacity","currencySection","tokenInputArea","paddingRight","tokenInput","height","borderBottomRightRadius","borderTopRightRadius","borderRight","maxButton","borderBottomLeftRadius","borderTopLeftRadius","backgroundColor","borderColor","common","white","main","currencySelector","token","address","addressInput","generalInput","faqButton","MainPage","classes","isReady","checkIsReady","wallet","onboard","tokens","homeChain","destinationChains","destinationChain","deposit","setDestinationChain","transactionStatus","resetDeposit","aboutOpen","setAboutOpen","walletConnecting","setWalletConnecting","changeNetworkOpen","setChangeNetworkOpen","networkUnsupportedOpen","setNetworkUnsupportedOpen","preflightModalOpen","setPreflightModalOpen","preflightDetails","setPreflightDetails","handleConnect","walletSelect","name","tokenAmount","receiver","values","disabled","map","dc","label","value","chainId","tokenAddresses","t","get","symbol","input"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles, createStyles, ITheme } from \"@imploy/common-themes\";\nimport AboutDrawer from \"../../Modules/AboutDrawer\";\nimport ChangeNetworkDrawer from \"../../Modules/ChangeNetworkDrawer\";\nimport NetworkUnsupportedModal from \"../../Modules/NetworkUnsupportedModal\";\nimport PreflightModal from \"../../Modules/PreflightModal\";\nimport {\n  Button,\n  FormikSelectInput,\n  Typography,\n  FormikTextInput,\n  QuestionCircleSvg,\n  SelectInput,\n} from \"@imploy/common-components\";\nimport { Form, Formik } from \"formik\";\nimport AddressInput from \"../Custom/AddressInput\";\nimport clsx from \"clsx\";\nimport TransactionActiveModal from \"../../Modules/TransactionActiveModal\";\nimport { useWeb3 } from \"@chainsafe/web3-context\";\nimport { useChainbridge } from \"../../Contexts/ChainbridgeContext\";\nimport { Loader } from \"../Custom/Loader/Loader\";\n\nconst useStyles = makeStyles(({ constants, palette }: ITheme) =>\n  createStyles({\n    root: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      maxWidth: 460,\n      display: \"flex\",\n      flexDirection: \"column\",\n      padding: constants.generalUnit * 6,\n      border: `1px solid ${palette.additional[\"gray\"][7]}`,\n      borderRadius: 4,\n      color: palette.additional[\"gray\"][8],\n      overflow: \"hidden\",\n    },\n    walletArea: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n    },\n    connectButton: {\n      margin: `${constants.generalUnit * 3}px 0 ${constants.generalUnit * 6}px`,\n    },\n    connecting: {\n      textAlign: \"center\",\n      marginBottom: constants.generalUnit * 2,\n    },\n    connected: {\n      width: \"100%\",\n      \"& > *:first-child\": {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n      },\n    },\n    changeButton: {\n      cursor: \"pointer\",\n    },\n    networkName: {\n      padding: `${constants.generalUnit * 2}px ${\n        constants.generalUnit * 1.5\n      }px`,\n      border: `1px solid ${palette.additional[\"gray\"][6]}`,\n      borderRadius: 2,\n      color: palette.additional[\"gray\"][9],\n      marginTop: constants.generalUnit,\n      marginBottom: constants.generalUnit * 3,\n    },\n    formArea: {\n      \"&.disabled\": {\n        opacity: 0.4,\n      },\n    },\n    currencySection: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"flex-end\",\n      margin: `${constants.generalUnit * 3}px 0`,\n    },\n    tokenInputArea: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"flex-end\",\n      justifyContent: \"space-around\",\n      paddingRight: constants.generalUnit,\n    },\n    tokenInput: {\n      margin: 0,\n      \"& > *:last-child\": {\n        height: 32,\n        \"& input\": {\n          borderBottomRightRadius: 0,\n          borderTopRightRadius: 0,\n          borderRight: 0,\n        },\n      },\n    },\n    maxButton: {\n      height: 32,\n      borderBottomLeftRadius: 0,\n      borderTopLeftRadius: 0,\n      left: -1,\n      color: palette.additional[\"gray\"][8],\n      backgroundColor: palette.additional[\"gray\"][3],\n      borderColor: palette.additional[\"gray\"][6],\n      \"&:hover\": {\n        borderColor: palette.additional[\"gray\"][6],\n        backgroundColor: palette.additional[\"gray\"][7],\n        color: palette.common.white.main,\n      },\n    },\n    currencySelector: {\n      width: 120,\n    },\n    token: {},\n    address: {\n      margin: 0,\n      marginBottom: constants.generalUnit * 3,\n    },\n    addressInput: {},\n    generalInput: {\n      \"& > span\": {\n        marginBottom: constants.generalUnit,\n      },\n    },\n    faqButton: {\n      cursor: \"pointer\",\n      height: 20,\n      width: 20,\n      marginTop: constants.generalUnit * 5,\n    },\n  })\n);\n\ntype PreflightDetails = {\n  tokenAmount: number;\n  token: string;\n  receiver: string;\n};\n\nconst MainPage = () => {\n  const classes = useStyles();\n  const { isReady, checkIsReady, wallet, onboard, tokens, address } = useWeb3();\n  const {\n    homeChain,\n    destinationChains,\n    destinationChain,\n    deposit,\n    setDestinationChain,\n    transactionStatus,\n    resetDeposit,\n  } = useChainbridge();\n\n  const [aboutOpen, setAboutOpen] = useState<boolean>(false);\n  const [walletConnecting, setWalletConnecting] = useState(false);\n  const [changeNetworkOpen, setChangeNetworkOpen] = useState<boolean>(false);\n  const [networkUnsupportedOpen, setNetworkUnsupportedOpen] = useState<boolean>(\n    false\n  );\n  const [preflightModalOpen, setPreflightModalOpen] = useState<boolean>(false);\n\n  const [preflightDetails, setPreflightDetails] = useState<\n    PreflightDetails | undefined\n  >();\n\n  const handleConnect = async () => {\n    setWalletConnecting(true);\n    !wallet && (await onboard?.walletSelect());\n    await checkIsReady();\n    setWalletConnecting(false);\n  };\n\n  return (\n    <article className={classes.root}>\n      <div className={classes.walletArea}>\n        {!isReady ? (\n          <Button\n            className={classes.connectButton}\n            fullsize\n            onClick={() => {\n              handleConnect();\n            }}\n          >\n            Connect Metamask\n          </Button>\n        ) : walletConnecting ? (\n          <section className={classes.connecting}>\n            <Loader />\n            <Typography component=\"p\" variant=\"h5\">\n              This app requires access to your wallet, <br />\n              please login and authorize access to continue.\n            </Typography>\n          </section>\n        ) : (\n          <section className={classes.connected}>\n            <div>\n              <Typography variant=\"body1\">Home network</Typography>\n              <Typography\n                className={classes.changeButton}\n                variant=\"body1\"\n                onClick={() => setChangeNetworkOpen(true)}\n              >\n                Change\n              </Typography>\n            </div>\n            <Typography\n              component=\"h2\"\n              variant=\"h2\"\n              className={classes.networkName}\n            >\n              {homeChain?.name}\n            </Typography>\n          </section>\n        )}\n      </div>\n      <Formik\n        initialValues={{\n          tokenAmount: 0,\n          token: \"\",\n          receiver: \"\",\n        }}\n        onSubmit={(values) => {\n          setPreflightDetails(values);\n          setPreflightModalOpen(true);\n        }}\n      >\n        <Form\n          className={clsx(classes.formArea, {\n            disabled: !homeChain,\n          })}\n        >\n          <section>\n            <SelectInput\n              label=\"Destination Network\"\n              className={classes.generalInput}\n              disabled={!homeChain}\n              options={destinationChains.map((dc) => ({\n                label: dc.name,\n                value: dc.chainId,\n              }))}\n              onChange={(value) => setDestinationChain(value)}\n            />\n          </section>\n          <section className={classes.currencySection}>\n            <section>\n              <div\n                className={clsx(classes.tokenInputArea, classes.generalInput)}\n              >\n                <FormikTextInput\n                  className={clsx(classes.tokenInput, classes.generalInput)}\n                  disabled={!destinationChain}\n                  name=\"tokenAmount\"\n                  label=\"I want to send\"\n                  type=\"number\"\n                />\n                <Button\n                  disabled={!destinationChain}\n                  className={classes.maxButton}\n                  variant=\"outline\"\n                >\n                  MAX\n                </Button>\n              </div>\n            </section>\n            <section className={classes.currencySelector}>\n              <FormikSelectInput\n                name=\"token\"\n                disabled={!destinationChain}\n                label={`Balance: Coming Soon`}\n                className={classes.generalInput}\n                options={\n                  homeChain?.tokenAddresses.map((t) => ({\n                    value: t,\n                    label: tokens.get(t)?.symbol || t,\n                  })) || []\n                }\n              />\n            </section>\n          </section>\n          <section>\n            <AddressInput\n              disabled={!destinationChain}\n              name=\"receiver\"\n              label=\"Destination Address\"\n              placeholder=\"Please enter the receiving address\"\n              className={classes.address}\n              classNames={{\n                input: classes.addressInput,\n              }}\n              senderAddress={`${address}`}\n            />\n          </section>\n          <section>\n            <Button\n              disabled={!destinationChain}\n              type=\"submit\"\n              fullsize\n              variant=\"primary\"\n            >\n              Start transfer\n            </Button>\n          </section>\n          <section>\n            <QuestionCircleSvg\n              onClick={() => setAboutOpen(true)}\n              className={classes.faqButton}\n            />\n          </section>\n        </Form>\n      </Formik>\n      <AboutDrawer open={aboutOpen} close={() => setAboutOpen(false)} />\n      <ChangeNetworkDrawer\n        open={changeNetworkOpen}\n        close={() => setChangeNetworkOpen(false)}\n      />\n      <NetworkUnsupportedModal\n        open={networkUnsupportedOpen}\n        close={() => setNetworkUnsupportedOpen(false)}\n        network={`Ropsten`}\n      />\n      <PreflightModal\n        open={preflightModalOpen}\n        close={() => setPreflightModalOpen(false)}\n        receiver={preflightDetails?.receiver || \"\"}\n        sender={address || \"\"}\n        start={() => {\n          setPreflightModalOpen(false);\n          preflightDetails &&\n            deposit(\n              preflightDetails.tokenAmount,\n              preflightDetails.receiver,\n              preflightDetails.token\n            );\n        }}\n        sourceNetwork={homeChain?.name || \"\"}\n        targetNetwork={destinationChain?.name || \"\"}\n        token={preflightDetails?.token || \"\"}\n        value={preflightDetails?.tokenAmount || 0}\n      />\n      <TransactionActiveModal open={!!transactionStatus} close={resetDeposit} />\n    </article>\n  );\n};\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}