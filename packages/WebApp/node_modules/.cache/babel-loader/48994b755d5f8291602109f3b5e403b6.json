{"ast":null,"code":"var _jsxFileName = \"/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/packages/WebApp/src/Modules/TransactionActiveModal.tsx\";\nimport React, { useState } from \"react\";\nimport { makeStyles, createStyles } from \"@imploy/common-themes\";\nimport { Button, Typography } from \"@imploy/common-components\";\nimport CustomModal from \"../Components/Custom/CustomModal\";\nconst useStyles = makeStyles(({\n  animation,\n  constants,\n  palette,\n  typography\n}) => createStyles({\n  root: {\n    width: \"100%\"\n  },\n  inner: {\n    width: \"100% !important\",\n    maxWidth: \"unset !important\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: `${constants.generalUnit * 6}px ${constants.generalUnit * 7}px`,\n    bottom: 0,\n    top: \"unset\",\n    transform: \"unset\",\n    left: 0,\n    border: \"none\",\n    borderRadius: 0,\n    transitionDuration: `${animation.transform}ms`,\n    borderTop: `6px solid ${palette.additional[\"geekblue\"][5]}`\n  },\n  heading: {\n    marginBottom: constants.generalUnit\n  },\n  stepIndicator: { ...typography.h4,\n    height: 40,\n    width: 40,\n    marginRight: constants.generalUnit * 2,\n    borderRadius: \"50%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: palette.additional[\"geekblue\"][6],\n    border: `1px solid ${palette.additional[\"geekblue\"][4]}`\n  },\n  content: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  buttons: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: constants.generalUnit * 5,\n    \"& > *\": {\n      marginRight: constants.generalUnit\n    }\n  },\n  button: {\n    borderColor: palette.additional[\"gray\"][8],\n    color: palette.additional[\"gray\"][8],\n    \"&:hover\": {\n      borderColor: palette.additional[\"gray\"][8],\n      backgroundColor: palette.additional[\"gray\"][8],\n      color: palette.common.white.main\n    }\n  },\n  initCopy: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    \"& > *:first-child\": {\n      marginTop: constants.generalUnit * 3.5,\n      marginBottom: constants.generalUnit * 8\n    }\n  }\n}));\nvar TRANSACTION_STATE;\n\n(function (TRANSACTION_STATE) {\n  TRANSACTION_STATE[\"init\"] = \"init\";\n  TRANSACTION_STATE[\"inTransit\"] = \"inTransit\";\n  TRANSACTION_STATE[\"done\"] = \"done\";\n})(TRANSACTION_STATE || (TRANSACTION_STATE = {}));\n\nconst TransactionActiveModal = ({\n  open,\n  close\n}) => {\n  const classes = useStyles();\n  const [state, setState] = useState(TRANSACTION_STATE.inTransit);\n  const [signatures, setSignatures] = useState([]);\n  return /*#__PURE__*/React.createElement(CustomModal, {\n    className: classes.root,\n    injectedClass: {\n      inner: classes.inner\n    },\n    active: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stepIndicator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, state === TRANSACTION_STATE.init ? \"1\" : state === TRANSACTION_STATE.inTransit ? \"2\" : \"3  \")), /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    variant: \"h3\",\n    component: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, state === TRANSACTION_STATE.init ? \"Initializing Transfer\" : `In Transit (${signatures.filter(sig => sig.signed === \"confirmed\").length}/${signatures.length} signatures needed)`), state === TRANSACTION_STATE.init ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.initCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, \"Deposit pending...\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"This should take a few minutes. Please do not refresh or leave the page.\")) : state === TRANSACTION_STATE.inTransit ? /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: close,\n    size: \"small\",\n    className: classes.button,\n    variant: \"outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, \"View transaction\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    className: classes.button,\n    variant: \"outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, \"Start new transfer\"))));\n};\n\nexport default TransactionActiveModal;","map":{"version":3,"sources":["/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/packages/WebApp/src/Modules/TransactionActiveModal.tsx"],"names":["React","useState","makeStyles","createStyles","Button","Typography","CustomModal","useStyles","animation","constants","palette","typography","root","width","inner","maxWidth","display","flexDirection","padding","generalUnit","bottom","top","transform","left","border","borderRadius","transitionDuration","borderTop","additional","heading","marginBottom","stepIndicator","h4","height","marginRight","justifyContent","alignItems","color","content","buttons","marginTop","button","borderColor","backgroundColor","common","white","main","initCopy","TRANSACTION_STATE","TransactionActiveModal","open","close","classes","state","setState","inTransit","signatures","setSignatures","init","filter","sig","signed","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,UAAT,EAAqBC,YAArB,QAAiD,uBAAjD;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,2BAAnC;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC,CAAC;AAAEM,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA,OAAxB;AAAiCC,EAAAA;AAAjC,CAAD,KAC3BR,YAAY,CAAC;AACXS,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADK;AAIXC,EAAAA,KAAK,EAAE;AACLD,IAAAA,KAAK,EAAE,iBADF;AAELE,IAAAA,QAAQ,EAAE,kBAFL;AAGLC,IAAAA,OAAO,EAAE,MAHJ;AAILC,IAAAA,aAAa,EAAE,KAJV;AAKLC,IAAAA,OAAO,EAAG,GAAET,SAAS,CAACU,WAAV,GAAwB,CAAE,MAAKV,SAAS,CAACU,WAAV,GAAwB,CAAE,IALhE;AAMLC,IAAAA,MAAM,EAAE,CANH;AAOLC,IAAAA,GAAG,EAAE,OAPA;AAQLC,IAAAA,SAAS,EAAE,OARN;AASLC,IAAAA,IAAI,EAAE,CATD;AAULC,IAAAA,MAAM,EAAE,MAVH;AAWLC,IAAAA,YAAY,EAAE,CAXT;AAYLC,IAAAA,kBAAkB,EAAG,GAAElB,SAAS,CAACc,SAAU,IAZtC;AAaLK,IAAAA,SAAS,EAAG,aAAYjB,OAAO,CAACkB,UAAR,CAAmB,UAAnB,EAA+B,CAA/B,CAAkC;AAbrD,GAJI;AAmBXC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAErB,SAAS,CAACU;AADjB,GAnBE;AAsBXY,EAAAA,aAAa,EAAE,EACb,GAAGpB,UAAU,CAACqB,EADD;AAEbC,IAAAA,MAAM,EAAE,EAFK;AAGbpB,IAAAA,KAAK,EAAE,EAHM;AAIbqB,IAAAA,WAAW,EAAEzB,SAAS,CAACU,WAAV,GAAwB,CAJxB;AAKbM,IAAAA,YAAY,EAAE,KALD;AAMbT,IAAAA,OAAO,EAAE,MANI;AAObmB,IAAAA,cAAc,EAAE,QAPH;AAQbC,IAAAA,UAAU,EAAE,QARC;AASbC,IAAAA,KAAK,EAAE3B,OAAO,CAACkB,UAAR,CAAmB,UAAnB,EAA+B,CAA/B,CATM;AAUbJ,IAAAA,MAAM,EAAG,aAAYd,OAAO,CAACkB,UAAR,CAAmB,UAAnB,EAA+B,CAA/B,CAAkC;AAV1C,GAtBJ;AAkCXU,EAAAA,OAAO,EAAE;AACPtB,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,aAAa,EAAE;AAFR,GAlCE;AAsCXsB,EAAAA,OAAO,EAAE;AACPvB,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,aAAa,EAAE,KAFR;AAGPuB,IAAAA,SAAS,EAAE/B,SAAS,CAACU,WAAV,GAAwB,CAH5B;AAIP,aAAS;AACPe,MAAAA,WAAW,EAAEzB,SAAS,CAACU;AADhB;AAJF,GAtCE;AA8CXsB,EAAAA,MAAM,EAAE;AACNC,IAAAA,WAAW,EAAEhC,OAAO,CAACkB,UAAR,CAAmB,MAAnB,EAA2B,CAA3B,CADP;AAENS,IAAAA,KAAK,EAAE3B,OAAO,CAACkB,UAAR,CAAmB,MAAnB,EAA2B,CAA3B,CAFD;AAGN,eAAW;AACTc,MAAAA,WAAW,EAAEhC,OAAO,CAACkB,UAAR,CAAmB,MAAnB,EAA2B,CAA3B,CADJ;AAETe,MAAAA,eAAe,EAAEjC,OAAO,CAACkB,UAAR,CAAmB,MAAnB,EAA2B,CAA3B,CAFR;AAGTS,MAAAA,KAAK,EAAE3B,OAAO,CAACkC,MAAR,CAAeC,KAAf,CAAqBC;AAHnB;AAHL,GA9CG;AAuDXC,EAAAA,QAAQ,EAAE;AACR/B,IAAAA,OAAO,EAAE,MADD;AAERC,IAAAA,aAAa,EAAE,QAFP;AAGRkB,IAAAA,cAAc,EAAE,eAHR;AAIR,yBAAqB;AACnBK,MAAAA,SAAS,EAAE/B,SAAS,CAACU,WAAV,GAAwB,GADhB;AAEnBW,MAAAA,YAAY,EAAErB,SAAS,CAACU,WAAV,GAAwB;AAFnB;AAJb;AAvDC,CAAD,CADc,CAA5B;IAoEK6B,iB;;WAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;GAAAA,iB,KAAAA,iB;;AAgBL,MAAMC,sBAA8D,GAAG,CAAC;AACtEC,EAAAA,IADsE;AAEtEC,EAAAA;AAFsE,CAAD,KAGnC;AAClC,QAAMC,OAAO,GAAG7C,SAAS,EAAzB;AAEA,QAAM,CAAC8C,KAAD,EAAQC,QAAR,IAAoBrD,QAAQ,CAAoB+C,iBAAiB,CAACO,SAAtC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BxD,QAAQ,CAAe,EAAf,CAA5C;AAEA,sBACE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAEmD,OAAO,CAACxC,IADrB;AAEE,IAAA,aAAa,EAAE;AACbE,MAAAA,KAAK,EAAEsC,OAAO,CAACtC;AADF,KAFjB;AAKE,IAAA,MAAM,EAAEoC,IALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEE,OAAO,CAACrB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIsB,KAAK,KAAKL,iBAAiB,CAACU,IAA5B,GACI,GADJ,GAEIL,KAAK,KAAKL,iBAAiB,CAACO,SAA5B,GACA,GADA,GAEA,KANR,CADF,CAPF,eAkBE;AAAS,IAAA,SAAS,EAAEH,OAAO,CAACd,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEc,OAAO,CAACvB,OAA/B;AAAwC,IAAA,OAAO,EAAC,IAAhD;AAAqD,IAAA,SAAS,EAAC,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIwB,KAAK,KAAKL,iBAAiB,CAACU,IAA5B,GACE,uBADF,GAEG,eAAcF,UAAU,CAACG,MAAX,CAAmBC,GAAD,IAASA,GAAG,CAACC,MAAJ,KAAe,WAA1C,EAAuDC,MAAO,IAAGN,UAAU,CAACM,MAAO,qBAJxG,CADF,EASIT,KAAK,KAAKL,iBAAiB,CAACU,IAA5B,gBAEE;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACL,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAJF,CAFF,GAYEM,KAAK,KAAKL,iBAAiB,CAACO,SAA5B,gBAEA,yCAFA,gBAKA;AAAS,IAAA,SAAS,EAAEH,OAAO,CAACb,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEY,KADX;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,SAAS,EAAEC,OAAO,CAACX,MAHrB;AAIE,IAAA,OAAO,EAAC,SAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eASE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,SAAS,EAAEW,OAAO,CAACX,MAAxC;AAAgD,IAAA,OAAO,EAAC,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BATF,CA1BN,CAlBF,CADF;AAgED,CAzED;;AA2EA,eAAeQ,sBAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { makeStyles, createStyles, ITheme } from \"@imploy/common-themes\";\nimport { Button, Typography } from \"@imploy/common-components\";\nimport CustomModal from \"../Components/Custom/CustomModal\";\n\nconst useStyles = makeStyles(({ animation, constants, palette, typography }: ITheme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    inner: {\n      width: \"100% !important\",\n      maxWidth: \"unset !important\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      padding: `${constants.generalUnit * 6}px ${constants.generalUnit * 7}px`,\n      bottom: 0,\n      top: \"unset\",\n      transform: \"unset\",\n      left: 0,\n      border: \"none\",\n      borderRadius: 0,\n      transitionDuration: `${animation.transform}ms`,\n      borderTop: `6px solid ${palette.additional[\"geekblue\"][5]}`\n    },\n    heading: {\n      marginBottom: constants.generalUnit,\n    },\n    stepIndicator: {\n      ...typography.h4,\n      height: 40,\n      width: 40,\n      marginRight: constants.generalUnit * 2,\n      borderRadius: \"50%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      color: palette.additional[\"geekblue\"][6],\n      border: `1px solid ${palette.additional[\"geekblue\"][4]}`,\n    },\n    content: {\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    buttons: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      marginTop: constants.generalUnit * 5,\n      \"& > *\": {\n        marginRight: constants.generalUnit,\n      },\n    },\n    button: {\n      borderColor: palette.additional[\"gray\"][8],\n      color: palette.additional[\"gray\"][8],\n      \"&:hover\": {\n        borderColor: palette.additional[\"gray\"][8],\n        backgroundColor: palette.additional[\"gray\"][8],\n        color: palette.common.white.main,\n      },\n    },\n    initCopy: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      \"& > *:first-child\": {\n        marginTop: constants.generalUnit * 3.5,\n        marginBottom: constants.generalUnit * 8\n      }\n    }\n  })\n);\n\nenum TRANSACTION_STATE {\n  init = \"init\",\n  inTransit = \"inTransit\",\n  done = \"done\"\n}\n\ninterface ISignature {\n  address: string\n  signed: \"pending\" | \"confirmed\" | \"rejected\"\n}\n\ninterface ITransactionActiveModalProps {\n  open: boolean;\n  close: () => void;\n}\n\nconst TransactionActiveModal: React.FC<ITransactionActiveModalProps> = ({\n  open,\n  close,\n}: ITransactionActiveModalProps) => {\n  const classes = useStyles();\n\n  const [state, setState] = useState<TRANSACTION_STATE>(TRANSACTION_STATE.inTransit)\n  const [signatures, setSignatures] = useState<ISignature[]>([])\n\n  return (\n    <CustomModal\n      className={classes.root}\n      injectedClass={{\n        inner: classes.inner,\n      }}\n      active={open}\n    >\n      <section>\n        <div className={classes.stepIndicator}>\n          {\n            state === TRANSACTION_STATE.init \n              ? \"1\"\n              : state === TRANSACTION_STATE.inTransit \n              ? \"2\"\n              : \"3  \"\n          }\n        </div>\n      </section>\n      <section className={classes.content}>\n        <Typography className={classes.heading} variant=\"h3\" component=\"h3\">\n          {\n            state === TRANSACTION_STATE.init \n            ? \"Initializing Transfer\"\n            : `In Transit (${signatures.filter((sig) => sig.signed === \"confirmed\").length}/${signatures.length} signatures needed)`\n          }\n        </Typography>\n        {\n          state === TRANSACTION_STATE.init \n          ? (\n            <div className={classes.initCopy}>\n              <Typography>\n                Deposit pending...\n              </Typography>\n              <Typography>\n                This should take a few minutes.\n                Please do not refresh or leave the page.\n              </Typography>\n            </div>\n          )\n          : state === TRANSACTION_STATE.inTransit \n          ? (\n            <></>\n          ) \n          : (\n            <section className={classes.buttons}>\n              <Button\n                onClick={close}\n                size=\"small\"\n                className={classes.button}\n                variant=\"outline\"\n              >\n                View transaction\n              </Button>\n              <Button size=\"small\" className={classes.button} variant=\"outline\">\n                Start new transfer\n              </Button>\n            </section>\n          )\n        }\n       \n      </section>\n    </CustomModal>\n  );\n};\n\nexport default TransactionActiveModal;\n"]},"metadata":{},"sourceType":"module"}