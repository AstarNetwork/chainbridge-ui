{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar crypto = require('crypto');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar SDK = require('gridplus-sdk');\n\nvar keyringType = 'Lattice Hardware';\nvar HARDENED_OFFSET = 0x80000000;\nvar PER_PAGE = 5;\n\nvar LatticeKeyring = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(LatticeKeyring, _EventEmitter);\n\n  var _super = _createSuper(LatticeKeyring);\n\n  function LatticeKeyring() {\n    var _this;\n\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, LatticeKeyring);\n\n    _this = _super.call(this);\n    _this.type = keyringType;\n\n    _this._resetDefaults();\n\n    _this.deserialize(opts);\n\n    return _this;\n  } //-------------------------------------------------------------------\n  // Keyring API (per `https://github.com/MetaMask/eth-simple-keyring`)\n  //-------------------------------------------------------------------\n\n\n  _createClass(LatticeKeyring, [{\n    key: \"deserialize\",\n    value: function deserialize() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (opts.creds) this.creds = opts.creds;\n      if (opts.accounts) this.accounts = opts.accounts;\n      if (opts.walletUID) this.walletUID = opts.walletUID;\n      if (opts.name) this.name = opts.name;\n      if (opts.network) this.network = opts.network;\n      return Promise.resolve();\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return Promise.resolve({\n        creds: this.creds,\n        accounts: this.accounts,\n        walletUID: this.walletUID,\n        name: this.name,\n        network: this.network\n      });\n    }\n  }, {\n    key: \"isUnlocked\",\n    value: function isUnlocked() {\n      return this._hasCreds() && this._hasSession();\n    }\n  }, {\n    key: \"setHdPath\",\n    value: function setHdPath() {\n      console.warn(\"setHdPath not implemented.\");\n      return;\n    } // Initialize a session with the Lattice1 device using the GridPlus SDK\n\n  }, {\n    key: \"unlock\",\n    value: function unlock() {\n      var _this2 = this;\n\n      var updateData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return new Promise(function (resolve, reject) {\n        _this2._getCreds().then(function (creds) {\n          if (creds) {\n            _this2.creds.deviceID = creds.deviceID;\n            _this2.creds.password = creds.password;\n          }\n\n          return _this2._initSession();\n        }).then(function () {\n          return _this2._connect(updateData);\n        }).then(function () {\n          return resolve('Unlocked');\n        })[\"catch\"](function (err) {\n          return reject(Error(err));\n        });\n      });\n    } // Add addresses to the local store and return the full result\n\n  }, {\n    key: \"addAccounts\",\n    value: function addAccounts() {\n      var _this3 = this;\n\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return new Promise(function (resolve, reject) {\n        _this3.unlock().then(function () {\n          return _this3._fetchAddresses(n, _this3.unlockedAccount);\n        }).then(function (addrs) {\n          var _this3$accounts; // Splice the new account(s) into `this.accounts`\n\n\n          _this3.accounts.splice(_this3.unlockedAccount, n);\n\n          (_this3$accounts = _this3.accounts).splice.apply(_this3$accounts, [_this3.unlockedAccount, 0].concat(_toConsumableArray(addrs)));\n\n          return resolve(_this3.accounts);\n        })[\"catch\"](function (err) {\n          return reject(err);\n        });\n      });\n    } // Return the local store of addresses\n\n  }, {\n    key: \"getAccounts\",\n    value: function getAccounts() {\n      return Promise.resolve(this.accounts ? this.accounts.slice() : [].slice());\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(address, tx) {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this4._unlockAndFindAccount(address).then(function (addrIdx) {\n          // Build the Lattice request data and make request\n          var txData = {\n            chainId: tx.getChainId(),\n            nonce: Number(\"0x\".concat(tx.nonce.toString('hex'))) || 0,\n            gasPrice: Number(\"0x\".concat(tx.gasPrice.toString('hex'))),\n            gasLimit: Number(\"0x\".concat(tx.gasLimit.toString('hex'))),\n            to: \"0x\".concat(tx.to.toString('hex')),\n            value: Number(\"0x\".concat(tx.value.toString('hex'))),\n            data: tx.data.length === 0 ? null : \"0x\".concat(tx.data.toString('hex')),\n            signerPath: [HARDENED_OFFSET + 44, HARDENED_OFFSET + 60, HARDENED_OFFSET, 0, addrIdx]\n          };\n          return _this4._signTxData(txData);\n        }).then(function (signedTx) {\n          // Add the sig params. `signedTx = { sig: { v, r, s }, tx, txHash}`\n          if (!signedTx.sig || !signedTx.sig.v || !signedTx.sig.r || !signedTx.sig.s) return reject(Error('No signature returned'));\n          tx.v = signedTx.sig.v;\n          tx.r = Buffer.from(signedTx.sig.r, 'hex');\n          tx.s = Buffer.from(signedTx.sig.s, 'hex');\n          return resolve(tx);\n        })[\"catch\"](function (err) {\n          return reject(Error(err));\n        });\n      });\n    }\n  }, {\n    key: \"signMessage\",\n    value: function signMessage(address, data) {\n      console.warn('NOTE: signMessage is currently a proxy for signPersonalMessage!');\n      return this.signPersonalMessage(address, data);\n    }\n  }, {\n    key: \"signPersonalMessage\",\n    value: function signPersonalMessage(address, data) {\n      var _this5 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this5._unlockAndFindAccount(address).then(function (addrIdx) {\n          var req = {\n            currency: 'ETH_MSG',\n            data: {\n              protocol: 'signPersonal',\n              payload: data,\n              signerPath: [HARDENED_OFFSET + 44, HARDENED_OFFSET + 60, HARDENED_OFFSET, 0, addrIdx]\n            }\n          };\n          if (!_this5._hasSession()) return reject('No SDK session started. Cannot sign transaction.');\n\n          _this5.sdkSession.sign(req, function (err, res) {\n            if (err) return reject(err);\n            if (!res.sig) return reject('No signature returned');\n            var v = (res.sig.v - 27).toString(16);\n            if (v.length < 2) v = \"0\".concat(v);\n            return resolve(\"0x\".concat(res.sig.r).concat(res.sig.s).concat(v));\n          });\n        });\n      });\n    }\n  }, {\n    key: \"exportAccount\",\n    value: function exportAccount(address) {\n      return Promise.reject(Error('exportAccount not supported by this device'));\n    }\n  }, {\n    key: \"removeAccount\",\n    value: function removeAccount(address) {\n      // We only allow one account at a time, so removing any account\n      // should result in a state reset. The user will need to reconnect\n      // to the Lattice\n      this.forgetDevice();\n    }\n  }, {\n    key: \"getFirstPage\",\n    value: function getFirstPage() {\n      this.page = 0;\n      return this._getPage(1);\n    }\n  }, {\n    key: \"getNextPage\",\n    value: function getNextPage() {\n      return this.getFirstPage();\n    }\n  }, {\n    key: \"getPreviousPage\",\n    value: function getPreviousPage() {\n      return this.getFirstPage();\n    }\n  }, {\n    key: \"setAccountToUnlock\",\n    value: function setAccountToUnlock(index) {\n      this.unlockedAccount = parseInt(index, 10);\n    }\n  }, {\n    key: \"forgetDevice\",\n    value: function forgetDevice() {\n      this._resetDefaults();\n    } //-------------------------------------------------------------------\n    // Internal methods and interface to SDK\n    //-------------------------------------------------------------------\n\n  }, {\n    key: \"_unlockAndFindAccount\",\n    value: function _unlockAndFindAccount(address) {\n      var _this6 = this;\n\n      return new Promise(function (resolve, reject) {\n        // NOTE: We are passing `false` here because we do NOT want\n        // state data to be updated as a result of a transaction request.\n        // It is possible the user inserted or removed a SafeCard and\n        // will not be able to sign this transaction. If that is the\n        // case, we just want to return an error message\n        _this6.unlock(false).then(function () {\n          return _this6.getAccounts();\n        }).then(function (addrs) {\n          // Find the signer in our current set of accounts\n          // If we can't find it, return an error\n          var addrIdx = null;\n          addrs.forEach(function (addr, i) {\n            if (address.toLowerCase() === addr.toLowerCase()) addrIdx = i;\n          });\n          if (addrIdx === null) return reject('Signer not present');\n          return resolve(addrIdx);\n        })[\"catch\"](function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_resetDefaults\",\n    value: function _resetDefaults() {\n      this.accounts = [];\n      this.isLocked = true;\n      this.creds = {\n        deviceID: null,\n        password: null\n      };\n      this.walletUID = null;\n      this.sdkSession = null;\n      this.page = 0;\n      this.unlockedAccount = 0;\n      this.network = null;\n    }\n  }, {\n    key: \"_getCreds\",\n    value: function _getCreds() {\n      var _this7 = this;\n\n      return new Promise(function (resolve, reject) {\n        // We only need to setup if we don't have a deviceID\n        if (_this7._hasCreds()) return resolve(); // If we are not aware of what Lattice we should be talking to,\n        // we need to open a window that lets the user go through the\n        // pairing or connection process.\n\n        var name = _this7.name ? _this7.name : 'Unknown';\n        var base = 'https://wallet.gridplus.io';\n        if (_this7.network && _this7.network !== 'mainnet') base = 'https://gridplus-web-wallet-dev.herokuapp.com';\n        var url = \"\".concat(base, \"?keyring=\").concat(name);\n        if (_this7.network) url += \"&network=\".concat(_this7.network);\n        var popup = window.open(url);\n        popup.postMessage('GET_LATTICE_CREDS', base); // PostMessage handler\n\n        function receiveMessage(event) {\n          // Ensure origin\n          if (event.origin !== base) return; // Parse response data\n\n          try {\n            var data = JSON.parse(event.data);\n            if (!data.deviceID || !data.password) return reject(Error('Invalid credentials returned from Lattice.'));\n            return resolve(data);\n          } catch (err) {\n            return reject(err);\n          }\n        }\n\n        window.addEventListener(\"message\", receiveMessage, false);\n      });\n    } // [re]connect to the Lattice. This should be done frequently to ensure\n    // the expected wallet UID is still the one active in the Lattice.\n    // This will handle SafeCard insertion/removal events.\n    // updateData - true if you want to overwrite walletUID and accounts in\n    //              the event that we find we are not synced.\n    //              If left false and we notice a new walletUID, we will\n    //              return an error.\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(updateData) {\n      var _this8 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this8.sdkSession.connect(_this8.creds.deviceID, function (err) {\n          if (err) return reject(err); // Save the current wallet UID\n\n          var activeWallet = _this8.sdkSession.getActiveWallet();\n\n          if (!activeWallet || !activeWallet.uid) return reject(\"No active wallet\");\n          var newUID = activeWallet.uid.toString('hex'); // If we fetched a walletUID that does not match our current one,\n          // reset accounts and update the known UID\n\n          if (newUID != _this8.walletUID) {\n            // If we don't want to update data, return an error\n            if (updateData === false) return reject('Wallet has changed! Please reconnect.'); // By default we should clear out accounts and update with\n            // the new walletUID. We should NOT fill in the accounts yet,\n            // as we reserve that functionality to `addAccounts`\n\n            _this8.accounts = [];\n            _this8.walletUID = newUID;\n          }\n\n          return resolve();\n        });\n      });\n    }\n  }, {\n    key: \"_initSession\",\n    value: function _initSession() {\n      var _this9 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this9._hasSession()) return resolve();\n\n        try {\n          var url = 'https://signing.gridpl.us';\n          if (_this9.network && _this9.network !== 'mainnet') url = 'https://signing.staging-gridpl.us';\n          var setupData = {\n            name: _this9.name,\n            baseUrl: url,\n            crypto: crypto,\n            timeout: 120000,\n            privKey: _this9._genSessionKey(),\n            network: _this9.network\n          };\n          _this9.sdkSession = new SDK.Client(setupData);\n          return resolve();\n        } catch (err) {\n          return reject(err);\n        }\n      });\n    }\n  }, {\n    key: \"_fetchAddresses\",\n    value: function _fetchAddresses() {\n      var _this10 = this;\n\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return new Promise(function (resolve, reject) {\n        if (!_this10._hasSession()) return reject('No SDK session started. Cannot fetch addresses.'); // The Lattice does not allow for us to skip indices.\n\n        if (i > _this10.accounts.length) return reject(\"Requested address is out of bounds. You may only request index <\".concat(_this10.accounts.length)); // If we have already cached the address(es), we don't need to do it again\n\n        if (_this10.accounts.length > i) return resolve(_this10.accounts.slice(i, n)); // Make the request to get the requested address\n\n        var addrData = {\n          currency: 'ETH',\n          startPath: [HARDENED_OFFSET + 44, HARDENED_OFFSET + 60, HARDENED_OFFSET, 0, i],\n          n: n // Only request one at a time. This module only supports ETH, so no gap limits\n\n        };\n\n        _this10.sdkSession.getAddresses(addrData, function (err, addrs) {\n          if (err) return reject(Error(\"Error getting addresses: \".concat(err))); // Sanity check -- if this returned 0 addresses, handle the error\n\n          if (addrs.length < 1) return reject('No addresses returned'); // Return the addresses we fetched *without* updating state\n\n          return resolve(addrs);\n        });\n      });\n    }\n  }, {\n    key: \"_signTxData\",\n    value: function _signTxData(txData) {\n      var _this11 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this11._hasSession()) return reject('No SDK session started. Cannot sign transaction.');\n\n        _this11.sdkSession.sign({\n          currency: 'ETH',\n          data: txData\n        }, function (err, res) {\n          if (err) return reject(err);\n          if (!res.tx) return reject('No transaction payload returned.');\n          return resolve(res);\n        });\n      });\n    }\n  }, {\n    key: \"_getPage\",\n    value: function _getPage() {\n      var _this12 = this;\n\n      var increment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return new Promise(function (resolve, reject) {\n        _this12.page += increment;\n        if (_this12.page <= 0) _this12.page = 1;\n        var start = PER_PAGE * (_this12.page - 1);\n        var to = PER_PAGE * _this12.page;\n\n        _this12.unlock().then(function () {\n          // V1: We will only support export of one (the first) address\n          return _this12._fetchAddresses(1, 0); //-----------\n        }).then(function (addrs) {\n          // Build some account objects from the addresses\n          var localAccounts = [];\n          addrs.forEach(function (addr, i) {\n            localAccounts.push({\n              address: addr,\n              balance: null,\n              index: start + i\n            });\n          });\n          return resolve(localAccounts);\n        })[\"catch\"](function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_hasCreds\",\n    value: function _hasCreds() {\n      return this.creds.deviceID !== null && this.creds.password !== null && this.name;\n    }\n  }, {\n    key: \"_hasSession\",\n    value: function _hasSession() {\n      return this.sdkSession && this.walletUID;\n    }\n  }, {\n    key: \"_genSessionKey\",\n    value: function _genSessionKey() {\n      if (!this._hasCreds()) throw new Error('No credentials -- cannot create session key!');\n      var buf = Buffer.concat([Buffer.from(this.creds.password), Buffer.from(this.creds.deviceID), Buffer.from(this.name)]);\n      return crypto.createHash('sha256').update(buf).digest();\n    }\n  }]);\n\n  return LatticeKeyring;\n}(EventEmitter);\n\nLatticeKeyring.type = keyringType;\nmodule.exports = LatticeKeyring;","map":{"version":3,"sources":["/home/ryann/Documents/Repos/ChainSafe/chainbridge-ui/node_modules/bnc-onboard/dist/esm/index-d95dd206.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","toString","call","slice","name","Array","from","test","iter","isArray","len","length","i","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Date","e","getPrototypeOf","crypto","require","EventEmitter","SDK","keyringType","HARDENED_OFFSET","PER_PAGE","LatticeKeyring","_EventEmitter","_super","_this","opts","undefined","type","_resetDefaults","deserialize","creds","accounts","walletUID","network","Promise","resolve","serialize","isUnlocked","_hasCreds","_hasSession","setHdPath","console","warn","unlock","_this2","updateData","reject","_getCreds","then","deviceID","password","_initSession","_connect","err","Error","addAccounts","_this3","_fetchAddresses","unlockedAccount","addrs","_this3$accounts","splice","concat","getAccounts","signTransaction","address","tx","_this4","_unlockAndFindAccount","addrIdx","txData","chainId","getChainId","nonce","Number","gasPrice","gasLimit","to","data","signerPath","_signTxData","signedTx","sig","v","r","s","Buffer","signMessage","signPersonalMessage","_this5","req","currency","protocol","payload","sdkSession","sign","res","exportAccount","removeAccount","forgetDevice","getFirstPage","page","_getPage","getNextPage","getPreviousPage","setAccountToUnlock","index","parseInt","_this6","forEach","addr","toLowerCase","isLocked","_this7","base","url","popup","window","open","postMessage","receiveMessage","event","origin","JSON","parse","addEventListener","_this8","connect","activeWallet","getActiveWallet","uid","newUID","_this9","setupData","baseUrl","timeout","privKey","_genSessionKey","Client","_this10","addrData","startPath","getAddresses","_this11","_this12","increment","start","localAccounts","push","balance","buf","createHash","update","digest","module","exports"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar crypto = require('crypto');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar SDK = require('gridplus-sdk');\n\nvar keyringType = 'Lattice Hardware';\nvar HARDENED_OFFSET = 0x80000000;\nvar PER_PAGE = 5;\n\nvar LatticeKeyring = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(LatticeKeyring, _EventEmitter);\n\n  var _super = _createSuper(LatticeKeyring);\n\n  function LatticeKeyring() {\n    var _this;\n\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, LatticeKeyring);\n\n    _this = _super.call(this);\n    _this.type = keyringType;\n\n    _this._resetDefaults();\n\n    _this.deserialize(opts);\n\n    return _this;\n  } //-------------------------------------------------------------------\n  // Keyring API (per `https://github.com/MetaMask/eth-simple-keyring`)\n  //-------------------------------------------------------------------\n\n\n  _createClass(LatticeKeyring, [{\n    key: \"deserialize\",\n    value: function deserialize() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (opts.creds) this.creds = opts.creds;\n      if (opts.accounts) this.accounts = opts.accounts;\n      if (opts.walletUID) this.walletUID = opts.walletUID;\n      if (opts.name) this.name = opts.name;\n      if (opts.network) this.network = opts.network;\n      return Promise.resolve();\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return Promise.resolve({\n        creds: this.creds,\n        accounts: this.accounts,\n        walletUID: this.walletUID,\n        name: this.name,\n        network: this.network\n      });\n    }\n  }, {\n    key: \"isUnlocked\",\n    value: function isUnlocked() {\n      return this._hasCreds() && this._hasSession();\n    }\n  }, {\n    key: \"setHdPath\",\n    value: function setHdPath() {\n      console.warn(\"setHdPath not implemented.\");\n      return;\n    } // Initialize a session with the Lattice1 device using the GridPlus SDK\n\n  }, {\n    key: \"unlock\",\n    value: function unlock() {\n      var _this2 = this;\n\n      var updateData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return new Promise(function (resolve, reject) {\n        _this2._getCreds().then(function (creds) {\n          if (creds) {\n            _this2.creds.deviceID = creds.deviceID;\n            _this2.creds.password = creds.password;\n          }\n\n          return _this2._initSession();\n        }).then(function () {\n          return _this2._connect(updateData);\n        }).then(function () {\n          return resolve('Unlocked');\n        })[\"catch\"](function (err) {\n          return reject(Error(err));\n        });\n      });\n    } // Add addresses to the local store and return the full result\n\n  }, {\n    key: \"addAccounts\",\n    value: function addAccounts() {\n      var _this3 = this;\n\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return new Promise(function (resolve, reject) {\n        _this3.unlock().then(function () {\n          return _this3._fetchAddresses(n, _this3.unlockedAccount);\n        }).then(function (addrs) {\n          var _this3$accounts;\n\n          // Splice the new account(s) into `this.accounts`\n          _this3.accounts.splice(_this3.unlockedAccount, n);\n\n          (_this3$accounts = _this3.accounts).splice.apply(_this3$accounts, [_this3.unlockedAccount, 0].concat(_toConsumableArray(addrs)));\n\n          return resolve(_this3.accounts);\n        })[\"catch\"](function (err) {\n          return reject(err);\n        });\n      });\n    } // Return the local store of addresses\n\n  }, {\n    key: \"getAccounts\",\n    value: function getAccounts() {\n      return Promise.resolve(this.accounts ? this.accounts.slice() : [].slice());\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(address, tx) {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this4._unlockAndFindAccount(address).then(function (addrIdx) {\n          // Build the Lattice request data and make request\n          var txData = {\n            chainId: tx.getChainId(),\n            nonce: Number(\"0x\".concat(tx.nonce.toString('hex'))) || 0,\n            gasPrice: Number(\"0x\".concat(tx.gasPrice.toString('hex'))),\n            gasLimit: Number(\"0x\".concat(tx.gasLimit.toString('hex'))),\n            to: \"0x\".concat(tx.to.toString('hex')),\n            value: Number(\"0x\".concat(tx.value.toString('hex'))),\n            data: tx.data.length === 0 ? null : \"0x\".concat(tx.data.toString('hex')),\n            signerPath: [HARDENED_OFFSET + 44, HARDENED_OFFSET + 60, HARDENED_OFFSET, 0, addrIdx]\n          };\n          return _this4._signTxData(txData);\n        }).then(function (signedTx) {\n          // Add the sig params. `signedTx = { sig: { v, r, s }, tx, txHash}`\n          if (!signedTx.sig || !signedTx.sig.v || !signedTx.sig.r || !signedTx.sig.s) return reject(Error('No signature returned'));\n          tx.v = signedTx.sig.v;\n          tx.r = Buffer.from(signedTx.sig.r, 'hex');\n          tx.s = Buffer.from(signedTx.sig.s, 'hex');\n          return resolve(tx);\n        })[\"catch\"](function (err) {\n          return reject(Error(err));\n        });\n      });\n    }\n  }, {\n    key: \"signMessage\",\n    value: function signMessage(address, data) {\n      console.warn('NOTE: signMessage is currently a proxy for signPersonalMessage!');\n      return this.signPersonalMessage(address, data);\n    }\n  }, {\n    key: \"signPersonalMessage\",\n    value: function signPersonalMessage(address, data) {\n      var _this5 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this5._unlockAndFindAccount(address).then(function (addrIdx) {\n          var req = {\n            currency: 'ETH_MSG',\n            data: {\n              protocol: 'signPersonal',\n              payload: data,\n              signerPath: [HARDENED_OFFSET + 44, HARDENED_OFFSET + 60, HARDENED_OFFSET, 0, addrIdx]\n            }\n          };\n          if (!_this5._hasSession()) return reject('No SDK session started. Cannot sign transaction.');\n\n          _this5.sdkSession.sign(req, function (err, res) {\n            if (err) return reject(err);\n            if (!res.sig) return reject('No signature returned');\n            var v = (res.sig.v - 27).toString(16);\n            if (v.length < 2) v = \"0\".concat(v);\n            return resolve(\"0x\".concat(res.sig.r).concat(res.sig.s).concat(v));\n          });\n        });\n      });\n    }\n  }, {\n    key: \"exportAccount\",\n    value: function exportAccount(address) {\n      return Promise.reject(Error('exportAccount not supported by this device'));\n    }\n  }, {\n    key: \"removeAccount\",\n    value: function removeAccount(address) {\n      // We only allow one account at a time, so removing any account\n      // should result in a state reset. The user will need to reconnect\n      // to the Lattice\n      this.forgetDevice();\n    }\n  }, {\n    key: \"getFirstPage\",\n    value: function getFirstPage() {\n      this.page = 0;\n      return this._getPage(1);\n    }\n  }, {\n    key: \"getNextPage\",\n    value: function getNextPage() {\n      return this.getFirstPage();\n    }\n  }, {\n    key: \"getPreviousPage\",\n    value: function getPreviousPage() {\n      return this.getFirstPage();\n    }\n  }, {\n    key: \"setAccountToUnlock\",\n    value: function setAccountToUnlock(index) {\n      this.unlockedAccount = parseInt(index, 10);\n    }\n  }, {\n    key: \"forgetDevice\",\n    value: function forgetDevice() {\n      this._resetDefaults();\n    } //-------------------------------------------------------------------\n    // Internal methods and interface to SDK\n    //-------------------------------------------------------------------\n\n  }, {\n    key: \"_unlockAndFindAccount\",\n    value: function _unlockAndFindAccount(address) {\n      var _this6 = this;\n\n      return new Promise(function (resolve, reject) {\n        // NOTE: We are passing `false` here because we do NOT want\n        // state data to be updated as a result of a transaction request.\n        // It is possible the user inserted or removed a SafeCard and\n        // will not be able to sign this transaction. If that is the\n        // case, we just want to return an error message\n        _this6.unlock(false).then(function () {\n          return _this6.getAccounts();\n        }).then(function (addrs) {\n          // Find the signer in our current set of accounts\n          // If we can't find it, return an error\n          var addrIdx = null;\n          addrs.forEach(function (addr, i) {\n            if (address.toLowerCase() === addr.toLowerCase()) addrIdx = i;\n          });\n          if (addrIdx === null) return reject('Signer not present');\n          return resolve(addrIdx);\n        })[\"catch\"](function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_resetDefaults\",\n    value: function _resetDefaults() {\n      this.accounts = [];\n      this.isLocked = true;\n      this.creds = {\n        deviceID: null,\n        password: null\n      };\n      this.walletUID = null;\n      this.sdkSession = null;\n      this.page = 0;\n      this.unlockedAccount = 0;\n      this.network = null;\n    }\n  }, {\n    key: \"_getCreds\",\n    value: function _getCreds() {\n      var _this7 = this;\n\n      return new Promise(function (resolve, reject) {\n        // We only need to setup if we don't have a deviceID\n        if (_this7._hasCreds()) return resolve(); // If we are not aware of what Lattice we should be talking to,\n        // we need to open a window that lets the user go through the\n        // pairing or connection process.\n\n        var name = _this7.name ? _this7.name : 'Unknown';\n        var base = 'https://wallet.gridplus.io';\n        if (_this7.network && _this7.network !== 'mainnet') base = 'https://gridplus-web-wallet-dev.herokuapp.com';\n        var url = \"\".concat(base, \"?keyring=\").concat(name);\n        if (_this7.network) url += \"&network=\".concat(_this7.network);\n        var popup = window.open(url);\n        popup.postMessage('GET_LATTICE_CREDS', base); // PostMessage handler\n\n        function receiveMessage(event) {\n          // Ensure origin\n          if (event.origin !== base) return; // Parse response data\n\n          try {\n            var data = JSON.parse(event.data);\n            if (!data.deviceID || !data.password) return reject(Error('Invalid credentials returned from Lattice.'));\n            return resolve(data);\n          } catch (err) {\n            return reject(err);\n          }\n        }\n\n        window.addEventListener(\"message\", receiveMessage, false);\n      });\n    } // [re]connect to the Lattice. This should be done frequently to ensure\n    // the expected wallet UID is still the one active in the Lattice.\n    // This will handle SafeCard insertion/removal events.\n    // updateData - true if you want to overwrite walletUID and accounts in\n    //              the event that we find we are not synced.\n    //              If left false and we notice a new walletUID, we will\n    //              return an error.\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(updateData) {\n      var _this8 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this8.sdkSession.connect(_this8.creds.deviceID, function (err) {\n          if (err) return reject(err); // Save the current wallet UID\n\n          var activeWallet = _this8.sdkSession.getActiveWallet();\n\n          if (!activeWallet || !activeWallet.uid) return reject(\"No active wallet\");\n          var newUID = activeWallet.uid.toString('hex'); // If we fetched a walletUID that does not match our current one,\n          // reset accounts and update the known UID\n\n          if (newUID != _this8.walletUID) {\n            // If we don't want to update data, return an error\n            if (updateData === false) return reject('Wallet has changed! Please reconnect.'); // By default we should clear out accounts and update with\n            // the new walletUID. We should NOT fill in the accounts yet,\n            // as we reserve that functionality to `addAccounts`\n\n            _this8.accounts = [];\n            _this8.walletUID = newUID;\n          }\n\n          return resolve();\n        });\n      });\n    }\n  }, {\n    key: \"_initSession\",\n    value: function _initSession() {\n      var _this9 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this9._hasSession()) return resolve();\n\n        try {\n          var url = 'https://signing.gridpl.us';\n          if (_this9.network && _this9.network !== 'mainnet') url = 'https://signing.staging-gridpl.us';\n          var setupData = {\n            name: _this9.name,\n            baseUrl: url,\n            crypto: crypto,\n            timeout: 120000,\n            privKey: _this9._genSessionKey(),\n            network: _this9.network\n          };\n          _this9.sdkSession = new SDK.Client(setupData);\n          return resolve();\n        } catch (err) {\n          return reject(err);\n        }\n      });\n    }\n  }, {\n    key: \"_fetchAddresses\",\n    value: function _fetchAddresses() {\n      var _this10 = this;\n\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return new Promise(function (resolve, reject) {\n        if (!_this10._hasSession()) return reject('No SDK session started. Cannot fetch addresses.'); // The Lattice does not allow for us to skip indices.\n\n        if (i > _this10.accounts.length) return reject(\"Requested address is out of bounds. You may only request index <\".concat(_this10.accounts.length)); // If we have already cached the address(es), we don't need to do it again\n\n        if (_this10.accounts.length > i) return resolve(_this10.accounts.slice(i, n)); // Make the request to get the requested address\n\n        var addrData = {\n          currency: 'ETH',\n          startPath: [HARDENED_OFFSET + 44, HARDENED_OFFSET + 60, HARDENED_OFFSET, 0, i],\n          n: n // Only request one at a time. This module only supports ETH, so no gap limits\n\n        };\n\n        _this10.sdkSession.getAddresses(addrData, function (err, addrs) {\n          if (err) return reject(Error(\"Error getting addresses: \".concat(err))); // Sanity check -- if this returned 0 addresses, handle the error\n\n          if (addrs.length < 1) return reject('No addresses returned'); // Return the addresses we fetched *without* updating state\n\n          return resolve(addrs);\n        });\n      });\n    }\n  }, {\n    key: \"_signTxData\",\n    value: function _signTxData(txData) {\n      var _this11 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this11._hasSession()) return reject('No SDK session started. Cannot sign transaction.');\n\n        _this11.sdkSession.sign({\n          currency: 'ETH',\n          data: txData\n        }, function (err, res) {\n          if (err) return reject(err);\n          if (!res.tx) return reject('No transaction payload returned.');\n          return resolve(res);\n        });\n      });\n    }\n  }, {\n    key: \"_getPage\",\n    value: function _getPage() {\n      var _this12 = this;\n\n      var increment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return new Promise(function (resolve, reject) {\n        _this12.page += increment;\n        if (_this12.page <= 0) _this12.page = 1;\n        var start = PER_PAGE * (_this12.page - 1);\n        var to = PER_PAGE * _this12.page;\n\n        _this12.unlock().then(function () {\n          // V1: We will only support export of one (the first) address\n          return _this12._fetchAddresses(1, 0); //-----------\n        }).then(function (addrs) {\n          // Build some account objects from the addresses\n          var localAccounts = [];\n          addrs.forEach(function (addr, i) {\n            localAccounts.push({\n              address: addr,\n              balance: null,\n              index: start + i\n            });\n          });\n          return resolve(localAccounts);\n        })[\"catch\"](function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_hasCreds\",\n    value: function _hasCreds() {\n      return this.creds.deviceID !== null && this.creds.password !== null && this.name;\n    }\n  }, {\n    key: \"_hasSession\",\n    value: function _hasSession() {\n      return this.sdkSession && this.walletUID;\n    }\n  }, {\n    key: \"_genSessionKey\",\n    value: function _genSessionKey() {\n      if (!this._hasCreds()) throw new Error('No credentials -- cannot create session key!');\n      var buf = Buffer.concat([Buffer.from(this.creds.password), Buffer.from(this.creds.deviceID), Buffer.from(this.name)]);\n      return crypto.createHash('sha256').update(buf).digest();\n    }\n  }]);\n\n  return LatticeKeyring;\n}(EventEmitter);\n\nLatticeKeyring.type = keyringType;\nmodule.exports = LatticeKeyring;"]},"metadata":{},"sourceType":"script"}